{"version":3,"file":"TrophyRoomView-HUSYzQpx.js","sources":["../../views/TrophyRoomView.tsx"],"sourcesContent":["\n\nimport React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { useLeague } from '../hooks/useLeague';\nimport { Widget } from '../components/ui/Widget';\nimport ErrorDisplay from '../components/core/ErrorDisplay';\nimport { AwardIcon } from '../components/icons/AwardIcon';\nimport { Avatar } from '../components/ui/Avatar';\nimport { motion } from 'framer-motion';\nimport { TrophyIcon } from '../components/icons/TrophyIcon';\nimport type { LeagueHistoryEntry, LeagueAward, Team } from '../types';\nimport { ArrowRightLeftIcon } from '../components/icons/ArrowRightLeftIcon';\nimport { ZapIcon } from '../components/icons/ZapIcon';\nimport { FlameIcon } from '../components/icons/FlameIcon';\n\nconst awardConfig: Record<LeagueAward['type'], { icon: React.ReactNode, color: string, label: string }> = {\n    HIGHEST_SCORE: { icon: <FlameIcon />, color: 'text-orange-400', label: 'Highest Weekly Score' },\n    BEST_RECORD: { icon: <AwardIcon />, color: 'text-green-400', label: 'Best Regular Season Record' },\n    BEST_TRADE: { icon: <ArrowRightLeftIcon />, color: 'text-purple-400', label: 'Trade of the Year' },\n    CLOSEST_MATCHUP: { icon: <ZapIcon />, color: 'text-blue-400', label: 'Closest Matchup' },\n};\n\n\nconst AwardCard: React.FC<{ award: LeagueAward, team: Team | undefined }> = ({ award, team }) => {\n    const config = awardConfig[award.type];\n    if (!config) return null;\n\n    return (\n        <div className=\"bg-white/5 p-3 rounded-lg\">\n            <div className=\"flex items-center gap-2 mb-1\">\n                <span className={config.color}>{config.icon}</span>\n                <h4 className=\"font-bold text-sm text-white\">{config.label}</h4>\n            </div>\n            <p className=\"text-xs text-gray-300\">\n                <span className=\"font-semibold text-yellow-300\">{team?.name || 'Unknown'}</span> - {award.details}\n            </p>\n        </div>\n    );\n};\n\nconst SeasonTrophies: React.FC<{ history: LeagueHistoryEntry, teams: Team[], index: number }> = ({ history, teams, index }) => {\n    const champion = teams.find(t => t.id === history.championTeamId);\n    \n    return (\n        <motion.div\n            {...{\n                initial: { opacity: 0, y: 20 },\n                animate: { opacity: 1, y: 0 },\n                transition: { delay: index * 0.15 },\n            }}\n        >\n            <Widget title={`${history.season} Season`}>\n                <div className=\"p-4 grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div className=\"md:col-span-1 bg-gradient-to-br from-yellow-800/30 to-yellow-900/40 rounded-lg p-4 text-center flex flex-col items-center justify-center\">\n                        <TrophyIcon className=\"w-16 h-16 text-yellow-300\" />\n                        <h3 className=\"font-display font-bold text-xl text-yellow-300 mt-2\">LEAGUE CHAMPION</h3>\n                        {champion && (\n                            <>\n                                <Avatar avatar={champion.avatar} className=\"w-20 h-20 text-5xl rounded-full my-3 ring-4 ring-yellow-400/50\" />\n                                <p className=\"font-bold text-lg\">{champion.name}</p>\n                            </>\n                        )}\n                    </div>\n                    <div className=\"md:col-span-2 grid grid-cols-1 sm:grid-cols-2 gap-3\">\n                        {(history.leagueAwards || []).map(award => (\n                            <AwardCard key={award.id} award={award} team={teams.find(t => t.id === award.teamId)} />\n                        ))}\n                    </div>\n                </div>\n            </Widget>\n        </motion.div>\n    );\n};\n\nconst TrophyRoomView: React.FC = () => {\n    const { dispatch } = useAppState();\n    const { league } = useLeague();\n    \n    if (!league) {\n        return <ErrorDisplay title=\"Error\" message=\"Please select a league to view the trophy room.\" onRetry={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} />;\n    }\n\n    const pastSeasons = (league.history || []).sort((a, b) => b.season - a.season);\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-4 sm:p-6 lg:p-8 overflow-y-auto\">\n            <header className=\"flex-shrink-0 flex justify-between items-center mb-6\">\n                <div>\n                    <h1 className=\"font-display text-3xl sm:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        Trophy Room\n                    </h1>\n                    <p className=\"text-sm text-[var(--text-secondary)] tracking-widest\">{league.name}</p>\n                </div>\n                <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_HUB' })} className=\"px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20\">\n                    Back to League Hub\n                </button>\n            </header>\n            <main className=\"flex-grow space-y-6\">\n                {pastSeasons.length > 0 ? (\n                    pastSeasons.map((season, index) => (\n                        <SeasonTrophies key={season.season} history={season} teams={league.teams} index={index} />\n                    ))\n                ) : (\n                    <div className=\"h-full flex items-center justify-center\">\n                        <p className=\"text-lg text-gray-500\">The trophy case is empty. A champion will be crowned soon!</p>\n                    </div>\n                )}\n            </main>\n        </div>\n    );\n};\n\nexport default TrophyRoomView;\n"],"names":["awardConfig","jsxDEV","FlameIcon","this","AwardIcon","ArrowRightLeftIcon","ZapIcon","AwardCard","award","team","config","SeasonTrophies","history","teams","index","champion","t","motion","Widget","TrophyIcon","Fragment","Avatar","TrophyRoomView","dispatch","useAppState","league","useLeague","ErrorDisplay","pastSeasons","a","b","season"],"mappings":"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"}