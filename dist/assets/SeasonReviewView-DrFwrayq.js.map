{"version":3,"file":"SeasonReviewView-DrFwrayq.js","sources":["../../components/reports/SeasonReviewDisplay.tsx","../../views/SeasonReviewView.tsx"],"sourcesContent":["\nimport React from 'react';\nimport type { SeasonReviewData, Team } from '../../types';\nimport { SparklesIcon } from '../icons/SparklesIcon';\nimport { ChartBarIcon } from '../icons/ChartBarIcon';\n\ninterface SeasonReviewDisplayProps {\n    review: SeasonReviewData;\n    teams: Team[];\n}\n\nconst SuperlativeCard: React.FC<{ superlative: SeasonReviewData['superlatives'][0], team?: Team }> = ({ superlative, team }) => (\n    <div className=\"bg-white/5 p-4 rounded-lg\">\n        <h4 className=\"font-bold text-white\">{superlative.title}</h4>\n        <p className=\"text-sm text-yellow-300 font-semibold\">{superlative.teamName}</p>\n        <p className=\"text-xs text-gray-400 mt-1 italic\">\"{superlative.rationale}\"</p>\n    </div>\n);\n\nconst SeasonReviewDisplay: React.FC<SeasonReviewDisplayProps> = ({ review, teams }) => {\n    return (\n        <div className=\"p-4 sm:p-6 lg:p-8\">\n            <h2 className=\"font-display text-2xl sm:text-3xl font-bold text-center mb-6\">\n                <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-green-300 via-cyan-300 to-indigo-400\">\n                    {review.title}\n                </span>\n            </h2>\n\n             <div className=\"max-w-4xl mx-auto space-y-8\">\n                 <p className=\"text-sm text-gray-300 leading-relaxed whitespace-pre-wrap text-center italic\">\n                    \"{review.summary}\"\n                </p>\n\n                <div>\n                    <h3 className=\"font-bold text-lg text-cyan-300 mb-3 flex items-center gap-2\"><SparklesIcon /> Season Superlatives</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                        {review.superlatives.map((sup, i) => (\n                            <SuperlativeCard key={i} superlative={sup} team={teams.find(t => t.name === sup.teamName)} />\n                        ))}\n                    </div>\n                </div>\n\n                <div>\n                    <h3 className=\"font-bold text-lg text-cyan-300 mb-3 flex items-center gap-2\"><ChartBarIcon /> Final Power Rankings</h3>\n                    <div className=\"bg-black/10 rounded-lg p-2 space-y-1\">\n                        {review.finalPowerRanking.map((ranking: any) => {\n                             const team = teams.find((t: any) => t.name === ranking.teamName);\n                             return (\n                                <div key={ranking.rank} className=\"flex items-center gap-4 p-1.5 rounded-md\">\n                                    <span className=\"font-display font-bold text-xl w-8 text-center text-cyan-400\">{ranking.rank}</span>\n                                    <span className=\"text-2xl\">{team?.avatar}</span>\n                                    <span className=\"font-semibold text-white\">{ranking.teamName}</span>\n                                </div>\n                             )\n                        })}\n                    </div>\n                </div>\n             </div>\n        </div>\n    );\n};\n\nexport default SeasonReviewDisplay;","\nimport React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { generateSeasonReview } from '../services/geminiService';\nimport type { League, SeasonReviewData } from '../types';\nimport SeasonReviewDisplay from '../components/reports/SeasonReviewDisplay';\nimport { useLeague } from '../hooks/useLeague';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport ErrorDisplay from '../components/core/ErrorDisplay';\n\nconst SeasonReviewLoader: React.FC = () => (\n    <div className=\"p-4 sm:p-6 animate-pulse\">\n        <div className=\"h-8 bg-slate-700/50 rounded w-3/4 mx-auto mb-6\"></div>\n        <div className=\"space-y-3 mb-6\">\n            <div className=\"h-4 bg-slate-700/50 rounded w-full\"></div>\n            <div className=\"h-4 bg-slate-700/50 rounded w-5/6\"></div>\n            <div className=\"h-4 bg-slate-700/50 rounded w-full\"></div>\n            <div className=\"h-4 bg-slate-700/50 rounded w-4/6\"></div>\n        </div>\n        <div className=\"h-4 bg-slate-700/50 rounded w-1/4 mb-4\"></div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            <div className=\"h-24 bg-slate-700/50 rounded-lg\"></div>\n            <div className=\"h-24 bg-slate-700/50 rounded-lg\"></div>\n            <div className=\"h-24 bg-slate-700/50 rounded-lg\"></div>\n        </div>\n    </div>\n);\n\nconst SeasonReviewContent: React.FC<{ league: League; seasonYear: number; dispatch: React.Dispatch<any> }> = ({ league, seasonYear, dispatch }) => {\n    const [review, setReview] = React.useState<SeasonReviewData | null>(null);\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [error, setError] = React.useState<string | null>(null);\n    const [retryCount, setRetryCount] = React.useState(0);\n\n    const fetchReview = React.useCallback(async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const data = await generateSeasonReview(league, seasonYear);\n            if (data) {\n                setReview(data);\n            } else {\n                 setError(\"The Oracle could not produce a season review. Please try again later.\");\n            }\n        } catch (err) {\n            console.error(err);\n            setError(\"An error occurred while consulting the Oracle for a season review.\");\n        } finally {\n            setIsLoading(false);\n        }\n    }, [league, seasonYear]);\n    \n    React.useEffect(() => {\n        fetchReview();\n    }, [fetchReview, retryCount]);\n\n    const handleRetry = () => setRetryCount(c => c + 1);\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-4 sm:p-6 lg:p-8 overflow-y-auto\">\n             <header className=\"flex-shrink-0 flex justify-between items-center mb-6\">\n                <div>\n                    <h1 className=\"font-display text-3xl sm:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        Season Review\n                    </h1>\n                    <p className=\"text-sm text-[var(--text-secondary)] tracking-widest\">{league.name} - {seasonYear} Season</p>\n                </div>\n                <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_HISTORY' })} className=\"px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20\">\n                    Back to History\n                </button>\n            </header>\n            <main className=\"flex-grow glass-pane rounded-2xl overflow-hidden\">\n                <div className=\"h-full overflow-y-auto\">\n                     {isLoading ? <SeasonReviewLoader /> :\n                     error ? <ErrorDisplay message={error} onRetry={handleRetry} /> :\n                     review ? <SeasonReviewDisplay review={review} teams={league.teams} /> :\n                     <div className=\"p-6 text-center text-gray-400\">No review available for this season.</div>\n                    }\n                </div>\n            </main>\n        </div>\n    );\n};\n\n\nconst SeasonReviewView: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const { league } = useLeague();\n    const seasonYear = state.activeSeasonReviewYear;\n\n    if (!league || !seasonYear) {\n        return (\n            <div className=\"p-8 text-center w-full h-full flex flex-col items-center justify-center\">\n                <p>Please select a season to review from the League History.</p>\n                 <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} className=\"mt-4 px-4 py-2 bg-cyan-500 rounded\">\n                    Back to Dashboard\n                </button>\n            </div>\n        );\n    }\n\n    return <SeasonReviewContent league={league} seasonYear={seasonYear} dispatch={dispatch} />\n};\n\nexport default SeasonReviewView;"],"names":["SuperlativeCard","superlative","team","jsxDEV","this","SeasonReviewDisplay","review","teams","SparklesIcon","sup","i","t","ChartBarIcon","ranking","SeasonReviewLoader","SeasonReviewContent","league","seasonYear","dispatch","setReview","React","isLoading","setIsLoading","error","setError","retryCount","setRetryCount","fetchReview","data","generateSeasonReview","err","handleRetry","c","ErrorDisplay","SeasonReviewView","state","useAppState","useLeague"],"mappings":"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"}