{"version":3,"file":"mobileOptimizationUtils-CutDyZPi.js","sources":["../../utils/mobileOptimizationUtils.ts"],"sourcesContent":["// Mobile Optimization Utilities for Astral Draft Views\n// Provides consistent mobile-first patterns and utilities for view components\n\nimport { useState, useEffect } from 'react';\n\n// Breakpoint system based on Tailwind CSS\nexport const BREAKPOINTS = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280,\n  '2xl': 1536\n} as const;\n\n// Mobile-specific constants\nexport const MOBILE_CONSTANTS = {\n  MIN_TOUCH_TARGET: 44, // Apple/W3C recommended minimum\n  SAFE_AREA_BOTTOM: 34, // iPhone safe area\n  KEYBOARD_HEIGHT: 300, // Estimated keyboard height\n  MOBILE_MAX_WIDTH: 640, // sm breakpoint\n  TABLET_MAX_WIDTH: 1024 // lg breakpoint\n} as const;\n\n/**\n * Hook to detect current screen size and mobile status\n */\nexport const useResponsiveBreakpoint = () => {\n  const [breakpoint, setBreakpoint] = useState<keyof typeof BREAKPOINTS>('sm');\n  const [isMobile, setIsMobile] = useState(true);\n  const [isTablet, setIsTablet] = useState(false);\n\n  useEffect(() => {\n    const updateBreakpoint = () => {\n      const width = window.innerWidth;\n      \n      if (width >= BREAKPOINTS['2xl']) {\n        setBreakpoint('2xl');\n        setIsMobile(false);\n        setIsTablet(false);\n      } else if (width >= BREAKPOINTS.xl) {\n        setBreakpoint('xl');\n        setIsMobile(false);\n        setIsTablet(false);\n      } else if (width >= BREAKPOINTS.lg) {\n        setBreakpoint('lg');\n        setIsMobile(false);\n        setIsTablet(true);\n      } else if (width >= BREAKPOINTS.md) {\n        setBreakpoint('md');\n        setIsMobile(false);\n        setIsTablet(true);\n      } else {\n        setBreakpoint('sm');\n        setIsMobile(true);\n        setIsTablet(false);\n      }\n    };\n\n    updateBreakpoint();\n    window.addEventListener('resize', updateBreakpoint);\n    return () => window.removeEventListener('resize', updateBreakpoint);\n  }, []);\n\n  return { breakpoint, isMobile, isTablet };\n};\n\n/**\n * Mobile-optimized class name builders (static, no hooks)\n */\nexport const mobileClasses = {\n  // Layout patterns\n  container: \"w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n  panel: \"bg-[var(--panel-bg)] rounded-lg border border-[var(--panel-border)] shadow-lg\",\n  panelPadding: \"p-4 sm:p-6\",\n  \n  // Grid patterns\n  statsGrid: \"grid grid-cols-2 sm:grid-cols-4 gap-3 sm:gap-6\",\n  cardGrid: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\",\n  widgetGrid: \"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4 sm:gap-6\",\n  \n  // Text sizing (mobile-first)\n  titleLarge: \"text-2xl sm:text-3xl lg:text-4xl font-bold\",\n  titleMedium: \"text-xl sm:text-2xl font-semibold\",\n  titleSmall: \"text-lg sm:text-xl font-medium\",\n  bodyLarge: \"text-base sm:text-lg\",\n  bodyRegular: \"text-sm sm:text-base\",\n  bodySmall: \"text-xs sm:text-sm\",\n  \n  // Touch targets\n  touchTarget: \"mobile-touch-target min-h-[44px] min-w-[44px] p-3\",\n  button: \"px-4 py-3 rounded-lg font-medium mobile-touch-target\",\n  buttonSmall: \"px-3 py-2 rounded-md font-medium mobile-touch-target\",\n  \n  // Spacing patterns\n  spacingSmall: \"space-y-2 sm:space-y-3\",\n  spacingMedium: \"space-y-4 sm:space-y-6\",\n  spacingLarge: \"space-y-6 sm:space-y-8\",\n  \n  // Navigation patterns\n  tabsContainer: \"flex space-x-2 sm:space-x-4 overflow-x-auto scrollbar-hide pb-2\",\n  tabButton: \"flex-shrink-0 px-3 py-2 mobile-touch-target rounded-lg whitespace-nowrap\",\n  \n  // Modal patterns (mobile-optimized)\n  modalOverlay: \"fixed inset-0 bg-black/50 flex items-end sm:items-center justify-center z-50 p-0 sm:p-4\",\n  modalContent: \"w-full sm:w-auto sm:max-w-lg sm:rounded-lg bg-[var(--panel-bg)] border border-[var(--panel-border)]\",\n  modalContentMobile: \"rounded-t-xl sm:rounded-lg max-h-[90vh] overflow-y-auto\",\n  \n  // Form patterns\n  input: \"w-full bg-black/10 dark:bg-gray-900/50 border border-[var(--panel-border)] rounded-md px-3 py-2 text-sm\",\n  inputLarge: \"w-full bg-black/10 dark:bg-gray-900/50 border border-[var(--panel-border)] rounded-lg px-4 py-3 text-base\",\n  \n  // Chart container (responsive)\n  chartContainer: \"w-full h-64 sm:h-80 lg:h-96 p-2 sm:p-4\",\n  chartContainerSmall: \"w-full h-48 sm:h-64 p-2 sm:p-3\",\n};\n\n/**\n * Custom hook for mobile-optimized class names\n */\nexport const useMobileOptimizedClasses = (\n  baseClasses: string,\n  mobileClasses: string,\n  tabletClasses?: string,\n  desktopClasses?: string\n) => {\n  const { isMobile, isTablet } = useResponsiveBreakpoint();\n  \n  if (isMobile) {\n    return `${baseClasses} ${mobileClasses}`;\n  } else if (isTablet && tabletClasses) {\n    return `${baseClasses} ${tabletClasses}`;\n  } else if (desktopClasses) {\n    return `${baseClasses} ${desktopClasses}`;\n  }\n  \n  return baseClasses;\n};\n\n/**\n * Custom hook for mobile-optimized modal positioning\n */\nexport const useMobileModalClasses = () => {\n  const { isMobile } = useResponsiveBreakpoint();\n  \n  if (isMobile) {\n    return {\n      overlay: \"fixed inset-0 bg-black/50 flex items-end justify-center z-50\",\n      content: \"w-full bg-[var(--panel-bg)] rounded-t-xl border-t border-[var(--panel-border)] max-h-[90vh] overflow-y-auto\",\n      animation: \"animate-slide-up\"\n    };\n  }\n  \n  return {\n    overlay: \"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\",\n    content: \"w-full max-w-lg bg-[var(--panel-bg)] rounded-lg border border-[var(--panel-border)]\",\n    animation: \"animate-fade-in\"\n  };\n};\n\n/**\n * Custom hook for touch-friendly icon sizing\n */\nexport const useIconSize = (size: 'sm' | 'md' | 'lg' = 'md') => {\n  const { isMobile } = useResponsiveBreakpoint();\n  \n  const sizes = {\n    sm: isMobile ? 'w-5 h-5' : 'w-4 h-4',\n    md: isMobile ? 'w-6 h-6' : 'w-5 h-5',\n    lg: isMobile ? 'w-8 h-8' : 'w-6 h-6'\n  };\n  \n  return sizes[size];\n};\n\n/**\n * Custom hook for mobile-optimized fixed positioning\n */\nexport const useMobileFixedPosition = (position: 'top' | 'bottom' | 'corner') => {\n  const { isMobile } = useResponsiveBreakpoint();\n  \n  if (!isMobile) {\n    return {\n      top: \"fixed top-4 left-1/2 -translate-x-1/2 z-50\",\n      bottom: \"fixed bottom-4 left-1/2 -translate-x-1/2 z-50\",\n      corner: \"fixed bottom-4 right-4 z-50\"\n    }[position];\n  }\n  \n  // Mobile-optimized positions with safe areas\n  return {\n    top: \"fixed top-4 left-4 right-4 z-50\",\n    bottom: \"fixed bottom-4 left-4 right-4 z-50 pb-safe\",\n    corner: \"fixed bottom-4 right-4 z-50 mb-safe\"\n  }[position];\n};\n\n/**\n * Custom hook for responsive grid columns\n */\nexport const useResponsiveColumns = (\n  itemCount: number,\n  maxCols: { mobile: number; tablet: number; desktop: number } = \n    { mobile: 2, tablet: 3, desktop: 4 }\n) => {\n  const { isMobile, isTablet } = useResponsiveBreakpoint();\n  \n  let cols: number;\n  if (isMobile) {\n    cols = Math.min(itemCount, maxCols.mobile);\n  } else if (isTablet) {\n    cols = Math.min(itemCount, maxCols.tablet);\n  } else {\n    cols = Math.min(itemCount, maxCols.desktop);\n  }\n  \n  const gridClasses = [\n    `grid-cols-${cols}`,\n    `sm:grid-cols-${Math.min(itemCount, maxCols.tablet)}`,\n    `lg:grid-cols-${Math.min(itemCount, maxCols.desktop)}`\n  ].join(' ');\n  \n  return `grid ${gridClasses} gap-3 sm:gap-4 lg:gap-6`;\n};\n\n/**\n * Mobile-optimized spacing utilities\n */\nexport const spacing = {\n  xs: \"gap-1 sm:gap-2\",\n  sm: \"gap-2 sm:gap-3\", \n  md: \"gap-3 sm:gap-4\",\n  lg: \"gap-4 sm:gap-6\",\n  xl: \"gap-6 sm:gap-8\",\n  \n  padding: {\n    xs: \"p-2 sm:p-3\",\n    sm: \"p-3 sm:p-4\", \n    md: \"p-4 sm:p-6\",\n    lg: \"p-6 sm:p-8\",\n  },\n  \n  margin: {\n    xs: \"m-2 sm:m-3\",\n    sm: \"m-3 sm:m-4\",\n    md: \"m-4 sm:m-6\", \n    lg: \"m-6 sm:m-8\",\n  }\n};\n\n/**\n * Custom hook to determine if element should use mobile layout\n */\nexport const useShouldUseMobileLayout = () => {\n  const { isMobile } = useResponsiveBreakpoint();\n  return isMobile;\n};\n\n/**\n * Mobile-safe scrollable container\n */\nexport const getMobileScrollContainer = (height: 'sm' | 'md' | 'lg' | 'xl' = 'md') => {\n  const heights = {\n    sm: 'max-h-32 sm:max-h-40',\n    md: 'max-h-48 sm:max-h-64', \n    lg: 'max-h-64 sm:max-h-80',\n    xl: 'max-h-80 sm:max-h-96'\n  };\n  \n  return `${heights[height]} overflow-y-auto scrollbar-hide overscroll-contain`;\n};\n\nexport default {\n  useResponsiveBreakpoint,\n  mobileClasses,\n  useMobileOptimizedClasses,\n  useMobileModalClasses,\n  useIconSize,\n  useMobileFixedPosition,\n  useResponsiveColumns,\n  spacing,\n  useShouldUseMobileLayout,\n  getMobileScrollContainer,\n  BREAKPOINTS,\n  MOBILE_CONSTANTS\n};\n"],"names":["BREAKPOINTS","useResponsiveBreakpoint","breakpoint","setBreakpoint","useState","isMobile","setIsMobile","isTablet","setIsTablet","useEffect","updateBreakpoint","width","useMobileModalClasses","useMobileFixedPosition","position"],"mappings":"wCAMO,MAAMA,EAAc,CAEzB,GAAI,IACJ,GAAI,KACJ,GAAI,KACJ,MAAO,IACT,EAcaC,EAA0B,IAAM,CAC3C,KAAM,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAmC,IAAI,EACrE,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAAS,EAAI,EACvC,CAACG,EAAUC,CAAW,EAAIJ,EAAAA,SAAS,EAAK,EAE9CK,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAmB,IAAM,CAC7B,MAAMC,EAAQ,OAAO,WAEjBA,GAASX,EAAY,KAAK,GAC5BG,EAAc,KAAK,EACnBG,EAAY,EAAK,EACjBE,EAAY,EAAK,GACRG,GAASX,EAAY,IAC9BG,EAAc,IAAI,EAClBG,EAAY,EAAK,EACjBE,EAAY,EAAK,GACRG,GAASX,EAAY,IAC9BG,EAAc,IAAI,EAClBG,EAAY,EAAK,EACjBE,EAAY,EAAI,GACPG,GAASX,EAAY,IAC9BG,EAAc,IAAI,EAClBG,EAAY,EAAK,EACjBE,EAAY,EAAI,IAEhBL,EAAc,IAAI,EAClBG,EAAY,EAAI,EAChBE,EAAY,EAAK,EAErB,EAEA,OAAAE,EAAA,EACA,OAAO,iBAAiB,SAAUA,CAAgB,EAC3C,IAAM,OAAO,oBAAoB,SAAUA,CAAgB,CACpE,EAAG,CAAA,CAAE,EAEE,CAAE,WAAAR,EAAY,SAAAG,EAAU,SAAAE,CAAA,CACjC,EA6EaK,EAAwB,IAAM,CACzC,KAAM,CAAE,SAAAP,CAAA,EAAaJ,EAAA,EAErB,OAAII,EACK,CACL,QAAS,+DACT,QAAS,8GACT,UAAW,kBAAA,EAIR,CACL,QAAS,sEACT,QAAS,sFACT,UAAW,iBAAA,CAEf,EAoBaQ,EAA0BC,GAA0C,CAC/E,KAAM,CAAE,SAAAT,CAAA,EAAaJ,EAAA,EAErB,OAAKI,EASE,CACL,IAAK,kCACL,OAAQ,6CACR,OAAQ,qCAAA,EACRS,CAAQ,EAZD,CACL,IAAK,6CACL,OAAQ,gDACR,OAAQ,6BAAA,EACRA,CAAQ,CASd"}