{"version":3,"file":"ProjectedStandingsView-Dnot_2QD.js","sources":["../../views/ProjectedStandingsView.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { useLeague } from '../hooks/useLeague';\nimport { Widget } from '../components/ui/Widget';\nimport ErrorDisplay from '../components/core/ErrorDisplay';\nimport { generateProjectedStandings } from '../services/geminiService';\nimport type { ProjectedStanding } from '../types';\nimport { TrendingUpIcon } from '../components/icons/TrendingUpIcon';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport { Avatar } from '../components/ui/Avatar';\n\nconst ProjectedStandingsView: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const { league } = useLeague();\n    const [standings, setStandings] = React.useState<ProjectedStanding[] | null>(null);\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [error, setError] = React.useState<string | null>(null);\n\n    React.useEffect(() => {\n        if (league && (league.status === 'IN_SEASON' || league.status === 'PLAYOFFS')) {\n            setIsLoading(true);\n            setError(null);\n            generateProjectedStandings(league)\n                .then(data => {\n                    if (data) {\n                        setStandings(data);\n                    } else {\n                        setError(\"The Oracle could not generate projections at this time.\");\n                    }\n                })\n                .catch(() => setError(\"An error occurred while consulting the Oracle.\"))\n                .finally(() => setIsLoading(false));\n        } else {\n            setIsLoading(false);\n        }\n    }, [league]);\n\n    if (!league || !(league.status === 'IN_SEASON' || league.status === 'PLAYOFFS')) {\n        return <ErrorDisplay title=\"Not Available\" message=\"Projected standings are only available during an active season.\" onRetry={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_STANDINGS' })} />;\n    }\n    \n    const sortedStandings = standings\n        ? [...standings].sort((a, b) => b.projectedWins - a.projectedWins)\n        : [];\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-4 sm:p-6 lg:p-8 overflow-y-auto\">\n            <header className=\"flex-shrink-0 flex justify-between items-center mb-6\">\n                <div>\n                    <h1 className=\"font-display text-3xl sm:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        Projected Standings\n                    </h1>\n                    <p className=\"text-sm text-[var(--text-secondary)] tracking-widest\">{league.name}</p>\n                </div>\n                <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_STANDINGS' })} className=\"px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20\">\n                    Back to Standings\n                </button>\n            </header>\n            <main className=\"flex-grow\">\n                <Widget title=\"End of Season Projections\" icon={<TrendingUpIcon />}>\n                    {isLoading ? <LoadingSpinner text=\"Simulating the rest of the season...\" /> :\n                     error ? <ErrorDisplay message={error} /> :\n                     standings && (\n                        <div className=\"p-2\">\n                            <table className=\"w-full text-sm text-left\">\n                                <thead className=\"bg-black/10\">\n                                    <tr>\n                                        <th className=\"p-3\">Rank</th>\n                                        <th className=\"p-3\">Team</th>\n                                        <th className=\"p-3 text-center\">Projected Record</th>\n                                        <th className=\"p-3\">Oracle's Outlook</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {sortedStandings.map((standing, i) => {\n                                        const team = league.teams.find(t => t.id === standing.teamId);\n                                        if (!team) return null;\n                                        \n                                        return (\n                                            <tr key={team.id} className=\"border-t border-white/5\">\n                                                <td className=\"p-3 font-bold text-cyan-400\">{i + 1}</td>\n                                                <td className=\"p-3\">\n                                                    <div className=\"flex items-center gap-2\">\n                                                        <Avatar avatar={team.avatar} className=\"w-8 h-8 text-xl rounded-md\" />\n                                                        <div>\n                                                            <p className=\"font-semibold text-white\">{team.name}</p>\n                                                            <p className=\"text-xs text-gray-400\">{team.owner.name}</p>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td className=\"p-3 font-mono text-center\">\n                                                    {standing.projectedWins}-{standing.projectedLosses}-{standing.projectedTies}\n                                                </td>\n                                                <td className=\"p-3 text-xs italic text-gray-300\">\n                                                    \"{standing.narrative}\"\n                                                </td>\n                                            </tr>\n                                        );\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n                     )\n                    }\n                </Widget>\n            </main>\n        </div>\n    );\n};\n\nexport default ProjectedStandingsView;"],"names":["ProjectedStandingsView","state","dispatch","useAppState","league","useLeague","standings","setStandings","React","isLoading","setIsLoading","error","setError","generateProjectedStandings","data","jsxDEV","ErrorDisplay","this","sortedStandings","a","b","Widget","TrendingUpIcon","LoadingSpinner","standing","i","team","t","Avatar"],"mappings":"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"}