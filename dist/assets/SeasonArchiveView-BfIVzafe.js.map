{"version":3,"file":"SeasonArchiveView-BfIVzafe.js","sources":["../../components/history/FinalStandingsTable.tsx","../../views/SeasonArchiveView.tsx"],"sourcesContent":["\nimport React from 'react';\nimport type { LeagueHistoryEntry, Team } from '../../types';\nimport { Avatar } from '../ui/Avatar';\n\ninterface FinalStandingsTableProps {\n    standings: LeagueHistoryEntry['finalStandings'];\n    teams: Team[];\n}\n\nconst FinalStandingsTable: React.FC<FinalStandingsTableProps> = ({ standings, teams }) => {\n    return (\n        <div className=\"p-2\">\n            <table className=\"w-full text-sm text-left\">\n                <thead className=\"bg-black/10\">\n                    <tr>\n                        <th className=\"p-3\">Rank</th>\n                        <th className=\"p-3\">Team</th>\n                        <th className=\"p-3 text-center\">Record</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {standings.map((entry: any) => {\n                        const team = teams.find((t: any) => t.id === entry.teamId);\n                        if (!team) return null;\n\n                        return (\n                            <tr key={entry.teamId} className=\"border-t border-white/5\">\n                                <td className=\"p-3 font-bold text-cyan-400\">{entry.rank}</td>\n                                <td className=\"p-3\">\n                                    <div className=\"flex items-center gap-2\">\n                                        <Avatar avatar={team.avatar} className=\"w-8 h-8 text-xl rounded-md\" />\n                                        <div>\n                                            <p className=\"font-semibold text-white\">{team.name}</p>\n                                            <p className=\"text-xs text-gray-400\">{team.owner.name}</p>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td className=\"p-3 font-mono text-center\">\n                                    {entry.record.wins}-{entry.record.losses}-{entry.record.ties}\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default FinalStandingsTable;\n","\nimport React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { useLeague } from '../hooks/useLeague';\nimport type { League } from '../types';\nimport { Widget } from '../components/ui/Widget';\nimport ErrorDisplay from '../components/core/ErrorDisplay';\nimport { CrownIcon } from '../components/icons/CrownIcon';\nimport { TrophyIcon } from '../components/icons/TrophyIcon';\nimport { Avatar } from '../components/ui/Avatar';\nimport FinalStandingsTable from '../components/history/FinalStandingsTable';\n\nconst SeasonArchiveContent: React.FC<{ league: League; seasonYear: number; dispatch: React.Dispatch<any> }> = ({ league, seasonYear, dispatch }) => {\n    const historyEntry = league.history?.find(h => h.season === seasonYear);\n\n    if (!historyEntry) {\n        return <ErrorDisplay title=\"History Not Found\" message={`Could not find historical data for the ${seasonYear} season.`} />;\n    }\n\n    const champion = league.teams.find(t => t.id === historyEntry.championTeamId);\n    const record = historyEntry.records.highestScore;\n    const recordTeam = league.teams.find(t => t.id === record.teamId);\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-4 sm:p-6 lg:p-8 overflow-y-auto\">\n            <header className=\"flex-shrink-0 flex justify-between items-center mb-6\">\n                <div>\n                    <h1 className=\"font-display text-3xl sm:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        {seasonYear} Season Archive\n                    </h1>\n                    <p className=\"text-sm text-[var(--text-secondary)] tracking-widest\">{league.name}</p>\n                </div>\n                <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_HISTORY' })} className=\"px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20\">\n                    Back to History\n                </button>\n            </header>\n            <main className=\"flex-grow grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                <div className=\"lg:col-span-1 space-y-6\">\n                    <Widget title=\"League Champion\" icon={<CrownIcon />}>\n                        <div className=\"p-4 text-center\">\n                            {champion ? (\n                                <>\n                                    <Avatar avatar={champion.avatar} className=\"w-24 h-24 text-6xl mx-auto rounded-lg\" />\n                                    <p className=\"font-display font-bold text-2xl text-yellow-300 mt-2\">{champion.name}</p>\n                                </>\n                            ) : (\n                                <p>Champion not found</p>\n                            )}\n                        </div>\n                    </Widget>\n                    <Widget title=\"Season Records\" icon={<TrophyIcon />}>\n                        <div className=\"p-4 space-y-3\">\n                            <div className=\"bg-white/5 p-3 rounded-lg\">\n                                <p className=\"text-sm font-semibold text-cyan-300\">Highest Weekly Score</p>\n                                <p className=\"text-xl font-bold text-white mt-1\">{record.score.toFixed(2)} pts</p>\n                                <p className=\"text-xs text-gray-400\">\n                                    {recordTeam?.name} in Week {record.week}\n                                </p>\n                            </div>\n                        </div>\n                    </Widget>\n                </div>\n                <div className=\"lg:col-span-2\">\n                    <Widget title=\"Final Standings\">\n                        <FinalStandingsTable standings={historyEntry.finalStandings} teams={league.teams} />\n                    </Widget>\n                </div>\n            </main>\n        </div>\n    );\n};\n\n\nconst SeasonArchiveView: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const { league } = useLeague();\n    const seasonYear = state.activeArchiveSeason;\n    \n    if (!league || !seasonYear) {\n        return <ErrorDisplay title=\"Error\" message=\"No season selected to display.\" onRetry={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD'})} />;\n    }\n\n    return <SeasonArchiveContent league={league} seasonYear={seasonYear} dispatch={dispatch} />;\n};\n\nexport default SeasonArchiveView;\n"],"names":["FinalStandingsTable","standings","teams","jsxDEV","this","entry","team","t","Avatar","SeasonArchiveContent","league","seasonYear","dispatch","historyEntry","h","ErrorDisplay","champion","record","recordTeam","Widget","CrownIcon","Fragment","TrophyIcon","SeasonArchiveView","state","useAppState","useLeague"],"mappings":"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"}