{"version":3,"file":"DashboardView-DBXequl0.js","sources":["../../components/ui/LeagueCard.tsx","../../components/core/CreateLeagueModal.tsx","../../components/core/EnhancedCreateLeagueModal.tsx","../../components/ui/NewsTicker.tsx","../../components/icons/RobotIcon.tsx","../../components/core/MockDraftModal.tsx","../../components/icons/EyeIcon.tsx","../../components/team/WatchlistWidget.tsx","../../components/dashboard/PowerBalanceChart.tsx","../../components/dashboard/CustomizeDashboardModal.tsx","../../components/dashboard/WhatsNextWidget.tsx","../../components/dashboard/PerformanceMetricsWidget.tsx","../../components/dashboard/ActivityFeedWidget.tsx","../../components/dashboard/OnTheHotSeatWidget.tsx","../../views/DashboardView.tsx"],"sourcesContent":["\nimport React from 'react';\nimport type { League } from '../../types';\n\ninterface LeagueCardProps {\n    league: League;\n    onJoin: () => void;\n}\n\nexport const LeagueCard: React.FC<LeagueCardProps> = ({ league, onJoin }) => {\n    const isPreDraft = league?.status === 'PRE_DRAFT';\n    return (\n        <div className=\"p-4 bg-white/5 rounded-lg flex items-center justify-between hover:bg-white/10 transition-colors\">\n            <div>\n                <p className=\"font-bold text-[var(--text-primary)]\">{league.name}</p>\n                <p className=\"text-xs text-[var(--text-secondary)]\">\n                    {league.settings.teamCount} Teams • {league.settings.draftFormat} • {league.status.replace('_', ' ')}\n                </p>\n            </div>\n            <button onClick={onJoin} className=\"px-4 py-2 bg-cyan-500 text-black font-bold text-sm rounded-md hover:bg-cyan-400\">\n                {isPreDraft ? 'Join Lobby' : 'View'}\n            </button>\n        </div>\n    );\n};\n","\nimport React from 'react';\nimport type { LeagueSettings, User, CreateLeaguePayload, AiProfileData } from '../../types';\nimport Modal from '../ui/Modal';\nimport { motion } from 'framer-motion';\nimport { generateTeamBranding, generateAiTeamProfile } from '../../services/geminiService';\nimport { SparklesIcon } from '../icons/SparklesIcon';\nimport { Avatar } from '../ui/Avatar';\n\ninterface CreateLeagueModalProps {\n    onClose: () => void;\n    user: User;\n    dispatch: React.Dispatch<any>;\n}\n\nconst CreateLeagueModal: React.FC<CreateLeagueModalProps> = ({ onClose, user, dispatch }) => {\n    const [name, setName] = React.useState('My Awesome League');\n    const [userTeamName, setUserTeamName] = React.useState(`${user.name}'s Dynasty`);\n    const [userTeamAvatar, setUserTeamAvatar] = React.useState(user.avatar);\n    const [isGenerating, setIsGenerating] = React.useState(false);\n    const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n    const [draftFormat, setDraftFormat] = React.useState<LeagueSettings['draftFormat']>('SNAKE');\n    const [teamCount, setTeamCount] = React.useState<LeagueSettings['teamCount']>(12);\n    const [scoring, setScoring] = React.useState<LeagueSettings['scoring']>('PPR');\n    const [tradeDeadline, setTradeDeadline] = React.useState<LeagueSettings['tradeDeadline']>(10);\n    const [playoffFormat, setPlayoffFormat] = React.useState<LeagueSettings['playoffFormat']>('4_TEAM');\n    const [waiverRule, setWaiverRule] = React.useState<LeagueSettings['waiverRule']>('FAAB');\n    const [aiAssistanceLevel, setAiAssistanceLevel] = React.useState<LeagueSettings['aiAssistanceLevel']>('FULL');\n\n\n    const handleGenerateBranding = async () => {\n        setIsGenerating(true);\n        const branding = await generateTeamBranding(user.name);\n        if (branding) {\n            setUserTeamName(branding.teamName);\n            setUserTeamAvatar(branding.avatar);\n        } else {\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Could not generate branding.', type: 'SYSTEM' } });\n        }\n        setIsGenerating(false);\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setIsSubmitting(true);\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `Generating AI managers... this may take a moment.`, type: 'SYSTEM' }});\n\n        try {\n            const aiProfilePromises = Array.from({ length: teamCount - 1 }).map(() => generateAiTeamProfile(name));\n            const aiProfiles = (await Promise.all(aiProfilePromises)).filter(Boolean) as AiProfileData[];\n            \n            if (aiProfiles.length !== teamCount - 1) {\n                throw new Error(\"Failed to generate all AI manager profiles.\");\n            }\n\n            const newLeague: CreateLeaguePayload = {\n                id: `league_${Date.now()}`,\n                name,\n                settings: {\n                    draftFormat,\n                    teamCount,\n                    scoring,\n                    rosterSize: 16, // Hardcode for now\n                    tradeDeadline,\n                    playoffFormat,\n                    waiverRule,\n                    aiAssistanceLevel,\n                },\n                status: 'PRE_DRAFT' as const,\n                commissionerId: user.id,\n                userTeamName,\n                userTeamAvatar,\n                aiProfiles,\n            };\n            dispatch({ type: 'CREATE_LEAGUE', payload: newLeague });\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `League \"${name}\" created!`, type: 'SYSTEM' }});\n            onClose();\n\n        } catch (error) {\n            console.error(\"Error creating league with AI profiles:\", error);\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: \"Error: Could not create league. Please try again.\", type: 'SYSTEM' } });\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    const inputClasses = \"mobile-touch-target w-full bg-black/10 dark:bg-gray-900/50 border border-[var(--panel-border)] rounded-md px-3 py-3 text-sm placeholder:text-[var(--text-secondary)] focus:outline-none focus:ring-2 focus:ring-cyan-400\";\n    const labelClasses = \"block text-sm font-medium text-[var(--text-secondary)] mb-1\";\n    const buttonGroupButtonClasses = (isActive: boolean) => `flex-1 py-2 text-sm font-bold rounded-md transition-all ${isActive ? 'bg-cyan-400 text-black' : 'bg-black/10 dark:bg-gray-700/50 hover:bg-black/20 dark:hover:bg-gray-600/50'}`;\n\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.div \n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-2xl\"\n                role=\"dialog\"\n                aria-modal=\"true\"\n                aria-labelledby=\"create-league-title\"\n                onClick={(e: any) => e.stopPropagation()}\n                {...{\n                    initial: { opacity: 0, y: -20, scale: 0.95 },\n                    animate: { opacity: 1, y: 0, scale: 1 },\n                    exit: { opacity: 0, y: 20, scale: 0.95 },\n                }}\n            >\n                <header className=\"p-6 border-b border-[var(--panel-border)]\">\n                    <h2 id=\"create-league-title\" className=\"text-2xl font-bold font-display text-[var(--text-primary)]\">\n                        Create New League\n                    </h2>\n                </header>\n\n                <form onSubmit={handleSubmit}>\n                    <main className=\"p-6 grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        {/* Left Column */}\n                        <div className=\"space-y-4\">\n                            <div>\n                                <label htmlFor=\"league-name\" className={labelClasses}>League Name</label>\n                                <input id=\"league-name\" type=\"text\" value={name} onChange={e => setName(e.target.value)} className={inputClasses} required />\n                            </div>\n                            \n                            <div className=\"p-3 bg-black/10 rounded-lg space-y-2 border border-cyan-400/20\">\n                                <label className={labelClasses}>Your Team Branding</label>\n                                <div className=\"flex items-center gap-3\">\n                                    <Avatar avatar={userTeamAvatar} className=\"w-16 h-16 text-4xl rounded-lg flex-shrink-0\" />\n                                    <div className=\"flex-grow space-y-2\">\n                                        <input id=\"team-name\" type=\"text\" value={userTeamName} onChange={e => setUserTeamName(e.target.value)} className={inputClasses} required />\n                                        <p className=\"text-xs text-gray-500 px-1\">Enter a team name above, or generate one with AI.</p>\n                                    </div>\n                                </div>\n                                <button\n                                    type=\"button\"\n                                    onClick={handleGenerateBranding}\n                                    disabled={isGenerating}\n                                    className=\"w-full mt-1 flex items-center justify-center gap-2 px-4 py-1.5 bg-transparent border border-cyan-400/50 text-cyan-300 font-bold text-xs rounded-md hover:bg-cyan-400/20 disabled:opacity-50\"\n                                >\n                                    {isGenerating ? (\n                                        <>\n                                            <div className=\"w-4 h-4 border-2 border-t-transparent border-white rounded-full animate-spin\"></div>\n                                            <span>Generating...</span>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <SparklesIcon />\n                                            <span>Generate Logo & Name</span>\n                                        </>\n                                    )}\n                                </button>\n                            </div>\n                        </div>\n\n                        {/* Right Column */}\n                        <div className=\"space-y-4\">\n                            <div className=\"grid grid-cols-2 gap-4\">\n                                <div>\n                                    <label className={labelClasses}>AI Assistance</label>\n                                    <div className=\"flex gap-2\">\n                                        <button type=\"button\" onClick={() => setAiAssistanceLevel('FULL')} className={buttonGroupButtonClasses(aiAssistanceLevel === 'FULL')}>Full</button>\n                                        <button type=\"button\" onClick={() => setAiAssistanceLevel('BASIC')} className={buttonGroupButtonClasses(aiAssistanceLevel === 'BASIC')}>Basic</button>\n                                    </div>\n                                </div>\n                                <div>\n                                    <label className={labelClasses}>Draft Format</label>\n                                    <div className=\"flex gap-2\">\n                                        <button type=\"button\" onClick={() => setDraftFormat('SNAKE')} className={buttonGroupButtonClasses(draftFormat === 'SNAKE')}>SNAKE</button>\n                                        <button type=\"button\" onClick={() => setDraftFormat('AUCTION')} className={buttonGroupButtonClasses(draftFormat === 'AUCTION')}>AUCTION</button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                               <label className={labelClasses}>Scoring</label>\n                                <div className=\"flex gap-2\">\n                                    <button type=\"button\" onClick={() => setScoring('PPR')} className={`flex-1 px-1 py-2 text-xs font-bold rounded-md transition-all ${scoring === 'PPR' ? 'bg-cyan-400 text-black' : 'bg-black/10 dark:bg-gray-700/50 hover:bg-black/20 dark:hover:bg-gray-600/50'}`}>PPR</button>\n                                    <button type=\"button\" onClick={() => setScoring('Half-PPR')} className={`flex-1 px-1 py-2 text-xs font-bold rounded-md transition-all ${scoring === 'Half-PPR' ? 'bg-cyan-400 text-black' : 'bg-black/10 dark:bg-gray-700/50 hover:bg-black/20 dark:hover:bg-gray-600/50'}`}>Half-PPR</button>\n                                    <button type=\"button\" onClick={() => setScoring('Standard')} className={`flex-1 px-1 py-2 text-xs font-bold rounded-md transition-all ${scoring === 'Standard' ? 'bg-cyan-400 text-black' : 'bg-black/10 dark:bg-gray-700/50 hover:bg-black/20 dark:hover:bg-gray-600/50'}`}>Standard</button>\n                                </div>\n                            </div>\n\n                             <div>\n                                <label className={labelClasses}>Playoff Format</label>\n                                <div className=\"flex gap-2\">\n                                    <button type=\"button\" onClick={() => setPlayoffFormat('4_TEAM')} className={buttonGroupButtonClasses(playoffFormat === '4_TEAM')}>4 Teams</button>\n                                    <button type=\"button\" onClick={() => setPlayoffFormat('6_TEAM')} className={buttonGroupButtonClasses(playoffFormat === '6_TEAM')}>6 Teams</button>\n                                </div>\n                            </div>\n\n                             <div>\n                                <label htmlFor=\"team-count\" className={labelClasses}>Number of Teams: <span className=\"font-bold text-[var(--text-primary)]\">{teamCount}</span></label>\n                                <input id=\"team-count\" type=\"range\" min=\"8\" max=\"14\" step=\"2\" value={teamCount} onChange={e => setTeamCount(Number(e.target.value))} className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer accent-cyan-400\" />\n                            </div>\n                        </div>\n\n                    </main>\n\n                    <footer className=\"p-6 flex justify-end gap-4 border-t border-[var(--panel-border)]\">\n                        <button type=\"button\" onClick={onClose} className=\"mobile-touch-target px-4 py-3 bg-transparent border border-[var(--panel-border)] text-[var(--text-secondary)] font-bold rounded-lg hover:bg-white/10 transition-colors\">\n                            Cancel\n                        </button>\n                        <button\n                            type=\"submit\"\n                            disabled={isSubmitting}\n                            className=\"mobile-touch-target px-6 py-3 bg-gradient-to-r from-green-500 to-cyan-500 text-white font-bold rounded-lg shadow-md hover:from-green-600 hover:to-cyan-600 transition-colors disabled:opacity-60 disabled:cursor-wait\"\n                        >\n                            {isSubmitting ? 'Creating...' : 'Create League'}\n                        </button>\n                    </footer>\n                </form>\n            </motion.div>\n        </Modal>\n    );\n};\n\nexport default CreateLeagueModal;\n","/**\n * Enhanced League Setup Component\n * Integrates the 10 provided player names with Oracle ML services for advanced league creation\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Modal from '../ui/Modal';\nimport { SparklesIcon } from '../icons/SparklesIcon';\nimport { Avatar } from '../ui/Avatar';\nimport { generateTeamBranding, generateAiTeamProfile } from '../../services/geminiService';\nimport type { LeagueSettings, User, CreateLeaguePayload, AiProfileData } from '../../types';\n\n// The 10 provided player names\nconst PLAYER_NAMES = [\n  'Jack',\n  'Jon', \n  'Hartley',\n  'Jarvey',\n  'Cason',\n  'Larry',\n  'Renee',\n  'Kaity',\n  'Nick',\n  'Brittany'\n] as const;\n\ninterface PlayerSetup {\n  name: string;\n  teamName: string;\n  avatar: string;\n  isUser: boolean;\n  aiProfile?: AiProfileData;\n}\n\ninterface EnhancedCreateLeagueModalProps {\n  onClose: () => void;\n  user: User;\n  dispatch: React.Dispatch<any>;\n}\n\nconst EnhancedCreateLeagueModal: React.FC<EnhancedCreateLeagueModalProps> = ({ \n  onClose, \n  user, \n  dispatch \n}) => {\n  // League Configuration\n  const [leagueName, setLeagueName] = useState('Astral Draft Championship');\n  const [selectedPlayerCount, setSelectedPlayerCount] = useState(10);\n  const [draftFormat, setDraftFormat] = useState<LeagueSettings['draftFormat']>('SNAKE');\n  const [scoring, setScoring] = useState<LeagueSettings['scoring']>('PPR');\n  const [aiAssistanceLevel, setAiAssistanceLevel] = useState<LeagueSettings['aiAssistanceLevel']>('FULL');\n\n  // Player Setup\n  const [players, setPlayers] = useState<PlayerSetup[]>([]);\n  const [selectedUserPlayer, setSelectedUserPlayer] = useState<string>('');\n  \n  // UI State\n  const [currentStep, setCurrentStep] = useState<'config' | 'players' | 'review'>('config');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [generateProgress, setGenerateProgress] = useState(0);\n\n  // Oracle ML Integration Settings\n  const [oraclePredictions, setOraclePredictions] = useState(true);\n  const [advancedAnalytics, setAdvancedAnalytics] = useState(true);\n  const [injuryTracking, setInjuryTracking] = useState(true);\n  const [tradeAnalysis, setTradeAnalysis] = useState(true);\n  const [waiverAnalysis, setWaiverAnalysis] = useState(true);\n\n  // Initialize players based on selected count\n  useEffect(() => {\n    const availableNames = PLAYER_NAMES.slice(0, selectedPlayerCount);\n    const initialPlayers: PlayerSetup[] = availableNames.map((name, index) => ({\n      name,\n      teamName: `${name}'s Team`,\n      avatar: `🎯`, // Default avatar\n      isUser: index === 0, // First player is user by default\n      aiProfile: undefined\n    }));\n    \n    setPlayers(initialPlayers);\n    setSelectedUserPlayer(availableNames[0]);\n  }, [selectedPlayerCount]);\n\n  const handleGenerateAllTeamBranding = async () => {\n    setIsGenerating(true);\n    setGenerateProgress(0);\n    \n    try {\n      const updates = [...players];\n      const totalPlayers = players.length;\n      \n      for (let i = 0; i < players.length; i++) {\n        const player = players[i];\n        setGenerateProgress(((i + 1) / totalPlayers) * 100);\n        \n        // Generate team branding for each player\n        const branding = await generateTeamBranding(player.name);\n        if (branding) {\n          updates[i] = {\n            ...player,\n            teamName: branding.teamName,\n            avatar: branding.avatar\n          };\n        }\n        \n        // Generate AI profile for non-user players\n        if (!player.isUser) {\n          const aiProfile = await generateAiTeamProfile(leagueName);\n          if (aiProfile) {\n            updates[i].aiProfile = aiProfile;\n          }\n        }\n        \n        // Update state incrementally for visual feedback\n        setPlayers([...updates]);\n      }\n      \n      dispatch({ \n        type: 'ADD_NOTIFICATION', \n        payload: { \n          message: 'Successfully generated team branding and AI profiles!', \n          type: 'SYSTEM' \n        }\n      });\n    } catch (error) {\n      console.error('Error generating team branding:', error);\n      dispatch({ \n        type: 'ADD_NOTIFICATION', \n        payload: { \n          message: 'Failed to generate some team branding. Please try again.', \n          type: 'SYSTEM' \n        }\n      });\n    } finally {\n      setIsGenerating(false);\n      setGenerateProgress(0);\n    }\n  };\n\n  const handleUserPlayerChange = (playerName: string) => {\n    setSelectedUserPlayer(playerName);\n    setPlayers(prev => prev.map((p: any) => ({\n      ...p,\n      isUser: p.name === playerName\n    })));\n  };\n\n  const handleCustomizePlayer = (index: number, updates: Partial<PlayerSetup>) => {\n    setPlayers(prev => prev.map((p, i) => \n      i === index ? { ...p, ...updates } : p\n    ));\n  };\n\n  const handleSubmit = async () => {\n    setIsSubmitting(true);\n    \n    try {\n      // Find user player\n      const userPlayer = players.find((p: any) => p.isUser);\n      if (!userPlayer) {\n        throw new Error('No user player selected');\n      }\n\n      // Prepare AI profiles for non-user players\n      const aiProfiles = players\n        .filter((p: any) => !p.isUser)\n        .map((p: any) => p.aiProfile)\n        .filter((profile): profile is AiProfileData => Boolean(profile));\n\n      // Create enhanced league payload with Oracle ML integration\n      const newLeague: CreateLeaguePayload & {\n        oracleConfig: {\n          predictions: boolean;\n          advancedAnalytics: boolean;\n          injuryTracking: boolean;\n          tradeAnalysis: boolean;\n          waiverAnalysis: boolean;\n        };\n        playerSetup: PlayerSetup[];\n      } = {\n        id: `league_${Date.now()}`,\n        name: leagueName,\n        settings: {\n          draftFormat,\n          teamCount: selectedPlayerCount,\n          scoring,\n          rosterSize: 16,\n          tradeDeadline: 10,\n          playoffFormat: '4_TEAM',\n          waiverRule: 'FAAB',\n          aiAssistanceLevel,\n        },\n        status: 'PRE_DRAFT' as const,\n        commissionerId: user.id,\n        userTeamName: userPlayer.teamName,\n        userTeamAvatar: userPlayer.avatar,\n        aiProfiles,\n        oracleConfig: {\n          predictions: oraclePredictions,\n          advancedAnalytics,\n          injuryTracking,\n          tradeAnalysis,\n          waiverAnalysis\n        },\n        playerSetup: players\n      };\n\n      dispatch({ type: 'CREATE_ENHANCED_LEAGUE', payload: newLeague });\n      dispatch({ \n        type: 'ADD_NOTIFICATION', \n        payload: { \n          message: `Enhanced league \"${leagueName}\" created with Oracle ML integration!`, \n          type: 'SYSTEM' \n        }\n      });\n      \n      onClose();\n    } catch (error) {\n      console.error('Error creating enhanced league:', error);\n      dispatch({ \n        type: 'ADD_NOTIFICATION', \n        payload: { \n          message: 'Failed to create league. Please try again.', \n          type: 'SYSTEM' \n        }\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const renderConfigurationStep = () => (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Left Column */}\n        <div className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"league-name-input\" className=\"block text-sm font-medium text-[var(--text-secondary)] mb-2\">\n              League Name\n            </label>\n            <input\n              id=\"league-name-input\"\n              type=\"text\"\n              value={leagueName}\n              onChange={(e: any) => setLeagueName(e.target.value)}\n              className=\"w-full bg-black/10 border border-[var(--panel-border)] rounded-md px-3 py-3 text-sm focus:outline-none focus:ring-2 focus:ring-cyan-400\"\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"player-count-range\" className=\"block text-sm font-medium text-[var(--text-secondary)] mb-2\">\n              Number of Players: <span className=\"font-bold text-[var(--text-primary)]\">{selectedPlayerCount}</span>\n            </label>\n            <input\n              id=\"player-count-range\"\n              type=\"range\"\n              min=\"8\"\n              max=\"10\"\n              value={selectedPlayerCount}\n              onChange={(e: any) => setSelectedPlayerCount(Number(e.target.value))}\n              className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer accent-cyan-400\"\n            />\n            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n              <span>8 players</span>\n              <span>10 players (Full roster)</span>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <span className=\"block text-sm font-medium text-[var(--text-secondary)] mb-2\">\n                Draft Format\n              </span>\n              <div className=\"flex gap-2\">\n                <button\n                  type=\"button\"\n                  onClick={() => setDraftFormat('SNAKE')}\n                  className={`flex-1 py-2 text-sm font-bold rounded-md transition-all ${\n                    draftFormat === 'SNAKE' \n                      ? 'bg-cyan-400 text-black' \n                      : 'bg-black/10 hover:bg-black/20'\n                  }`}\n                >\n                  Snake\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setDraftFormat('AUCTION')}\n                  className={`flex-1 py-2 text-sm font-bold rounded-md transition-all ${\n                    draftFormat === 'AUCTION' \n                      ? 'bg-cyan-400 text-black' \n                      : 'bg-black/10 hover:bg-black/20'\n                  }`}\n                >\n                  Auction\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"scoring-select\" className=\"block text-sm font-medium text-[var(--text-secondary)] mb-2\">\n                Scoring Format\n              </label>\n              <select\n                id=\"scoring-select\"\n                value={scoring}\n                onChange={(e: any) => setScoring(e.target.value as LeagueSettings['scoring'])}\n                className=\"w-full bg-black/10 border border-[var(--panel-border)] rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-cyan-400\"\n              >\n                <option value=\"PPR\">PPR</option>\n                <option value=\"Half-PPR\">Half-PPR</option>\n                <option value=\"Standard\">Standard</option>\n                <option value=\"Superflex\">Superflex</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Right Column - Oracle ML Integration */}\n        <div className=\"space-y-4\">\n          <div className=\"p-4 bg-gradient-to-br from-purple-900/30 to-blue-900/30 border border-purple-500/30 rounded-lg\">\n            <h3 className=\"text-lg font-bold text-purple-300 mb-3 flex items-center gap-2\">\n              <SparklesIcon />\n              Oracle ML Features\n            </h3>\n            \n            <div className=\"space-y-3\">\n              <label className=\"flex items-center gap-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={oraclePredictions}\n                  onChange={(e: any) => setOraclePredictions(e.target.checked)}\n                  className=\"w-4 h-4 accent-purple-500\"\n                />\n                <span className=\"text-sm\">Oracle Predictions & Challenges</span>\n              </label>\n              \n              <label className=\"flex items-center gap-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={advancedAnalytics}\n                  onChange={(e: any) => setAdvancedAnalytics(e.target.checked)}\n                  className=\"w-4 h-4 accent-purple-500\"\n                />\n                <span className=\"text-sm\">Advanced Player Analytics</span>\n              </label>\n              \n              <label className=\"flex items-center gap-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={injuryTracking}\n                  onChange={(e: any) => setInjuryTracking(e.target.checked)}\n                  className=\"w-4 h-4 accent-purple-500\"\n                />\n                <span className=\"text-sm\">Real-time Injury Tracking</span>\n              </label>\n              \n              <label className=\"flex items-center gap-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={tradeAnalysis}\n                  onChange={(e: any) => setTradeAnalysis(e.target.checked)}\n                  className=\"w-4 h-4 accent-purple-500\"\n                />\n                <span className=\"text-sm\">ML-Powered Trade Analysis</span>\n              </label>\n              \n              <label className=\"flex items-center gap-3\">\n                <input\n                  type=\"checkbox\"\n                  checked={waiverAnalysis}\n                  onChange={(e: any) => setWaiverAnalysis(e.target.checked)}\n                  className=\"w-4 h-4 accent-purple-500\"\n                />\n                <span className=\"text-sm\">Waiver Wire Intelligence</span>\n              </label>\n            </div>\n          </div>\n\n          <div>\n            <span className=\"block text-sm font-medium text-[var(--text-secondary)] mb-2\">\n              AI Assistance Level\n            </span>\n            <div className=\"flex gap-2\">\n              <button\n                type=\"button\"\n                onClick={() => setAiAssistanceLevel('FULL')}\n                className={`flex-1 py-2 text-sm font-bold rounded-md transition-all ${\n                  aiAssistanceLevel === 'FULL' \n                    ? 'bg-cyan-400 text-black' \n                    : 'bg-black/10 hover:bg-black/20'\n                }`}\n              >\n                Full\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setAiAssistanceLevel('BASIC')}\n                className={`flex-1 py-2 text-sm font-bold rounded-md transition-all ${\n                  aiAssistanceLevel === 'BASIC' \n                    ? 'bg-cyan-400 text-black' \n                    : 'bg-black/10 hover:bg-black/20'\n                }`}\n              >\n                Basic\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderPlayersStep = () => (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-xl font-bold\">Player Setup</h3>\n        <button\n          type=\"button\"\n          onClick={handleGenerateAllTeamBranding}\n          disabled={isGenerating}\n          className=\"flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-purple-600 to-blue-600 text-white font-bold text-sm rounded-lg hover:from-purple-700 hover:to-blue-700 disabled:opacity-50\"\n        >\n          {isGenerating ? (\n            <>\n              <div className=\"w-4 h-4 border-2 border-t-transparent border-white rounded-full animate-spin\"></div>\n              <span>Generating... {Math.round(generateProgress)}%</span>\n            </>\n          ) : (\n            <>\n              <SparklesIcon />\n              <span>Generate All Team Branding</span>\n            </>\n          )}\n        </button>\n      </div>\n\n      <div className=\"mb-6 p-4 bg-blue-900/20 border border-blue-500/30 rounded-lg\">\n        <span className=\"block text-sm font-medium text-blue-300 mb-2\">\n          Which player are you?\n        </span>\n        <select\n          value={selectedUserPlayer}\n          onChange={(e: any) => handleUserPlayerChange(e.target.value)}\n          className=\"w-full bg-black/10 border border-[var(--panel-border)] rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-400\"\n          aria-label=\"Select which player you are\"\n        >\n          {players.map((player) => (\n            <option key={player.name} value={player.name}>\n              {player.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {players.map((player, index) => (\n          <motion.div\n            key={player.name}\n            layout\n            className={`p-4 rounded-lg border transition-all ${\n              player.isUser \n                ? 'bg-green-900/20 border-green-500/50' \n                : 'bg-black/10 border-[var(--panel-border)]'\n            }`}\n          >\n            <div className=\"flex items-center gap-3 mb-3\">\n              <Avatar avatar={player.avatar} className=\"w-12 h-12 text-2xl rounded-lg\" />\n              <div className=\"flex-grow\">\n                <div className=\"font-bold text-sm\">{player.name}</div>\n                {player.isUser && (\n                  <div className=\"text-xs text-green-400 font-medium\">You</div>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <input\n                type=\"text\"\n                value={player.teamName}\n                onChange={(e: any) => handleCustomizePlayer(index, { teamName: e.target.value })}\n                className=\"w-full bg-black/20 border border-gray-600 rounded px-2 py-1 text-sm focus:outline-none focus:ring-1 focus:ring-cyan-400\"\n                placeholder=\"Team name\"\n              />\n              \n              {player.aiProfile && (\n                <div className=\"text-xs text-gray-400\">\n                  <div>Persona: {player.aiProfile.persona}</div>\n                  <div>Name: {player.aiProfile.name}</div>\n                </div>\n              )}\n            </div>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderReviewStep = () => (\n    <div className=\"space-y-6\">\n      <h3 className=\"text-xl font-bold\">Review & Create League</h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-4\">\n          <div className=\"p-4 bg-black/10 rounded-lg\">\n            <h4 className=\"font-bold mb-2\">League Configuration</h4>\n            <div className=\"space-y-1 text-sm text-gray-300\">\n              <div><span className=\"text-gray-500\">Name:</span> {leagueName}</div>\n              <div><span className=\"text-gray-500\">Players:</span> {selectedPlayerCount}</div>\n              <div><span className=\"text-gray-500\">Draft:</span> {draftFormat}</div>\n              <div><span className=\"text-gray-500\">Scoring:</span> {scoring}</div>\n              <div><span className=\"text-gray-500\">AI Level:</span> {aiAssistanceLevel}</div>\n            </div>\n          </div>\n\n          <div className=\"p-4 bg-purple-900/20 border border-purple-500/30 rounded-lg\">\n            <h4 className=\"font-bold mb-2 text-purple-300\">Oracle ML Features</h4>\n            <div className=\"space-y-1 text-sm\">\n              <div className={`${oraclePredictions ? 'text-green-400' : 'text-gray-500'}`}>\n                {oraclePredictions ? '✓' : '✗'} Oracle Predictions & Challenges\n              </div>\n              <div className={`${advancedAnalytics ? 'text-green-400' : 'text-gray-500'}`}>\n                {advancedAnalytics ? '✓' : '✗'} Advanced Analytics\n              </div>\n              <div className={`${injuryTracking ? 'text-green-400' : 'text-gray-500'}`}>\n                {injuryTracking ? '✓' : '✗'} Injury Tracking\n              </div>\n              <div className={`${tradeAnalysis ? 'text-green-400' : 'text-gray-500'}`}>\n                {tradeAnalysis ? '✓' : '✗'} Trade Analysis\n              </div>\n              <div className={`${waiverAnalysis ? 'text-green-400' : 'text-gray-500'}`}>\n                {waiverAnalysis ? '✓' : '✗'} Waiver Intelligence\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          <div className=\"p-4 bg-black/10 rounded-lg\">\n            <h4 className=\"font-bold mb-2\">Player Roster</h4>\n            <div className=\"space-y-2\">\n              {players.map((player) => (\n                <div key={player.name} className=\"flex items-center gap-2 text-sm\">\n                  <Avatar avatar={player.avatar} className=\"w-6 h-6 text-sm rounded\" />\n                  <span className={player.isUser ? 'text-green-400 font-bold' : 'text-gray-300'}>\n                    {player.name}\n                  </span>\n                  <span className=\"text-gray-500\">- {player.teamName}</span>\n                  {player.isUser && <span className=\"text-xs text-green-400\">(You)</span>}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <Modal onClose={onClose}>\n      <motion.div \n        className=\"glass-pane rounded-xl shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-y-auto\"\n        initial={{ opacity: 0, y: -20, scale: 0.95 }}\n        animate={{ opacity: 1, y: 0, scale: 1 }}\n        exit={{ opacity: 0, y: 20, scale: 0.95 }}\n        onClick={(e: any) => e.stopPropagation()}\n      >\n        <header className=\"p-6 border-b border-[var(--panel-border)] flex justify-between items-center\">\n          <div>\n            <h2 className=\"text-2xl font-bold font-display text-[var(--text-primary)]\">\n              Create Enhanced League\n            </h2>\n            <p className=\"text-sm text-gray-400 mt-1\">\n              {currentStep === 'config' && 'Step 1 of 3'}\n              {currentStep === 'players' && 'Step 2 of 3'}\n              {currentStep === 'review' && 'Step 3 of 3'}\n            </p>\n          </div>\n          \n          <div className=\"flex gap-2\">\n            {['config', 'players', 'review'].map((step, index) => {\n              let bgColor = 'bg-gray-800';\n              if (currentStep === step) {\n                bgColor = 'bg-cyan-400';\n              } else if (['config', 'players'].indexOf(currentStep) > index) {\n                bgColor = 'bg-gray-600';\n              }\n              \n              return (\n                <div\n                  key={step}\n                  className={`w-3 h-3 rounded-full transition-colors ${bgColor}`}\n                />\n              );\n            })}\n          </div>\n        </header>\n\n        <main className=\"p-6\">\n          <AnimatePresence mode=\"wait\">\n            {currentStep === 'config' && (\n              <motion.div\n                key=\"config\"\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: 20 }}\n              >\n                {renderConfigurationStep()}\n              </motion.div>\n            )}\n            \n            {currentStep === 'players' && (\n              <motion.div\n                key=\"players\"\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: 20 }}\n              >\n                {renderPlayersStep()}\n              </motion.div>\n            )}\n            \n            {currentStep === 'review' && (\n              <motion.div\n                key=\"review\"\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: 20 }}\n              >\n                {renderReviewStep()}\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </main>\n\n        <footer className=\"p-6 flex justify-between border-t border-[var(--panel-border)]\">\n          <div>\n            {currentStep !== 'config' && (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  if (currentStep === 'players') setCurrentStep('config');\n                  if (currentStep === 'review') setCurrentStep('players');\n                }}\n                className=\"px-4 py-2 bg-transparent border border-[var(--panel-border)] text-[var(--text-secondary)] font-bold rounded-lg hover:bg-white/10 transition-colors\"\n              >\n                Back\n              </button>\n            )}\n          </div>\n          \n          <div className=\"flex gap-4\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"px-4 py-2 bg-transparent border border-[var(--panel-border)] text-[var(--text-secondary)] font-bold rounded-lg hover:bg-white/10 transition-colors\"\n            >\n              Cancel\n            </button>\n            \n            {currentStep === 'review' ? (\n              <button\n                type=\"button\"\n                onClick={handleSubmit}\n                disabled={isSubmitting}\n                className=\"px-6 py-2 bg-gradient-to-r from-green-500 to-cyan-500 text-white font-bold rounded-lg shadow-md hover:from-green-600 hover:to-cyan-600 transition-colors disabled:opacity-60 disabled:cursor-wait\"\n              >\n                {isSubmitting ? 'Creating League...' : 'Create League'}\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  if (currentStep === 'config') setCurrentStep('players');\n                  if (currentStep === 'players') setCurrentStep('review');\n                }}\n                className=\"px-6 py-2 bg-gradient-to-r from-purple-500 to-blue-500 text-white font-bold rounded-lg shadow-md hover:from-purple-600 hover:to-blue-600 transition-colors\"\n              >\n                {currentStep === 'config' ? 'Configure Players' : 'Review & Create'}\n              </button>\n            )}\n          </div>\n        </footer>\n      </motion.div>\n    </Modal>\n  );\n};\n\nexport default EnhancedCreateLeagueModal;\n","\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { NewspaperIcon } from '../icons/NewspaperIcon';\nimport { useLiveData } from '../../hooks/useLiveData';\nimport { LiveNewsItem } from '../../types';\n\nconst NewsTicker: React.FC = () => {\n    const { latestNews } = useLiveData();\n    const [headlines, setHeadlines] = React.useState<LiveNewsItem[]>([]);\n    const [currentIndex, setCurrentIndex] = React.useState(0);\n\n    React.useEffect(() => {\n        if (latestNews && !headlines.some((h: any) => h.id === latestNews.id)) {\n            setHeadlines(prev => [latestNews, ...prev].slice(0, 10)); // Keep last 10\n        }\n    }, [latestNews, headlines]);\n\n    React.useEffect(() => {\n        if (headlines.length > 1) {\n            const interval = setInterval(() => {\n                setCurrentIndex((prevIndex) => (prevIndex + 1) % headlines.length);\n            }, 5000); // Change headline every 5 seconds\n            return () => clearInterval(interval);\n        }\n    }, [headlines.length]);\n\n    if (headlines.length === 0) {\n        return <div className=\"p-4 text-center text-sm text-[var(--text-secondary)] h-full flex items-center justify-center\">Awaiting latest news...</div>;\n    }\n\n    const currentHeadline = headlines[currentIndex];\n\n    return (\n        <div className=\"p-4 overflow-hidden h-full flex items-center\">\n            <AnimatePresence mode=\"wait\">\n                <motion.div\n                    key={currentHeadline.id}\n                    className=\"flex items-start gap-3 w-full\"\n                    {...{\n                        initial: { opacity: 0, y: 20 },\n                        animate: { opacity: 1, y: 0 },\n                        exit: { opacity: 0, y: -20 },\n                        transition: { duration: 0.5, ease: 'easeInOut' },\n                    }}\n                >\n                    <NewspaperIcon className=\"w-5 h-5 mt-0.5 text-cyan-400 flex-shrink-0\" />\n                    <div className=\"flex-grow\">\n                        <p className=\"text-[var(--text-primary)] font-semibold\">{currentHeadline.headline}</p>\n                        <p className=\"text-xs text-[var(--text-secondary)] mt-1\">{currentHeadline.source}</p>\n                    </div>\n                </motion.div>\n            </AnimatePresence>\n        </div>\n    );\n};\n\nexport default NewsTicker;\n","\nimport React from 'react';\n\nexport const RobotIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <path d=\"M12 8V4H8\" />\n        <rect width=\"16\" height=\"12\" x=\"4\" y=\"8\" rx=\"2\" />\n        <path d=\"M2 14h2\" />\n        <path d=\"M20 14h2\" />\n        <path d=\"M15 13v2\" />\n        <path d=\"M9 13v2\" />\n    </svg>\n);\n","\n\n\n\nimport React from 'react';\nimport type { LeagueSettings, User } from '../../types';\nimport Modal from '../ui/Modal';\nimport { motion } from 'framer-motion';\n\ninterface MockDraftModalProps {\n    onClose: () => void;\n    user: User;\n    dispatch: React.Dispatch<any>;\n}\n\nconst MockDraftModal: React.FC<MockDraftModalProps> = ({ onClose, user, dispatch }) => {\n    const [draftFormat, setDraftFormat] = React.useState<LeagueSettings['draftFormat']>('SNAKE');\n    const [teamCount, setTeamCount] = React.useState<LeagueSettings['teamCount']>(12);\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        const leagueId = `mock_${Date.now()}`;\n        const newMockLeague = {\n            id: leagueId,\n            name: `Mock Draft (${draftFormat})`,\n            settings: {\n                draftFormat,\n                teamCount,\n                scoring: 'PPR' as const,\n                rosterSize: 16\n            },\n        };\n        dispatch({ type: 'CREATE_MOCK_DRAFT', payload: newMockLeague });\n        dispatch({ type: 'SET_ACTIVE_LEAGUE', payload: leagueId });\n        // The START_DRAFT action needs to be called after the state updates\n        setTimeout(() => {\n            dispatch({ type: 'START_DRAFT' });\n        }, 100);\n        onClose();\n    };\n\n    const labelClasses = \"block text-sm font-medium text-[var(--text-secondary)] mb-1\";\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.div \n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-md\"\n                role=\"dialog\"\n                aria-modal=\"true\"\n                aria-labelledby=\"mock-draft-title\"\n                onClick={(e: any) => e.stopPropagation()}\n                {...{\n                    initial: { opacity: 0, y: -20, scale: 0.95 },\n                    animate: { opacity: 1, y: 0, scale: 1 },\n                    exit: { opacity: 0, y: 20, scale: 0.95 },\n                }}\n            >\n                <header className=\"p-6 border-b border-[var(--panel-border)]\">\n                    <h2 id=\"mock-draft-title\" className=\"text-2xl font-bold font-display text-[var(--text-primary)]\">\n                        Start Mock Draft\n                    </h2>\n                </header>\n\n                <form onSubmit={handleSubmit}>\n                    <main className=\"p-6 space-y-6\">\n                        <div>\n                            <label className={labelClasses}>Draft Format</label>\n                            <div className=\"flex gap-2\">\n                                {['SNAKE', 'AUCTION'].map((format: any) => (\n                                    <button type=\"button\" key={format} onClick={() => setDraftFormat(format as any)} className={`flex-1 py-2 text-sm font-bold rounded-md transition-all ${draftFormat === format ? 'bg-cyan-400 text-black' : 'bg-black/10 dark:bg-gray-700/50 hover:bg-black/20 dark:hover:bg-gray-600/50'}`}>\n                                        {format}\n                                    </button>\n                                ))}\n                            </div>\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"team-count\" className={labelClasses}>Number of Teams: <span className=\"font-bold text-[var(--text-primary)]\">{teamCount}</span></label>\n                            <input id=\"team-count\" type=\"range\" min=\"8\" max=\"14\" step=\"2\" value={teamCount} onChange={e => setTeamCount(Number(e.target.value))} className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer accent-cyan-400\" />\n                        </div>\n                    </main>\n\n                    <footer className=\"p-6 flex justify-end gap-4 border-t border-[var(--panel-border)]\">\n                        <button type=\"button\" onClick={onClose} className=\"mobile-touch-target px-4 py-3 bg-transparent border border-[var(--panel-border)] text-[var(--text-secondary)] font-bold rounded-lg hover:bg-white/10 transition-colors\">\n                            Cancel\n                        </button>\n                        <button type=\"submit\" className=\"mobile-touch-target px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-500 text-white font-bold rounded-lg shadow-md transition-colors\">\n                            Start Drafting\n                        </button>\n                    </footer>\n                </form>\n            </motion.div>\n        </Modal>\n    );\n};\n\nexport default MockDraftModal;","\nimport React from 'react';\n\nexport const EyeIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-4 w-4\"}>\n        <path d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\" />\n        <circle cx=\"12\" cy=\"12\" r=\"3\" />\n    </svg>\n);\n","\n\n\n\nimport React from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useAppState } from '../../contexts/AppContext';\nimport { Widget } from '../ui/Widget';\nimport { StarFilledIcon } from '../icons/StarFilledIcon';\nimport { players } from '../../data/players';\nimport type { Player, WatchlistInsight } from '../../types';\nimport { CloseIcon } from '../icons/CloseIcon';\nimport { generateWatchlistInsights } from '../../services/geminiService';\nimport { EyeIcon } from '../icons/EyeIcon';\n\nconst InsightDisplay: React.FC<{ insights: WatchlistInsight[] }> = ({ insights }) => {\n    const [currentIndex, setCurrentIndex] = React.useState(0);\n\n    React.useEffect(() => {\n        if (insights.length > 1) {\n            const timer = setInterval(() => {\n                setCurrentIndex(prev => (prev + 1) % insights.length);\n            }, 6000); // Cycle every 6 seconds\n            return () => clearInterval(timer);\n        }\n    }, [insights]);\n\n    if (insights.length === 0) {\n        return <p className=\"text-center text-xs text-gray-500 py-2\">The Oracle has no new insights on your watchlist.</p>;\n    }\n\n    const currentInsight = insights[currentIndex];\n    const player = players.find((p: any) => p.id === currentInsight.playerId);\n\n    return (\n        <div className=\"pt-2 text-center\">\n            <h4 className=\"flex items-center justify-center gap-1.5 text-xs font-bold text-cyan-300 mb-1\">\n                <EyeIcon />\n                ORACLE'S WATCH\n            </h4>\n            <AnimatePresence mode=\"wait\">\n                <motion.div\n                    key={currentIndex}\n                    {...{\n                        initial: { opacity: 0, y: 10 },\n                        animate: { opacity: 1, y: 0 },\n                        exit: { opacity: 0, y: -10 },\n                        transition: { duration: 0.4 },\n                    }}\n                >\n                    <p className=\"text-xs text-gray-300 italic\">\n                        <strong className=\"text-yellow-300\">{player?.name}:</strong> \"{currentInsight.insight}\"\n                    </p>\n                </motion.div>\n            </AnimatePresence>\n        </div>\n    );\n};\n\n\nconst WatchlistWidget: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    \n    const watchedPlayers = React.useMemo(() => {\n        const playerMap = new Map(players.map((p: any) => [p.id, p]));\n        return state.watchlist.map((id: any) => playerMap.get(id)).filter(Boolean) as Player[];\n    }, [state.watchlist]);\n    \n    const activeLeague = state.leagues.find((l: any) => l.id === state.activeLeagueId);\n    \n    React.useEffect(() => {\n        // Fetch insights if watchlist has players, an active league exists, and insights are currently empty\n        if (watchedPlayers.length > 0 && activeLeague && state.watchlistInsights.length === 0) {\n            const fetchInsights = async () => {\n                try {\n                    const insights = await generateWatchlistInsights(watchedPlayers, activeLeague);\n                    if (insights) {\n                        dispatch({ type: 'SET_WATCHLIST_INSIGHTS', payload: insights });\n                    }\n                } catch (e) {\n                    console.error(\"Failed to fetch watchlist insights\", e);\n                }\n            };\n            fetchInsights();\n        } else if (watchedPlayers.length === 0 && state.watchlistInsights.length > 0) {\n            // Clear insights if watchlist is empty\n            dispatch({ type: 'SET_WATCHLIST_INSIGHTS', payload: [] });\n        }\n    }, [watchedPlayers, activeLeague, dispatch, state.watchlistInsights.length]);\n\n\n    const handleRemove = (e: React.MouseEvent, playerId: number) => {\n        e.stopPropagation();\n        dispatch({ type: 'REMOVE_FROM_WATCHLIST', payload: playerId });\n    };\n\n    const handlePlayerClick = (player: Player) => {\n        dispatch({ type: 'SET_PLAYER_DETAIL', payload: { player } });\n    };\n\n    return (\n        <Widget title=\"My Watchlist\" icon={<StarFilledIcon />}>\n            <div className=\"p-3\">\n                {watchedPlayers.length === 0 ? (\n                    <p className=\"text-center text-xs text-gray-400 py-4\">Star players from the draft pool to add them to your watchlist.</p>\n                ) : (\n                    <div className=\"space-y-2\">\n                        {watchedPlayers.map((player: any) => (\n                            <div \n                                key={player.id} \n                                onClick={() => handlePlayerClick(player)}\n                                className=\"flex items-center justify-between p-2 bg-black/10 rounded-md group hover:bg-black/20 cursor-pointer\"\n                            >\n                                <div className=\"flex items-center gap-3\">\n                                    <div className=\"text-yellow-400\">\n                                        <StarFilledIcon className=\"h-4 w-4\" />\n                                    </div>\n                                    <div>\n                                        <p className=\"font-semibold text-sm\">{player.name}</p>\n                                        <p className=\"text-xs text-gray-400\">{player.position} - {player.team}</p>\n                                    </div>\n                                </div>\n                                <button \n                                    onClick={(e: any) => handleRemove(e, player.id)} \n                                    className=\"text-gray-500 hover:text-red-400 p-1 rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n                                    aria-label={`Remove ${player.name} from watchlist`}\n                                >\n                                    <CloseIcon className=\"w-3 h-3\"/>\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                )}\n                {state.watchlistInsights.length > 0 && (\n                    <div className=\"mt-3 pt-3 border-t border-white/10\">\n                        <InsightDisplay insights={state.watchlistInsights} />\n                    </div>\n                )}\n            </div>\n        </Widget>\n    );\n};\n\nexport default WatchlistWidget;","\nimport React from 'react';\nimport type { League } from '../../types';\nimport { Widget } from '../ui/Widget';\nimport { ChartBarIcon } from '../icons/ChartBarIcon';\nimport Tooltip from '../ui/Tooltip';\n\ninterface PowerBalanceChartProps {\n    leagues: League[];\n}\n\nconst PowerBalanceChart: React.FC<PowerBalanceChartProps> = ({ leagues }) => {\n    const chartData = React.useMemo(() => {\n        return leagues.filter((l: any) => !l.isMock).map((league: any) => {\n            const myTeam = league.teams.find((t: any) => t.owner.id === 'user_1');\n            if (!myTeam) return null;\n            \n            const totalGames = myTeam.record.wins + myTeam.record.losses + myTeam.record.ties;\n            const winPct = totalGames > 0 ? (myTeam.record.wins + myTeam.record.ties * 0.5) / totalGames * 100 : 50;\n\n            return {\n                leagueName: league.name,\n                winPct,\n            };\n        }).filter(Boolean) as { leagueName: string, winPct: number }[];\n    }, [leagues]);\n\n    return (\n        <Widget title=\"League Power Balance\" icon={<ChartBarIcon />}>\n            <div className=\"p-4 h-full flex flex-col justify-center\">\n                {chartData.length === 0 ? (\n                    <p className=\"text-center text-xs text-gray-400\">Join a league to see your power balance.</p>\n                ) : (\n                    <div className=\"space-y-3\">\n                        {chartData.map(({ leagueName, winPct }) => (\n                            <div key={leagueName}>\n                                <p className=\"text-xs font-semibold text-gray-300 mb-1\">{leagueName}</p>\n                                <div className=\"relative w-full h-5 bg-black/20 rounded-full\">\n                                    {/* League Average Line */}\n                                    <div className=\"absolute top-0 bottom-0 left-1/2 w-px bg-red-500/50\"></div>\n                                    <Tooltip text={`League Average: 50%`}>\n                                        <div className=\"absolute -top-2 left-1/2 -translate-x-1/2 text-[10px] text-red-400\">AVG</div>\n                                    </Tooltip>\n                                    \n                                    {/* My Team Bar */}\n                                    <Tooltip text={`Your Win Pct: ${winPct.toFixed(0)}%`}>\n                                        <div \n                                            className=\"h-full bg-gradient-to-r from-cyan-500 to-blue-500 rounded-full\"\n                                            style={{ width: `${winPct}%`}}\n                                        ></div>\n                                    </Tooltip>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </Widget>\n    );\n};\n\nexport default PowerBalanceChart;\n","\n\n\n\n\nimport React from 'react';\nimport { motion, Reorder } from 'framer-motion';\nimport Modal from '../ui/Modal';\nimport { useAppState } from '../../contexts/AppContext';\nimport { LayoutIcon } from '../icons/LayoutIcon';\nimport { DragHandleIcon } from '../icons/DragHandleIcon';\n\ninterface CustomizeDashboardModalProps {\n    onClose: () => void;\n}\n\nconst widgetLabels: { [key: string]: string } = {\n    whatsNext: \"What's Next\",\n    leagues: 'My Leagues',\n    mockDrafts: 'Mock Drafts',\n    watchlist: 'My Watchlist',\n    power: 'Power Balance',\n    news: 'News Ticker',\n    assistant: 'AI Assistant',\n};\n\nconst CustomizeDashboardModal: React.FC<CustomizeDashboardModalProps> = ({ onClose }) => {\n    const { state, dispatch } = useAppState();\n    const [layout, setLayout] = React.useState(state.dashboardLayout);\n\n    const handleSave = () => {\n        dispatch({ type: 'UPDATE_DASHBOARD_LAYOUT', payload: layout });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Dashboard layout updated!', type: 'SYSTEM' } });\n        onClose();\n    };\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.div\n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-md\"\n                {...{\n                    initial: { opacity: 0, scale: 0.95 },\n                    animate: { opacity: 1, scale: 1 },\n                }}\n            >\n                <header className=\"p-4 border-b border-[var(--panel-border)]\">\n                    <h2 className=\"text-xl font-bold font-display flex items-center gap-2\">\n                        <LayoutIcon />\n                        Customize Dashboard\n                    </h2>\n                </header>\n                <main className=\"p-4\">\n                    <p className=\"text-xs text-gray-400 mb-2\">Drag and drop to reorder your dashboard widgets.</p>\n                    <Reorder.Group axis=\"y\" values={layout} onReorder={setLayout} className=\"space-y-2\">\n                        {layout.map((widgetId: any) => (\n                            <Reorder.Item \n                                key={widgetId} \n                                value={widgetId}\n                                className=\"p-3 bg-black/20 rounded-lg flex items-center gap-3 cursor-grab active:cursor-grabbing\"\n                            >\n                                <DragHandleIcon className=\"text-gray-500\" />\n                                <span className=\"font-semibold\">{widgetLabels[widgetId] || widgetId}</span>\n                            </Reorder.Item>\n                        ))}\n                    </Reorder.Group>\n                </main>\n                <footer className=\"p-4 flex justify-end gap-2 border-t border-[var(--panel-border)]\">\n                    <button onClick={onClose} className=\"px-4 py-2 text-sm font-bold bg-transparent border border-transparent hover:border-[var(--panel-border)] rounded-md\">Cancel</button>\n                    <button onClick={handleSave} className=\"px-4 py-2 text-sm font-bold bg-cyan-500 text-black rounded-md\">Save Layout</button>\n                </footer>\n            </motion.div>\n        </Modal>\n    );\n};\n\nexport default CustomizeDashboardModal;","import React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport { Widget } from '../ui/Widget';\nimport { ArrowRightIcon } from '../icons/ArrowRightIcon';\nimport { SparklesIcon } from '../icons/SparklesIcon';\n\nconst WhatsNextWidget: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    \n    // Find the most relevant league (active, or first non-mock, or first mock)\n    const activeLeague = state.leagues.find((l: any) => l.id === state.activeLeagueId);\n    const primaryLeague = activeLeague || state.leagues.find((l: any) => !l.isMock) || state.leagues[0];\n\n    let action = {\n        title: \"Welcome to Astral Draft!\",\n        description: \"Create a new league or start a mock draft to begin your journey.\",\n        buttonText: \"Create League\",\n        onClick: () => { /* This should open the create league modal, handled in DashboardView */ }\n    };\n\n    if (primaryLeague) {\n        switch (primaryLeague?.status) {\n            case 'PRE_DRAFT':\n                action = {\n                    title: `Prepare for your draft in ${primaryLeague.name}!`,\n                    description: \"Head to the league hub to check settings and get ready for the big day.\",\n                    buttonText: \"Go to League Hub\",\n                    onClick: () => {\n                        dispatch({ type: 'SET_ACTIVE_LEAGUE', payload: primaryLeague.id });\n                        dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_HUB' });\n                    }\n                };\n                break;\n            case 'DRAFTING':\n                action = {\n                    title: `Draft is live in ${primaryLeague.name}!`,\n                    description: \"Your draft is currently in progress. Enter the draft room to make your picks.\",\n                    buttonText: \"Enter Draft Room\",\n                    onClick: () => {\n                        dispatch({ type: 'SET_ACTIVE_LEAGUE', payload: primaryLeague.id });\n                        dispatch({ type: 'SET_VIEW', payload: 'DRAFT_ROOM' });\n                    }\n                };\n                break;\n            case 'IN_SEASON':\n            case 'PLAYOFFS':\n                const myTeam = primaryLeague.teams.find((t: any) => t.owner.id === state.user.id);\n                const matchup = primaryLeague.schedule.find((m: any) => m.week === primaryLeague.currentWeek && (m.teamA.teamId === myTeam?.id || m.teamB.teamId === myTeam?.id));\n                const opponent = primaryLeague.teams.find((t: any) => t.id === (matchup?.teamA.teamId === myTeam?.id ? matchup?.teamB.teamId : matchup?.teamA.teamId));\n\n                action = {\n                    title: `Week ${primaryLeague.currentWeek}: vs. ${opponent?.name || 'Opponent'}`,\n                    description: \"It's game week! Set your lineup, check the waiver wire, and prepare for victory.\",\n                    buttonText: \"Go to My Team\",\n                    onClick: () => {\n                         dispatch({ type: 'SET_ACTIVE_LEAGUE', payload: primaryLeague.id });\n                         dispatch({ type: 'SET_VIEW', payload: 'TEAM_HUB' });\n                    }\n                };\n                break;\n             case 'DRAFT_COMPLETE':\n                 action = {\n                    title: `Draft Complete in ${primaryLeague.name}!`,\n                    description: \"Your draft is finished. Check out the analytics to see your grade and review the results.\",\n                    buttonText: \"View Draft Analytics\",\n                    onClick: () => {\n                         dispatch({ type: 'SET_ACTIVE_LEAGUE', payload: primaryLeague.id });\n                         dispatch({ type: 'SET_VIEW', payload: 'ANALYTICS_HUB' });\n                    }\n                };\n                break;\n            case 'COMPLETE':\n                 action = {\n                    title: `Season Complete in ${primaryLeague.name}!`,\n                    description: \"The season is over. Relive the glory by checking out the season summary and awards.\",\n                    buttonText: \"View Season Review\",\n                    onClick: () => {\n                         dispatch({ type: 'SET_ACTIVE_LEAGUE', payload: primaryLeague.id });\n                         dispatch({ type: 'SET_SEASON_REVIEW_YEAR', payload: new Date().getFullYear() - 1 });\n                         dispatch({ type: 'SET_VIEW', payload: 'SEASON_REVIEW' });\n                    }\n                };\n                break;\n        }\n    }\n\n    return (\n        <Widget title=\"What's Next\" icon={<SparklesIcon />} className=\"row-span-2\">\n            <div className=\"p-4 flex flex-col justify-between h-full\">\n                <div>\n                    <h3 className=\"font-bold text-lg text-white\">{action.title}</h3>\n                    <p className=\"text-sm text-gray-300 mt-1\">{action.description}</p>\n                </div>\n                <button \n                    onClick={action.onClick}\n                    className=\"w-full mt-4 flex items-center justify-center gap-2 px-6 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 text-white font-bold rounded-lg btn-primary\"\n                >\n                    {action.buttonText}\n                    <ArrowRightIcon />\n                </button>\n            </div>\n        </Widget>\n    );\n};\n\nexport default WhatsNextWidget;","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport { Widget } from '../ui/Widget';\nimport { ActivityIcon, TrophyIcon, UserIcon } from 'lucide-react'; // Assuming lucide-react is available or similar icons\nimport { FlameIcon } from '../icons/FlameIcon';\nimport { StarIcon } from '../icons/StarIcon';\nimport { BarChartIcon } from 'lucide-react';\n\nconst StatCard: React.FC<{ icon: React.ReactNode; label: string; value: string | number; color: string }> = ({ icon, label, value, color }) => (\n    <div className=\"flex items-center gap-2\">\n        <div className={`w-8 h-8 flex-shrink-0 flex items-center justify-center rounded-lg bg-black/20 ${color}`}>\n            {icon}\n        </div>\n        <div>\n            <p className=\"text-xs text-gray-400\">{label}</p>\n            <p className=\"text-sm font-bold text-white\">{value}</p>\n        </div>\n    </div>\n);\n\nconst PerformanceMetricsWidget: React.FC = () => {\n    const { state } = useAppState();\n    const activeLeague = state.leagues.find((l: any) => l.id === state.activeLeagueId);\n    const myTeam = activeLeague?.teams.find((t: any) => t.owner.id === state.user.id);\n\n    if (!myTeam || !activeLeague || activeLeague?.status === 'PRE_DRAFT' || activeLeague?.status === 'DRAFTING') {\n        return (\n             <Widget title=\"My Performance\">\n                 <div className=\"p-4 text-center text-xs text-gray-400 h-full flex items-center justify-center\">\n                    Performance metrics will appear here once the season starts.\n                 </div>\n            </Widget>\n        );\n    }\n\n    const weeklyScores = activeLeague.schedule\n        .filter(m => m.week < activeLeague.currentWeek && (m.teamA.teamId === myTeam.id || m.teamB.teamId === myTeam.id))\n        .map((m: any) => m.teamA.teamId === myTeam.id ? m.teamA.score : m.teamB.score);\n    \n    const bestWeek = weeklyScores.length > 0 ? Math.max(...weeklyScores).toFixed(2) : 'N/A';\n    \n    const teamMVP = myTeam.roster.length > 0 ? myTeam.roster.sort((a,b) => b.stats.projection - a.stats.projection)[0].name : 'N/A';\n    \n    const rank = [...activeLeague.teams].sort((a, b) => b.record.wins - a.record.wins).findIndex((t: any) => t.id === myTeam.id) + 1;\n\n\n    return (\n        <Widget title=\"My Performance\">\n            <div className=\"p-3 space-y-3\">\n                <StatCard icon={<FlameIcon />} label=\"Best Week\" value={bestWeek} color=\"text-orange-400\" />\n                <StatCard icon={<StarIcon />} label=\"Team MVP\" value={teamMVP} color=\"text-yellow-400\" />\n                <StatCard icon={<TrophyIcon />} label=\"Current Rank\" value={rank} color=\"text-cyan-400\" />\n            </div>\n        </Widget>\n    );\n};\n\nexport default PerformanceMetricsWidget;\n","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport { Widget } from '../ui/Widget';\nimport type { ActivityItem } from '../../types';\nimport { ArrowRightLeftIcon } from '../icons/ArrowRightLeftIcon';\nimport { PlusCircleIcon } from '../icons/PlusCircleIcon';\nimport { formatRelativeTime } from '../../utils/time';\nimport { ActivityIcon } from 'lucide-react';\n\n\nconst activityIcons: { [key in ActivityItem['type']]: React.ReactNode } = {\n    TRADE: <ArrowRightLeftIcon className=\"h-4 w-4 text-purple-400\" />,\n    WAIVER: <PlusCircleIcon className=\"h-4 w-4 text-green-400\" />,\n    DRAFT: <div />, // Draft handled elsewhere\n};\n\n\nconst ActivityFeedWidget: React.FC = () => {\n    const { state } = useAppState();\n\n    const feed = state.activityFeed;\n\n    return (\n        <Widget title=\"League Activity\">\n            <div className=\"p-3 space-y-3\">\n                {feed.length === 0 ? (\n                    <p className=\"text-center text-xs text-gray-400 py-4\">No recent activity.</p>\n                ) : (\n                    feed.map((item: any) => (\n                        <div key={item.id} className=\"flex items-start gap-3\">\n                            <div className=\"mt-1\">{activityIcons[item.type]}</div>\n                            <div>\n                                <p className=\"text-xs text-gray-300\">{item.content}</p>\n                                <p className=\"text-[10px] text-gray-500\">{formatRelativeTime(item.timestamp)}</p>\n                            </div>\n                        </div>\n                    ))\n                )}\n            </div>\n        </Widget>\n    );\n};\n\nexport default ActivityFeedWidget;\n","\nimport React from 'react';\nimport { Widget } from '../ui/Widget';\nimport { FireIcon } from '../icons/FireIcon';\n\nconst OnTheHotSeatWidget: React.FC = () => {\n    // This is a placeholder component to fix a build error.\n    // The full implementation will be added in a future update.\n    return (\n        <Widget title=\"On The Hot Seat\" icon={<FireIcon />}>\n            <div className=\"p-4 text-center text-xs text-gray-400 h-full flex items-center justify-center\">\n                Feature coming soon...\n            </div>\n        </Widget>\n    );\n};\n\nexport default OnTheHotSeatWidget;\n","import React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { Widget } from '../components/ui/Widget';\nimport { LeagueCard } from '../components/ui/LeagueCard';\nimport CreateLeagueModal from '../components/core/CreateLeagueModal';\nimport EnhancedCreateLeagueModal from '../components/core/EnhancedCreateLeagueModal';\nimport { AnimatePresence } from 'framer-motion';\nimport NewsTicker from '../components/ui/NewsTicker';\nimport { NewspaperIcon } from '../components/icons/NewspaperIcon';\nimport { RobotIcon } from '../components/icons/RobotIcon';\nimport MockDraftModal from '../components/core/MockDraftModal';\nimport { BrainCircuitIcon } from '../components/icons/BrainCircuitIcon';\nimport { SparklesIcon } from '../components/icons/SparklesIcon';\nimport { ZapIcon } from '../components/icons/ZapIcon';\nimport useSound from '../hooks/useSound';\nimport WatchlistWidget from '../components/team/WatchlistWidget';\nimport PowerBalanceChart from '../components/dashboard/PowerBalanceChart';\nimport CustomizeDashboardModal from '../components/dashboard/CustomizeDashboardModal';\nimport WhatsNextWidget from '../components/dashboard/WhatsNextWidget';\nimport PerformanceMetricsWidget from '../components/dashboard/PerformanceMetricsWidget';\nimport ErrorBoundary from '../components/ui/ErrorBoundary';\nimport ActivityFeedWidget from '../components/dashboard/ActivityFeedWidget';\nimport { LayoutIcon } from '../components/icons/LayoutIcon';\nimport OnTheHotSeatWidget from '../components/dashboard/OnTheHotSeatWidget';\nimport { GlobeIcon } from '../components/icons/GlobeIcon';\n\ninterface DashboardViewProps {\n  // No props currently needed, but interface ready for future expansion\n}\n\nconst DashboardView: React.FC<DashboardViewProps> = () => {\n    const { state, dispatch } = useAppState();\n    const [isCreateModalOpen, setIsCreateModalOpen] = React.useState(false);\n    const [isEnhancedCreateModalOpen, setIsEnhancedCreateModalOpen] = React.useState(false);\n    const [isMockModalOpen, setIsMockModalOpen] = React.useState(false);\n    const [isCustomizeModalOpen, setIsCustomizeModalOpen] = React.useState(false);\n    \n    const playHoverSound = useSound('hover', 0.1);\n\n    const handleJoinLeague = (leagueId: string) => {\n        dispatch({ type: 'SET_ACTIVE_LEAGUE', payload: leagueId });\n        dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_HUB' });\n    };\n        \n    const widgetComponents: { [key: string]: React.ReactNode } = {\n        whatsNext: (\n            <WhatsNextWidget />\n        ),\n        leagues: (\n            <Widget title=\"My Leagues\" className=\"sm:col-span-1 lg:col-span-2\">\n                <div className=\"space-y-3 sm:space-y-4 p-2\">\n                    {state.leagues.filter(l => !l.isMock && l.members.some(m => m.id === state.user.id)).length > 0 ? state.leagues.filter(l => !l.isMock && l.members.some(m => m.id === state.user.id)).map(league => (\n                        <LeagueCard key={league.id} league={league} onJoin={() => handleJoinLeague(league.id)} />\n                    )) : (\n                        <div className=\"p-3 sm:p-4 text-center text-[var(--text-secondary)]\">\n                            <p className=\"mb-4 text-sm sm:text-base\">You haven't joined any leagues yet.</p>\n                            <div className=\"flex flex-col gap-3 justify-center\">\n                                <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4\">\n                                    <button \n                                        onMouseEnter={() => playHoverSound()}\n                                        onClick={() => dispatch({ type: 'SET_VIEW', payload: 'CREATE_LEAGUE' })}\n                                        className=\"w-full sm:w-auto px-4 py-3 sm:py-2 bg-gradient-to-r from-green-500 to-cyan-500 text-white font-bold rounded-lg btn-primary text-sm mobile-touch-target\"\n                                    >\n                                        Create League (Wizard)\n                                    </button>\n                                    <button \n                                        onMouseEnter={() => playHoverSound()}\n                                        onClick={() => setIsEnhancedCreateModalOpen(true)}\n                                        className=\"w-full sm:w-auto flex items-center justify-center gap-2 px-4 py-3 sm:py-2 bg-gradient-to-r from-purple-500 to-blue-500 text-white font-bold rounded-lg text-sm mobile-touch-target\"\n                                    >\n                                        <SparklesIcon />\n                                        Enhanced League (ML + Your Players)\n                                    </button>\n                                </div>\n                                <button \n                                    onMouseEnter={() => playHoverSound()}\n                                    onClick={() => dispatch({ type: 'SET_VIEW', payload: 'OPEN_LEAGUES' })}\n                                    className=\"w-full sm:w-auto flex items-center justify-center gap-2 px-4 py-3 sm:py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20 mobile-touch-target\"\n                                >\n                                    <GlobeIcon />\n                                    Join Open League\n                                </button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </Widget>\n        ),\n        onTheHotSeat: <OnTheHotSeatWidget />,\n        performance: <PerformanceMetricsWidget />,\n        activity: <ActivityFeedWidget />,\n        mockDrafts: (\n            <Widget title=\"Mock Drafts\" icon={<RobotIcon />}>\n                <div className=\"p-3 sm:p-4 flex flex-col items-center justify-center h-full gap-3 sm:gap-4\">\n                    <p className=\"text-xs sm:text-sm text-center text-gray-400\">Hone your strategy against AI opponents. Your mock drafts will appear here.</p>\n                     <button \n                        onMouseEnter={() => playHoverSound()}\n                        onClick={() => setIsMockModalOpen(true)}\n                        className=\"w-full flex items-center justify-center gap-2 px-4 sm:px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-500 text-white font-bold rounded-lg btn-primary text-sm mobile-touch-target\"\n                    >\n                        <RobotIcon />\n                        Start Mock Draft\n                    </button>\n                </div>\n            </Widget>\n        ),\n        watchlist: <WatchlistWidget />,\n        power: <PowerBalanceChart leagues={state.leagues} />,\n        news: (\n            <Widget title=\"News Ticker\" icon={<NewspaperIcon />} className=\"sm:col-span-1 lg:col-span-2\">\n               <NewsTicker />\n            </Widget>\n        ),\n        assistant: (\n             <Widget title=\"AI Assistant\" icon={<BrainCircuitIcon />} className=\"sm:row-span-1 lg:row-span-2\">\n                <div className=\"p-3 sm:p-4 text-center flex flex-col items-center justify-center h-full gap-3\">\n                    <p className=\"text-xs sm:text-sm text-gray-400\">Have a question? Need advice on a trade, or want to analyze your team? Ask Astral, your personal fantasy expert.</p>\n                     <button \n                        onMouseEnter={() => playHoverSound()}\n                        onClick={() => dispatch({ type: 'SET_VIEW', payload: 'ASSISTANT' })}\n                        className=\"w-full flex items-center justify-center gap-2 px-4 sm:px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white font-bold rounded-lg btn-primary text-sm mobile-touch-target\"\n                    >\n                        <SparklesIcon />\n                        Ask Astral\n                    </button>\n                </div>\n            </Widget>\n        ),\n        historicalAnalytics: (\n            <Widget title=\"Historical Analytics\" icon={<ZapIcon />}>\n                <div className=\"p-4 text-center flex flex-col items-center justify-center h-full gap-3\">\n                    <p className=\"text-sm text-gray-400\">Track your Oracle prediction accuracy over time and discover insights from your performance history.</p>\n                    <button \n                        onMouseEnter={() => playHoverSound()}\n                        onClick={() => dispatch({ type: 'SET_VIEW', payload: 'HISTORICAL_ANALYTICS' })}\n                        className=\"w-full flex items-center justify-center gap-2 px-6 py-3 bg-gradient-to-r from-purple-500 to-indigo-600 text-white font-bold rounded-lg btn-primary\"\n                    >\n                        <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                        </svg>\n                        View Analytics\n                    </button>\n                </div>\n            </Widget>\n        ),\n    };\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-3 sm:p-4 md:p-6 lg:p-8 overflow-y-auto\">\n             <header className=\"flex-shrink-0 flex flex-col sm:flex-row sm:justify-between sm:items-center gap-3 sm:gap-0 mb-4 sm:mb-6\">\n                <div>\n                    <h1 className=\"font-display text-2xl sm:text-3xl md:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        Dashboard\n                    </h1>\n                </div>\n                <button \n                    onMouseEnter={() => playHoverSound()}\n                    onClick={() => setIsCustomizeModalOpen(true)}\n                    className=\"flex items-center justify-center gap-2 px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20 mobile-touch-target w-full sm:w-auto\"\n                >\n                    <LayoutIcon />\n                    <span>Customize</span>\n                </button>\n            </header>\n            <main className=\"flex-grow grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 sm:gap-6\">\n                {state.dashboardLayout.map(widgetId => {\n                    const widget = widgetComponents[widgetId];\n                    if (!widget) return null;\n                    return <React.Fragment key={widgetId}>{widget}</React.Fragment>;\n                })}\n            </main>\n\n            <AnimatePresence>\n                {isCreateModalOpen && <CreateLeagueModal onClose={() => setIsCreateModalOpen(false)} user={state.user} dispatch={dispatch} />}\n                {isEnhancedCreateModalOpen && (\n                    <EnhancedCreateLeagueModal \n                        onClose={() => setIsEnhancedCreateModalOpen(false)}\n                        user={state.user}\n                        dispatch={dispatch}\n                    />\n                )}\n                {isMockModalOpen && <MockDraftModal onClose={() => setIsMockModalOpen(false)} user={state.user} dispatch={dispatch} />}\n                {isCustomizeModalOpen && <CustomizeDashboardModal onClose={() => setIsCustomizeModalOpen(false)} />}\n            </AnimatePresence>\n        </div>\n    );\n};\n\nconst DashboardViewWithErrorBoundary: React.FC<DashboardViewProps> = (props) => (\n    <ErrorBoundary>\n        <DashboardView {...props} />\n    </ErrorBoundary>\n);\n\nexport default DashboardViewWithErrorBoundary;"],"names":["LeagueCard","league","onJoin","isPreDraft","jsxDEV","this","CreateLeagueModal","onClose","user","dispatch","name","setName","React","userTeamName","setUserTeamName","userTeamAvatar","setUserTeamAvatar","isGenerating","setIsGenerating","isSubmitting","setIsSubmitting","draftFormat","setDraftFormat","teamCount","setTeamCount","scoring","setScoring","tradeDeadline","setTradeDeadline","playoffFormat","setPlayoffFormat","waiverRule","setWaiverRule","aiAssistanceLevel","setAiAssistanceLevel","handleGenerateBranding","branding","generateTeamBranding","handleSubmit","e","aiProfilePromises","generateAiTeamProfile","aiProfiles","newLeague","error","inputClasses","labelClasses","buttonGroupButtonClasses","isActive","Modal","motion","Avatar","Fragment","SparklesIcon","PLAYER_NAMES","EnhancedCreateLeagueModal","leagueName","setLeagueName","useState","selectedPlayerCount","setSelectedPlayerCount","players","setPlayers","selectedUserPlayer","setSelectedUserPlayer","currentStep","setCurrentStep","generateProgress","setGenerateProgress","oraclePredictions","setOraclePredictions","advancedAnalytics","setAdvancedAnalytics","injuryTracking","setInjuryTracking","tradeAnalysis","setTradeAnalysis","waiverAnalysis","setWaiverAnalysis","useEffect","availableNames","initialPlayers","index","handleGenerateAllTeamBranding","updates","totalPlayers","i","player","aiProfile","handleUserPlayerChange","playerName","prev","p","handleCustomizePlayer","userPlayer","profile","renderConfigurationStep","renderPlayersStep","renderReviewStep","step","bgColor","AnimatePresence","NewsTicker","latestNews","useLiveData","headlines","setHeadlines","currentIndex","setCurrentIndex","h","interval","prevIndex","currentHeadline","NewspaperIcon","RobotIcon","className","MockDraftModal","leagueId","newMockLeague","format","EyeIcon","InsightDisplay","insights","timer","currentInsight","WatchlistWidget","state","useAppState","watchedPlayers","playerMap","id","activeLeague","l","generateWatchlistInsights","handleRemove","playerId","handlePlayerClick","Widget","StarFilledIcon","CloseIcon","PowerBalanceChart","leagues","chartData","myTeam","t","totalGames","winPct","ChartBarIcon","Tooltip","widgetLabels","CustomizeDashboardModal","layout","setLayout","handleSave","LayoutIcon","Reorder.Group","widgetId","Reorder.Item","DragHandleIcon","WhatsNextWidget","primaryLeague","action","matchup","m","opponent","ArrowRightIcon","StatCard","icon","label","value","color","PerformanceMetricsWidget","weeklyScores","bestWeek","teamMVP","a","b","rank","FlameIcon","StarIcon","TrophyIcon","activityIcons","ArrowRightLeftIcon","PlusCircleIcon","ActivityFeedWidget","feed","item","formatRelativeTime","OnTheHotSeatWidget","FireIcon","DashboardView","isCreateModalOpen","setIsCreateModalOpen","isEnhancedCreateModalOpen","setIsEnhancedCreateModalOpen","isMockModalOpen","setIsMockModalOpen","isCustomizeModalOpen","setIsCustomizeModalOpen","playHoverSound","useSound","handleJoinLeague","widgetComponents","GlobeIcon","BrainCircuitIcon","ZapIcon","widget","DashboardViewWithErrorBoundary","props","ErrorBoundary"],"mappings":"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"}