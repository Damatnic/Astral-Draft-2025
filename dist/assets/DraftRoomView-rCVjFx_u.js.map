{"version":3,"file":"DraftRoomView-rCVjFx_u.js","sources":["../../node_modules/react-resizable-panels/dist/react-resizable-panels.browser.development.js","../../components/icons/QueueIcon.tsx","../../components/player/PlayerCard.tsx","../../components/player/PlayerPool.tsx","../../components/draft/TeamColumn.tsx","../../components/draft/DraftBoard.tsx","../../components/analytics/PlayerCompareTool.tsx","../../components/strategy/WarRoomPanel.tsx","../../components/ai/ConversationalOracle.tsx","../../components/draft/TurnTimer.tsx","../../components/draft/AuctionPanel.tsx","../../components/draft/LiveDraftLog.tsx","../../utils/notifications.ts","../../hooks/useRealtimeDraft.ts","../../hooks/useRealtimeAuction.ts","../../components/icons/PartyPopperIcon.tsx","../../utils/confetti.ts","../../components/draft/DraftCompleteOverlay.tsx","../../components/draft/MyRosterPanel.tsx","../../components/analytics/CompareTray.tsx","../../hooks/useDraftCommentary.ts","../../components/icons/BotMessageSquareIcon.tsx","../../components/draft/AiCoPilotPanel.tsx","../../views/DraftRoomView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createContext, useLayoutEffect, useRef, forwardRef, createElement, useContext, useImperativeHandle, useState, useCallback, useEffect, useMemo } from 'react';\n\n// The \"contextmenu\" event is not supported as a PointerEvent in all browsers yet, so MouseEvent still need to be handled\n\nconst PanelGroupContext = createContext(null);\nPanelGroupContext.displayName = \"PanelGroupContext\";\n\nconst DATA_ATTRIBUTES = {\n  group: \"data-panel-group\",\n  groupDirection: \"data-panel-group-direction\",\n  groupId: \"data-panel-group-id\",\n  panel: \"data-panel\",\n  panelCollapsible: \"data-panel-collapsible\",\n  panelId: \"data-panel-id\",\n  panelSize: \"data-panel-size\",\n  resizeHandle: \"data-resize-handle\",\n  resizeHandleActive: \"data-resize-handle-active\",\n  resizeHandleEnabled: \"data-panel-resize-handle-enabled\",\n  resizeHandleId: \"data-panel-resize-handle-id\",\n  resizeHandleState: \"data-resize-handle-state\"\n};\nconst PRECISION = 10;\n\nconst useIsomorphicLayoutEffect = useLayoutEffect ;\n\nconst useId = React[\"useId\".toString()];\nconst wrappedUseId = typeof useId === \"function\" ? useId : () => null;\nlet counter = 0;\nfunction useUniqueId(idFromParams = null) {\n  const idFromUseId = wrappedUseId();\n  const idRef = useRef(idFromParams || idFromUseId || null);\n  if (idRef.current === null) {\n    idRef.current = \"\" + counter++;\n  }\n  return idFromParams !== null && idFromParams !== void 0 ? idFromParams : idRef.current;\n}\n\nfunction PanelWithForwardedRef({\n  children,\n  className: classNameFromProps = \"\",\n  collapsedSize,\n  collapsible,\n  defaultSize,\n  forwardedRef,\n  id: idFromProps,\n  maxSize,\n  minSize,\n  onCollapse,\n  onExpand,\n  onResize,\n  order,\n  style: styleFromProps,\n  tagName: Type = \"div\",\n  ...rest\n}) {\n  const context = useContext(PanelGroupContext);\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`);\n  }\n  const {\n    collapsePanel,\n    expandPanel,\n    getPanelSize,\n    getPanelStyle,\n    groupId,\n    isPanelCollapsed,\n    reevaluatePanelConstraints,\n    registerPanel,\n    resizePanel,\n    unregisterPanel\n  } = context;\n  const panelId = useUniqueId(idFromProps);\n  const panelDataRef = useRef({\n    callbacks: {\n      onCollapse,\n      onExpand,\n      onResize\n    },\n    constraints: {\n      collapsedSize,\n      collapsible,\n      defaultSize,\n      maxSize,\n      minSize\n    },\n    id: panelId,\n    idIsFromProps: idFromProps !== undefined,\n    order\n  });\n  const devWarningsRef = useRef({\n    didLogMissingDefaultSizeWarning: false\n  });\n\n  // Normally we wouldn't log a warning during render,\n  // but effects don't run on the server, so we can't do it there\n  {\n    if (!devWarningsRef.current.didLogMissingDefaultSizeWarning) ;\n  }\n  useIsomorphicLayoutEffect(() => {\n    const {\n      callbacks,\n      constraints\n    } = panelDataRef.current;\n    const prevConstraints = {\n      ...constraints\n    };\n    panelDataRef.current.id = panelId;\n    panelDataRef.current.idIsFromProps = idFromProps !== undefined;\n    panelDataRef.current.order = order;\n    callbacks.onCollapse = onCollapse;\n    callbacks.onExpand = onExpand;\n    callbacks.onResize = onResize;\n    constraints.collapsedSize = collapsedSize;\n    constraints.collapsible = collapsible;\n    constraints.defaultSize = defaultSize;\n    constraints.maxSize = maxSize;\n    constraints.minSize = minSize;\n\n    // If constraints have changed, we should revisit panel sizes.\n    // This is uncommon but may happen if people are trying to implement pixel based constraints.\n    if (prevConstraints.collapsedSize !== constraints.collapsedSize || prevConstraints.collapsible !== constraints.collapsible || prevConstraints.maxSize !== constraints.maxSize || prevConstraints.minSize !== constraints.minSize) {\n      reevaluatePanelConstraints(panelDataRef.current, prevConstraints);\n    }\n  });\n  useIsomorphicLayoutEffect(() => {\n    const panelData = panelDataRef.current;\n    registerPanel(panelData);\n    return () => {\n      unregisterPanel(panelData);\n    };\n  }, [order, panelId, registerPanel, unregisterPanel]);\n  useImperativeHandle(forwardedRef, () => ({\n    collapse: () => {\n      collapsePanel(panelDataRef.current);\n    },\n    expand: minSize => {\n      expandPanel(panelDataRef.current, minSize);\n    },\n    getId() {\n      return panelId;\n    },\n    getSize() {\n      return getPanelSize(panelDataRef.current);\n    },\n    isCollapsed() {\n      return isPanelCollapsed(panelDataRef.current);\n    },\n    isExpanded() {\n      return !isPanelCollapsed(panelDataRef.current);\n    },\n    resize: size => {\n      resizePanel(panelDataRef.current, size);\n    }\n  }), [collapsePanel, expandPanel, getPanelSize, isPanelCollapsed, panelId, resizePanel]);\n  const style = getPanelStyle(panelDataRef.current, defaultSize);\n  return createElement(Type, {\n    ...rest,\n    children,\n    className: classNameFromProps,\n    id: panelId,\n    style: {\n      ...style,\n      ...styleFromProps\n    },\n    // CSS selectors\n    [DATA_ATTRIBUTES.groupId]: groupId,\n    [DATA_ATTRIBUTES.panel]: \"\",\n    [DATA_ATTRIBUTES.panelCollapsible]: collapsible || undefined,\n    [DATA_ATTRIBUTES.panelId]: panelId,\n    [DATA_ATTRIBUTES.panelSize]: parseFloat(\"\" + style.flexGrow).toFixed(1)\n  });\n}\nconst Panel = forwardRef((props, ref) => createElement(PanelWithForwardedRef, {\n  ...props,\n  forwardedRef: ref\n}));\nPanelWithForwardedRef.displayName = \"Panel\";\nPanel.displayName = \"forwardRef(Panel)\";\n\nlet nonce;\nfunction getNonce() {\n  return nonce;\n}\nfunction setNonce(value) {\n  nonce = value;\n}\n\nlet currentCursorStyle = null;\nlet enabled = true;\nlet getCustomCursorStyleFunction = null;\nlet prevRuleIndex = -1;\nlet styleElement = null;\nfunction customizeGlobalCursorStyles(callback) {\n  getCustomCursorStyleFunction = callback;\n}\nfunction disableGlobalCursorStyles() {\n  enabled = false;\n}\nfunction enableGlobalCursorStyles() {\n  enabled = true;\n}\nfunction getCursorStyle(state, constraintFlags, isPointerDown) {\n  const horizontalMin = (constraintFlags & EXCEEDED_HORIZONTAL_MIN) !== 0;\n  const horizontalMax = (constraintFlags & EXCEEDED_HORIZONTAL_MAX) !== 0;\n  const verticalMin = (constraintFlags & EXCEEDED_VERTICAL_MIN) !== 0;\n  const verticalMax = (constraintFlags & EXCEEDED_VERTICAL_MAX) !== 0;\n  if (getCustomCursorStyleFunction) {\n    return getCustomCursorStyleFunction({\n      exceedsHorizontalMaximum: horizontalMax,\n      exceedsHorizontalMinimum: horizontalMin,\n      exceedsVerticalMaximum: verticalMax,\n      exceedsVerticalMinimum: verticalMin,\n      intersectsHorizontalDragHandle: state === \"horizontal\" || state === \"intersection\",\n      intersectsVerticalDragHandle: state === \"vertical\" || state === \"intersection\",\n      isPointerDown\n    });\n  }\n  if (constraintFlags) {\n    if (horizontalMin) {\n      if (verticalMin) {\n        return \"se-resize\";\n      } else if (verticalMax) {\n        return \"ne-resize\";\n      } else {\n        return \"e-resize\";\n      }\n    } else if (horizontalMax) {\n      if (verticalMin) {\n        return \"sw-resize\";\n      } else if (verticalMax) {\n        return \"nw-resize\";\n      } else {\n        return \"w-resize\";\n      }\n    } else if (verticalMin) {\n      return \"s-resize\";\n    } else if (verticalMax) {\n      return \"n-resize\";\n    }\n  }\n  switch (state) {\n    case \"horizontal\":\n      return \"ew-resize\";\n    case \"intersection\":\n      return \"move\";\n    case \"vertical\":\n      return \"ns-resize\";\n  }\n}\nfunction resetGlobalCursorStyle() {\n  if (styleElement !== null) {\n    document.head.removeChild(styleElement);\n    currentCursorStyle = null;\n    styleElement = null;\n    prevRuleIndex = -1;\n  }\n}\nfunction setGlobalCursorStyle(state, constraintFlags, isPointerDown) {\n  var _styleElement$sheet$i, _styleElement$sheet2;\n  if (!enabled) {\n    return;\n  }\n  const style = getCursorStyle(state, constraintFlags, isPointerDown);\n  if (currentCursorStyle === style) {\n    return;\n  }\n  currentCursorStyle = style;\n  if (styleElement === null) {\n    styleElement = document.createElement(\"style\");\n    const nonce = getNonce();\n    if (nonce) {\n      styleElement.setAttribute(\"nonce\", nonce);\n    }\n    document.head.appendChild(styleElement);\n  }\n  if (prevRuleIndex >= 0) {\n    var _styleElement$sheet;\n    (_styleElement$sheet = styleElement.sheet) === null || _styleElement$sheet === void 0 ? void 0 : _styleElement$sheet.removeRule(prevRuleIndex);\n  }\n  prevRuleIndex = (_styleElement$sheet$i = (_styleElement$sheet2 = styleElement.sheet) === null || _styleElement$sheet2 === void 0 ? void 0 : _styleElement$sheet2.insertRule(`*{cursor: ${style} !important;}`)) !== null && _styleElement$sheet$i !== void 0 ? _styleElement$sheet$i : -1;\n}\n\nfunction isKeyDown(event) {\n  return event.type === \"keydown\";\n}\nfunction isPointerEvent(event) {\n  return event.type.startsWith(\"pointer\");\n}\nfunction isMouseEvent(event) {\n  return event.type.startsWith(\"mouse\");\n}\n\nfunction getResizeEventCoordinates(event) {\n  if (isPointerEvent(event)) {\n    if (event.isPrimary) {\n      return {\n        x: event.clientX,\n        y: event.clientY\n      };\n    }\n  } else if (isMouseEvent(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY\n    };\n  }\n  return {\n    x: Infinity,\n    y: Infinity\n  };\n}\n\nfunction getInputType() {\n  if (typeof matchMedia === \"function\") {\n    return matchMedia(\"(pointer:coarse)\").matches ? \"coarse\" : \"fine\";\n  }\n}\n\nfunction intersects(rectOne, rectTwo, strict) {\n  if (strict) {\n    return rectOne.x < rectTwo.x + rectTwo.width && rectOne.x + rectOne.width > rectTwo.x && rectOne.y < rectTwo.y + rectTwo.height && rectOne.y + rectOne.height > rectTwo.y;\n  } else {\n    return rectOne.x <= rectTwo.x + rectTwo.width && rectOne.x + rectOne.width >= rectTwo.x && rectOne.y <= rectTwo.y + rectTwo.height && rectOne.y + rectOne.height >= rectTwo.y;\n  }\n}\n\n// Forked from NPM stacking-order@2.0.0\n\n/**\n * Determine which of two nodes appears in front of the other —\n * if `a` is in front, returns 1, otherwise returns -1\n * @param {HTMLElement | SVGElement} a\n * @param {HTMLElement | SVGElement} b\n */\nfunction compare(a, b) {\n  if (a === b) throw new Error(\"Cannot compare node with itself\");\n  const ancestors = {\n    a: get_ancestors(a),\n    b: get_ancestors(b)\n  };\n  let common_ancestor;\n\n  // remove shared ancestors\n  while (ancestors.a.at(-1) === ancestors.b.at(-1)) {\n    a = ancestors.a.pop();\n    b = ancestors.b.pop();\n    common_ancestor = a;\n  }\n  assert(common_ancestor, \"Stacking order can only be calculated for elements with a common ancestor\");\n  const z_indexes = {\n    a: get_z_index(find_stacking_context(ancestors.a)),\n    b: get_z_index(find_stacking_context(ancestors.b))\n  };\n  if (z_indexes.a === z_indexes.b) {\n    const children = common_ancestor.childNodes;\n    const furthest_ancestors = {\n      a: ancestors.a.at(-1),\n      b: ancestors.b.at(-1)\n    };\n    let i = children.length;\n    while (i--) {\n      const child = children[i];\n      if (child === furthest_ancestors.a) return 1;\n      if (child === furthest_ancestors.b) return -1;\n    }\n  }\n  return Math.sign(z_indexes.a - z_indexes.b);\n}\nconst props = /\\b(?:position|zIndex|opacity|transform|webkitTransform|mixBlendMode|filter|webkitFilter|isolation)\\b/;\n\n/** @param {HTMLElement | SVGElement} node */\nfunction is_flex_item(node) {\n  var _get_parent;\n  // @ts-ignore\n  const display = getComputedStyle((_get_parent = get_parent(node)) !== null && _get_parent !== void 0 ? _get_parent : node).display;\n  return display === \"flex\" || display === \"inline-flex\";\n}\n\n/** @param {HTMLElement | SVGElement} node */\nfunction creates_stacking_context(node) {\n  const style = getComputedStyle(node);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n  if (style.position === \"fixed\") return true;\n  // Forked to fix upstream bug https://github.com/Rich-Harris/stacking-order/issues/3\n  // if (\n  //   (style.zIndex !== \"auto\" && style.position !== \"static\") ||\n  //   is_flex_item(node)\n  // )\n  if (style.zIndex !== \"auto\" && (style.position !== \"static\" || is_flex_item(node))) return true;\n  if (+style.opacity < 1) return true;\n  if (\"transform\" in style && style.transform !== \"none\") return true;\n  if (\"webkitTransform\" in style && style.webkitTransform !== \"none\") return true;\n  if (\"mixBlendMode\" in style && style.mixBlendMode !== \"normal\") return true;\n  if (\"filter\" in style && style.filter !== \"none\") return true;\n  if (\"webkitFilter\" in style && style.webkitFilter !== \"none\") return true;\n  if (\"isolation\" in style && style.isolation === \"isolate\") return true;\n  if (props.test(style.willChange)) return true;\n  // @ts-expect-error\n  if (style.webkitOverflowScrolling === \"touch\") return true;\n  return false;\n}\n\n/** @param {(HTMLElement| SVGElement)[]} nodes */\nfunction find_stacking_context(nodes) {\n  let i = nodes.length;\n  while (i--) {\n    const node = nodes[i];\n    assert(node, \"Missing node\");\n    if (creates_stacking_context(node)) return node;\n  }\n  return null;\n}\n\n/** @param {HTMLElement | SVGElement} node */\nfunction get_z_index(node) {\n  return node && Number(getComputedStyle(node).zIndex) || 0;\n}\n\n/** @param {HTMLElement} node */\nfunction get_ancestors(node) {\n  const ancestors = [];\n  while (node) {\n    ancestors.push(node);\n    // @ts-ignore\n    node = get_parent(node);\n  }\n  return ancestors; // [ node, ... <body>, <html>, document ]\n}\n\n/** @param {HTMLElement} node */\nfunction get_parent(node) {\n  const {\n    parentNode\n  } = node;\n  if (parentNode && parentNode instanceof ShadowRoot) {\n    return parentNode.host;\n  }\n  return parentNode;\n}\n\nconst EXCEEDED_HORIZONTAL_MIN = 0b0001;\nconst EXCEEDED_HORIZONTAL_MAX = 0b0010;\nconst EXCEEDED_VERTICAL_MIN = 0b0100;\nconst EXCEEDED_VERTICAL_MAX = 0b1000;\nconst isCoarsePointer = getInputType() === \"coarse\";\nlet intersectingHandles = [];\nlet isPointerDown = false;\nlet ownerDocumentCounts = new Map();\nlet panelConstraintFlags = new Map();\nconst registeredResizeHandlers = new Set();\nfunction registerResizeHandle(resizeHandleId, element, direction, hitAreaMargins, setResizeHandlerState) {\n  var _ownerDocumentCounts$;\n  const {\n    ownerDocument\n  } = element;\n  const data = {\n    direction,\n    element,\n    hitAreaMargins,\n    setResizeHandlerState\n  };\n  const count = (_ownerDocumentCounts$ = ownerDocumentCounts.get(ownerDocument)) !== null && _ownerDocumentCounts$ !== void 0 ? _ownerDocumentCounts$ : 0;\n  ownerDocumentCounts.set(ownerDocument, count + 1);\n  registeredResizeHandlers.add(data);\n  updateListeners();\n  return function unregisterResizeHandle() {\n    var _ownerDocumentCounts$2;\n    panelConstraintFlags.delete(resizeHandleId);\n    registeredResizeHandlers.delete(data);\n    const count = (_ownerDocumentCounts$2 = ownerDocumentCounts.get(ownerDocument)) !== null && _ownerDocumentCounts$2 !== void 0 ? _ownerDocumentCounts$2 : 1;\n    ownerDocumentCounts.set(ownerDocument, count - 1);\n    updateListeners();\n    if (count === 1) {\n      ownerDocumentCounts.delete(ownerDocument);\n    }\n\n    // If the resize handle that is currently unmounting is intersecting with the pointer,\n    // update the global pointer to account for the change\n    if (intersectingHandles.includes(data)) {\n      const index = intersectingHandles.indexOf(data);\n      if (index >= 0) {\n        intersectingHandles.splice(index, 1);\n      }\n      updateCursor();\n\n      // Also instruct the handle to stop dragging; this prevents the parent group from being left in an inconsistent state\n      // See github.com/bvaughn/react-resizable-panels/issues/402\n      setResizeHandlerState(\"up\", true, null);\n    }\n  };\n}\nfunction handlePointerDown(event) {\n  const {\n    target\n  } = event;\n  const {\n    x,\n    y\n  } = getResizeEventCoordinates(event);\n  isPointerDown = true;\n  recalculateIntersectingHandles({\n    target,\n    x,\n    y\n  });\n  updateListeners();\n  if (intersectingHandles.length > 0) {\n    updateResizeHandlerStates(\"down\", event);\n\n    // Update cursor based on return value(s) from active handles\n    updateCursor();\n    event.preventDefault();\n    if (!isWithinResizeHandle(target)) {\n      event.stopImmediatePropagation();\n    }\n  }\n}\nfunction handlePointerMove(event) {\n  const {\n    x,\n    y\n  } = getResizeEventCoordinates(event);\n\n  // Edge case (see #340)\n  // Detect when the pointer has been released outside an iframe on a different domain\n  if (isPointerDown && event.buttons === 0) {\n    isPointerDown = false;\n    updateResizeHandlerStates(\"up\", event);\n  }\n  if (!isPointerDown) {\n    const {\n      target\n    } = event;\n\n    // Recalculate intersecting handles whenever the pointer moves, except if it has already been pressed\n    // at that point, the handles may not move with the pointer (depending on constraints)\n    // but the same set of active handles should be locked until the pointer is released\n    recalculateIntersectingHandles({\n      target,\n      x,\n      y\n    });\n  }\n  updateResizeHandlerStates(\"move\", event);\n\n  // Update cursor based on return value(s) from active handles\n  updateCursor();\n  if (intersectingHandles.length > 0) {\n    event.preventDefault();\n  }\n}\nfunction handlePointerUp(event) {\n  const {\n    target\n  } = event;\n  const {\n    x,\n    y\n  } = getResizeEventCoordinates(event);\n  panelConstraintFlags.clear();\n  isPointerDown = false;\n  if (intersectingHandles.length > 0) {\n    event.preventDefault();\n    if (!isWithinResizeHandle(target)) {\n      event.stopImmediatePropagation();\n    }\n  }\n  updateResizeHandlerStates(\"up\", event);\n  recalculateIntersectingHandles({\n    target,\n    x,\n    y\n  });\n  updateCursor();\n  updateListeners();\n}\nfunction isWithinResizeHandle(element) {\n  let currentElement = element;\n  while (currentElement) {\n    if (currentElement.hasAttribute(DATA_ATTRIBUTES.resizeHandle)) {\n      return true;\n    }\n    currentElement = currentElement.parentElement;\n  }\n  return false;\n}\nfunction recalculateIntersectingHandles({\n  target,\n  x,\n  y\n}) {\n  intersectingHandles.splice(0);\n  let targetElement = null;\n  if (target instanceof HTMLElement || target instanceof SVGElement) {\n    targetElement = target;\n  }\n  registeredResizeHandlers.forEach(data => {\n    const {\n      element: dragHandleElement,\n      hitAreaMargins\n    } = data;\n    const dragHandleRect = dragHandleElement.getBoundingClientRect();\n    const {\n      bottom,\n      left,\n      right,\n      top\n    } = dragHandleRect;\n    const margin = isCoarsePointer ? hitAreaMargins.coarse : hitAreaMargins.fine;\n    const eventIntersects = x >= left - margin && x <= right + margin && y >= top - margin && y <= bottom + margin;\n    if (eventIntersects) {\n      // TRICKY\n      // We listen for pointers events at the root in order to support hit area margins\n      // (determining when the pointer is close enough to an element to be considered a \"hit\")\n      // Clicking on an element \"above\" a handle (e.g. a modal) should prevent a hit though\n      // so at this point we need to compare stacking order of a potentially intersecting drag handle,\n      // and the element that was actually clicked/touched\n      if (targetElement !== null && document.contains(targetElement) && dragHandleElement !== targetElement && !dragHandleElement.contains(targetElement) && !targetElement.contains(dragHandleElement) &&\n      // Calculating stacking order has a cost, so we should avoid it if possible\n      // That is why we only check potentially intersecting handles,\n      // and why we skip if the event target is within the handle's DOM\n      compare(targetElement, dragHandleElement) > 0) {\n        // If the target is above the drag handle, then we also need to confirm they overlap\n        // If they are beside each other (e.g. a panel and its drag handle) then the handle is still interactive\n        //\n        // It's not enough to compare only the target\n        // The target might be a small element inside of a larger container\n        // (For example, a SPAN or a DIV inside of a larger modal dialog)\n        let currentElement = targetElement;\n        let didIntersect = false;\n        while (currentElement) {\n          if (currentElement.contains(dragHandleElement)) {\n            break;\n          } else if (intersects(currentElement.getBoundingClientRect(), dragHandleRect, true)) {\n            didIntersect = true;\n            break;\n          }\n          currentElement = currentElement.parentElement;\n        }\n        if (didIntersect) {\n          return;\n        }\n      }\n      intersectingHandles.push(data);\n    }\n  });\n}\nfunction reportConstraintsViolation(resizeHandleId, flag) {\n  panelConstraintFlags.set(resizeHandleId, flag);\n}\nfunction updateCursor() {\n  let intersectsHorizontal = false;\n  let intersectsVertical = false;\n  intersectingHandles.forEach(data => {\n    const {\n      direction\n    } = data;\n    if (direction === \"horizontal\") {\n      intersectsHorizontal = true;\n    } else {\n      intersectsVertical = true;\n    }\n  });\n  let constraintFlags = 0;\n  panelConstraintFlags.forEach(flag => {\n    constraintFlags |= flag;\n  });\n  if (intersectsHorizontal && intersectsVertical) {\n    setGlobalCursorStyle(\"intersection\", constraintFlags, isPointerDown);\n  } else if (intersectsHorizontal) {\n    setGlobalCursorStyle(\"horizontal\", constraintFlags, isPointerDown);\n  } else if (intersectsVertical) {\n    setGlobalCursorStyle(\"vertical\", constraintFlags, isPointerDown);\n  } else {\n    resetGlobalCursorStyle();\n  }\n}\nlet listenersAbortController;\nfunction updateListeners() {\n  var _listenersAbortContro;\n  (_listenersAbortContro = listenersAbortController) === null || _listenersAbortContro === void 0 ? void 0 : _listenersAbortContro.abort();\n  listenersAbortController = new AbortController();\n  const options = {\n    capture: true,\n    signal: listenersAbortController.signal\n  };\n  if (!registeredResizeHandlers.size) {\n    return;\n  }\n  if (isPointerDown) {\n    if (intersectingHandles.length > 0) {\n      ownerDocumentCounts.forEach((count, ownerDocument) => {\n        const {\n          body\n        } = ownerDocument;\n        if (count > 0) {\n          body.addEventListener(\"contextmenu\", handlePointerUp, options);\n          body.addEventListener(\"pointerleave\", handlePointerMove, options);\n          body.addEventListener(\"pointermove\", handlePointerMove, options);\n        }\n      });\n    }\n    ownerDocumentCounts.forEach((_, ownerDocument) => {\n      const {\n        body\n      } = ownerDocument;\n      body.addEventListener(\"pointerup\", handlePointerUp, options);\n      body.addEventListener(\"pointercancel\", handlePointerUp, options);\n    });\n  } else {\n    ownerDocumentCounts.forEach((count, ownerDocument) => {\n      const {\n        body\n      } = ownerDocument;\n      if (count > 0) {\n        body.addEventListener(\"pointerdown\", handlePointerDown, options);\n        body.addEventListener(\"pointermove\", handlePointerMove, options);\n      }\n    });\n  }\n}\nfunction updateResizeHandlerStates(action, event) {\n  registeredResizeHandlers.forEach(data => {\n    const {\n      setResizeHandlerState\n    } = data;\n    const isActive = intersectingHandles.includes(data);\n    setResizeHandlerState(action, isActive, event);\n  });\n}\n\nfunction useForceUpdate() {\n  const [_, setCount] = useState(0);\n  return useCallback(() => setCount(prevCount => prevCount + 1), []);\n}\n\nfunction assert(expectedCondition, message) {\n  if (!expectedCondition) {\n    console.error(message);\n    throw Error(message);\n  }\n}\n\nfunction fuzzyCompareNumbers(actual, expected, fractionDigits = PRECISION) {\n  if (actual.toFixed(fractionDigits) === expected.toFixed(fractionDigits)) {\n    return 0;\n  } else {\n    return actual > expected ? 1 : -1;\n  }\n}\nfunction fuzzyNumbersEqual$1(actual, expected, fractionDigits = PRECISION) {\n  return fuzzyCompareNumbers(actual, expected, fractionDigits) === 0;\n}\n\nfunction fuzzyNumbersEqual(actual, expected, fractionDigits) {\n  return fuzzyCompareNumbers(actual, expected, fractionDigits) === 0;\n}\n\nfunction fuzzyLayoutsEqual(actual, expected, fractionDigits) {\n  if (actual.length !== expected.length) {\n    return false;\n  }\n  for (let index = 0; index < actual.length; index++) {\n    const actualSize = actual[index];\n    const expectedSize = expected[index];\n    if (!fuzzyNumbersEqual(actualSize, expectedSize, fractionDigits)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Panel size must be in percentages; pixel values should be pre-converted\nfunction resizePanel({\n  panelConstraints: panelConstraintsArray,\n  panelIndex,\n  size\n}) {\n  const panelConstraints = panelConstraintsArray[panelIndex];\n  assert(panelConstraints != null, `Panel constraints not found for index ${panelIndex}`);\n  let {\n    collapsedSize = 0,\n    collapsible,\n    maxSize = 100,\n    minSize = 0\n  } = panelConstraints;\n  if (fuzzyCompareNumbers(size, minSize) < 0) {\n    if (collapsible) {\n      // Collapsible panels should snap closed or open only once they cross the halfway point between collapsed and min size.\n      const halfwayPoint = (collapsedSize + minSize) / 2;\n      if (fuzzyCompareNumbers(size, halfwayPoint) < 0) {\n        size = collapsedSize;\n      } else {\n        size = minSize;\n      }\n    } else {\n      size = minSize;\n    }\n  }\n  size = Math.min(maxSize, size);\n  size = parseFloat(size.toFixed(PRECISION));\n  return size;\n}\n\n// All units must be in percentages; pixel values should be pre-converted\nfunction adjustLayoutByDelta({\n  delta,\n  initialLayout,\n  panelConstraints: panelConstraintsArray,\n  pivotIndices,\n  prevLayout,\n  trigger\n}) {\n  if (fuzzyNumbersEqual(delta, 0)) {\n    return initialLayout;\n  }\n  const nextLayout = [...initialLayout];\n  const [firstPivotIndex, secondPivotIndex] = pivotIndices;\n  assert(firstPivotIndex != null, \"Invalid first pivot index\");\n  assert(secondPivotIndex != null, \"Invalid second pivot index\");\n  let deltaApplied = 0;\n\n  // const DEBUG = [];\n  // DEBUG.push(`adjustLayoutByDelta()`);\n  // DEBUG.push(`  initialLayout: ${initialLayout.join(\", \")}`);\n  // DEBUG.push(`  prevLayout: ${prevLayout.join(\", \")}`);\n  // DEBUG.push(`  delta: ${delta}`);\n  // DEBUG.push(`  pivotIndices: ${pivotIndices.join(\", \")}`);\n  // DEBUG.push(`  trigger: ${trigger}`);\n  // DEBUG.push(\"\");\n\n  // A resizing panel affects the panels before or after it.\n  //\n  // A negative delta means the panel(s) immediately after the resize handle should grow/expand by decreasing its offset.\n  // Other panels may also need to shrink/contract (and shift) to make room, depending on the min weights.\n  //\n  // A positive delta means the panel(s) immediately before the resize handle should \"expand\".\n  // This is accomplished by shrinking/contracting (and shifting) one or more of the panels after the resize handle.\n\n  {\n    // If this is a resize triggered by a keyboard event, our logic for expanding/collapsing is different.\n    // We no longer check the halfway threshold because this may prevent the panel from expanding at all.\n    if (trigger === \"keyboard\") {\n      {\n        // Check if we should expand a collapsed panel\n        const index = delta < 0 ? secondPivotIndex : firstPivotIndex;\n        const panelConstraints = panelConstraintsArray[index];\n        assert(panelConstraints, `Panel constraints not found for index ${index}`);\n        const {\n          collapsedSize = 0,\n          collapsible,\n          minSize = 0\n        } = panelConstraints;\n\n        // DEBUG.push(`edge case check 1: ${index}`);\n        // DEBUG.push(`  -> collapsible? ${collapsible}`);\n        if (collapsible) {\n          const prevSize = initialLayout[index];\n          assert(prevSize != null, `Previous layout not found for panel index ${index}`);\n          if (fuzzyNumbersEqual(prevSize, collapsedSize)) {\n            const localDelta = minSize - prevSize;\n            // DEBUG.push(`  -> expand delta: ${localDelta}`);\n\n            if (fuzzyCompareNumbers(localDelta, Math.abs(delta)) > 0) {\n              delta = delta < 0 ? 0 - localDelta : localDelta;\n              // DEBUG.push(`  -> delta: ${delta}`);\n            }\n          }\n        }\n      }\n\n      {\n        // Check if we should collapse a panel at its minimum size\n        const index = delta < 0 ? firstPivotIndex : secondPivotIndex;\n        const panelConstraints = panelConstraintsArray[index];\n        assert(panelConstraints, `No panel constraints found for index ${index}`);\n        const {\n          collapsedSize = 0,\n          collapsible,\n          minSize = 0\n        } = panelConstraints;\n\n        // DEBUG.push(`edge case check 2: ${index}`);\n        // DEBUG.push(`  -> collapsible? ${collapsible}`);\n        if (collapsible) {\n          const prevSize = initialLayout[index];\n          assert(prevSize != null, `Previous layout not found for panel index ${index}`);\n          if (fuzzyNumbersEqual(prevSize, minSize)) {\n            const localDelta = prevSize - collapsedSize;\n            // DEBUG.push(`  -> expand delta: ${localDelta}`);\n\n            if (fuzzyCompareNumbers(localDelta, Math.abs(delta)) > 0) {\n              delta = delta < 0 ? 0 - localDelta : localDelta;\n              // DEBUG.push(`  -> delta: ${delta}`);\n            }\n          }\n        }\n      }\n    }\n    // DEBUG.push(\"\");\n  }\n\n  {\n    // Pre-calculate max available delta in the opposite direction of our pivot.\n    // This will be the maximum amount we're allowed to expand/contract the panels in the primary direction.\n    // If this amount is less than the requested delta, adjust the requested delta.\n    // If this amount is greater than the requested delta, that's useful information too–\n    // as an expanding panel might change from collapsed to min size.\n\n    const increment = delta < 0 ? 1 : -1;\n    let index = delta < 0 ? secondPivotIndex : firstPivotIndex;\n    let maxAvailableDelta = 0;\n\n    // DEBUG.push(\"pre calc...\");\n    while (true) {\n      const prevSize = initialLayout[index];\n      assert(prevSize != null, `Previous layout not found for panel index ${index}`);\n      const maxSafeSize = resizePanel({\n        panelConstraints: panelConstraintsArray,\n        panelIndex: index,\n        size: 100\n      });\n      const delta = maxSafeSize - prevSize;\n      // DEBUG.push(`  ${index}: ${prevSize} -> ${maxSafeSize}`);\n\n      maxAvailableDelta += delta;\n      index += increment;\n      if (index < 0 || index >= panelConstraintsArray.length) {\n        break;\n      }\n    }\n\n    // DEBUG.push(`  -> max available delta: ${maxAvailableDelta}`);\n    const minAbsDelta = Math.min(Math.abs(delta), Math.abs(maxAvailableDelta));\n    delta = delta < 0 ? 0 - minAbsDelta : minAbsDelta;\n    // DEBUG.push(`  -> adjusted delta: ${delta}`);\n    // DEBUG.push(\"\");\n  }\n\n  {\n    // Delta added to a panel needs to be subtracted from other panels (within the constraints that those panels allow).\n\n    const pivotIndex = delta < 0 ? firstPivotIndex : secondPivotIndex;\n    let index = pivotIndex;\n    while (index >= 0 && index < panelConstraintsArray.length) {\n      const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied);\n      const prevSize = initialLayout[index];\n      assert(prevSize != null, `Previous layout not found for panel index ${index}`);\n      const unsafeSize = prevSize - deltaRemaining;\n      const safeSize = resizePanel({\n        panelConstraints: panelConstraintsArray,\n        panelIndex: index,\n        size: unsafeSize\n      });\n      if (!fuzzyNumbersEqual(prevSize, safeSize)) {\n        deltaApplied += prevSize - safeSize;\n        nextLayout[index] = safeSize;\n        if (deltaApplied.toPrecision(3).localeCompare(Math.abs(delta).toPrecision(3), undefined, {\n          numeric: true\n        }) >= 0) {\n          break;\n        }\n      }\n      if (delta < 0) {\n        index--;\n      } else {\n        index++;\n      }\n    }\n  }\n  // DEBUG.push(`after 1: ${nextLayout.join(\", \")}`);\n  // DEBUG.push(`  deltaApplied: ${deltaApplied}`);\n  // DEBUG.push(\"\");\n\n  // If we were unable to resize any of the panels panels, return the previous state.\n  // This will essentially bailout and ignore e.g. drags past a panel's boundaries\n  if (fuzzyLayoutsEqual(prevLayout, nextLayout)) {\n    // DEBUG.push(`bailout to previous layout: ${prevLayout.join(\", \")}`);\n    // console.log(DEBUG.join(\"\\n\"));\n\n    return prevLayout;\n  }\n  {\n    // Now distribute the applied delta to the panels in the other direction\n    const pivotIndex = delta < 0 ? secondPivotIndex : firstPivotIndex;\n    const prevSize = initialLayout[pivotIndex];\n    assert(prevSize != null, `Previous layout not found for panel index ${pivotIndex}`);\n    const unsafeSize = prevSize + deltaApplied;\n    const safeSize = resizePanel({\n      panelConstraints: panelConstraintsArray,\n      panelIndex: pivotIndex,\n      size: unsafeSize\n    });\n\n    // Adjust the pivot panel before, but only by the amount that surrounding panels were able to shrink/contract.\n    nextLayout[pivotIndex] = safeSize;\n\n    // Edge case where expanding or contracting one panel caused another one to change collapsed state\n    if (!fuzzyNumbersEqual(safeSize, unsafeSize)) {\n      let deltaRemaining = unsafeSize - safeSize;\n      const pivotIndex = delta < 0 ? secondPivotIndex : firstPivotIndex;\n      let index = pivotIndex;\n      while (index >= 0 && index < panelConstraintsArray.length) {\n        const prevSize = nextLayout[index];\n        assert(prevSize != null, `Previous layout not found for panel index ${index}`);\n        const unsafeSize = prevSize + deltaRemaining;\n        const safeSize = resizePanel({\n          panelConstraints: panelConstraintsArray,\n          panelIndex: index,\n          size: unsafeSize\n        });\n        if (!fuzzyNumbersEqual(prevSize, safeSize)) {\n          deltaRemaining -= safeSize - prevSize;\n          nextLayout[index] = safeSize;\n        }\n        if (fuzzyNumbersEqual(deltaRemaining, 0)) {\n          break;\n        }\n        if (delta > 0) {\n          index--;\n        } else {\n          index++;\n        }\n      }\n    }\n  }\n  // DEBUG.push(`after 2: ${nextLayout.join(\", \")}`);\n  // DEBUG.push(`  deltaApplied: ${deltaApplied}`);\n  // DEBUG.push(\"\");\n\n  const totalSize = nextLayout.reduce((total, size) => size + total, 0);\n  // DEBUG.push(`total size: ${totalSize}`);\n\n  // If our new layout doesn't add up to 100%, that means the requested delta can't be applied\n  // In that case, fall back to our most recent valid layout\n  if (!fuzzyNumbersEqual(totalSize, 100)) {\n    // DEBUG.push(`bailout to previous layout: ${prevLayout.join(\", \")}`);\n    // console.log(DEBUG.join(\"\\n\"));\n\n    return prevLayout;\n  }\n\n  // console.log(DEBUG.join(\"\\n\"));\n  return nextLayout;\n}\n\nfunction calculateAriaValues({\n  layout,\n  panelsArray,\n  pivotIndices\n}) {\n  let currentMinSize = 0;\n  let currentMaxSize = 100;\n  let totalMinSize = 0;\n  let totalMaxSize = 0;\n  const firstIndex = pivotIndices[0];\n  assert(firstIndex != null, \"No pivot index found\");\n\n  // A panel's effective min/max sizes also need to account for other panel's sizes.\n  panelsArray.forEach((panelData, index) => {\n    const {\n      constraints\n    } = panelData;\n    const {\n      maxSize = 100,\n      minSize = 0\n    } = constraints;\n    if (index === firstIndex) {\n      currentMinSize = minSize;\n      currentMaxSize = maxSize;\n    } else {\n      totalMinSize += minSize;\n      totalMaxSize += maxSize;\n    }\n  });\n  const valueMax = Math.min(currentMaxSize, 100 - totalMinSize);\n  const valueMin = Math.max(currentMinSize, 100 - totalMaxSize);\n  const valueNow = layout[firstIndex];\n  return {\n    valueMax,\n    valueMin,\n    valueNow\n  };\n}\n\nfunction getResizeHandleElementsForGroup(groupId, scope = document) {\n  return Array.from(scope.querySelectorAll(`[${DATA_ATTRIBUTES.resizeHandleId}][data-panel-group-id=\"${groupId}\"]`));\n}\n\nfunction getResizeHandleElementIndex(groupId, id, scope = document) {\n  const handles = getResizeHandleElementsForGroup(groupId, scope);\n  const index = handles.findIndex(handle => handle.getAttribute(DATA_ATTRIBUTES.resizeHandleId) === id);\n  return index !== null && index !== void 0 ? index : null;\n}\n\nfunction determinePivotIndices(groupId, dragHandleId, panelGroupElement) {\n  const index = getResizeHandleElementIndex(groupId, dragHandleId, panelGroupElement);\n  return index != null ? [index, index + 1] : [-1, -1];\n}\n\nfunction isHTMLElement(target) {\n  if (target instanceof HTMLElement) {\n    return true;\n  }\n\n  // Fallback to duck typing to handle edge case of portals within a popup window\n  return typeof target === \"object\" && target !== null && \"tagName\" in target && \"getAttribute\" in target;\n}\n\nfunction getPanelGroupElement(id, rootElement = document) {\n  // If the root element is the PanelGroup\n  if (isHTMLElement(rootElement) && rootElement.dataset.panelGroupId == id) {\n    return rootElement;\n  }\n\n  // Else query children\n  const element = rootElement.querySelector(`[data-panel-group][data-panel-group-id=\"${id}\"]`);\n  if (element) {\n    return element;\n  }\n  return null;\n}\n\nfunction getResizeHandleElement(id, scope = document) {\n  const element = scope.querySelector(`[${DATA_ATTRIBUTES.resizeHandleId}=\"${id}\"]`);\n  if (element) {\n    return element;\n  }\n  return null;\n}\n\nfunction getResizeHandlePanelIds(groupId, handleId, panelsArray, scope = document) {\n  var _panelsArray$index$id, _panelsArray$index, _panelsArray$id, _panelsArray;\n  const handle = getResizeHandleElement(handleId, scope);\n  const handles = getResizeHandleElementsForGroup(groupId, scope);\n  const index = handle ? handles.indexOf(handle) : -1;\n  const idBefore = (_panelsArray$index$id = (_panelsArray$index = panelsArray[index]) === null || _panelsArray$index === void 0 ? void 0 : _panelsArray$index.id) !== null && _panelsArray$index$id !== void 0 ? _panelsArray$index$id : null;\n  const idAfter = (_panelsArray$id = (_panelsArray = panelsArray[index + 1]) === null || _panelsArray === void 0 ? void 0 : _panelsArray.id) !== null && _panelsArray$id !== void 0 ? _panelsArray$id : null;\n  return [idBefore, idAfter];\n}\n\n// https://www.w3.org/WAI/ARIA/apg/patterns/windowsplitter/\n\nfunction useWindowSplitterPanelGroupBehavior({\n  committedValuesRef,\n  eagerValuesRef,\n  groupId,\n  layout,\n  panelDataArray,\n  panelGroupElement,\n  setLayout\n}) {\n  const devWarningsRef = useRef({\n    didWarnAboutMissingResizeHandle: false\n  });\n  useIsomorphicLayoutEffect(() => {\n    if (!panelGroupElement) {\n      return;\n    }\n    const resizeHandleElements = getResizeHandleElementsForGroup(groupId, panelGroupElement);\n    for (let index = 0; index < panelDataArray.length - 1; index++) {\n      const {\n        valueMax,\n        valueMin,\n        valueNow\n      } = calculateAriaValues({\n        layout,\n        panelsArray: panelDataArray,\n        pivotIndices: [index, index + 1]\n      });\n      const resizeHandleElement = resizeHandleElements[index];\n      if (resizeHandleElement == null) {\n        {\n          const {\n            didWarnAboutMissingResizeHandle\n          } = devWarningsRef.current;\n          if (!didWarnAboutMissingResizeHandle) {\n            devWarningsRef.current.didWarnAboutMissingResizeHandle = true;\n            console.warn(`WARNING: Missing resize handle for PanelGroup \"${groupId}\"`);\n          }\n        }\n      } else {\n        const panelData = panelDataArray[index];\n        assert(panelData, `No panel data found for index \"${index}\"`);\n        resizeHandleElement.setAttribute(\"aria-controls\", panelData.id);\n        resizeHandleElement.setAttribute(\"aria-valuemax\", \"\" + Math.round(valueMax));\n        resizeHandleElement.setAttribute(\"aria-valuemin\", \"\" + Math.round(valueMin));\n        resizeHandleElement.setAttribute(\"aria-valuenow\", valueNow != null ? \"\" + Math.round(valueNow) : \"\");\n      }\n    }\n    return () => {\n      resizeHandleElements.forEach((resizeHandleElement, index) => {\n        resizeHandleElement.removeAttribute(\"aria-controls\");\n        resizeHandleElement.removeAttribute(\"aria-valuemax\");\n        resizeHandleElement.removeAttribute(\"aria-valuemin\");\n        resizeHandleElement.removeAttribute(\"aria-valuenow\");\n      });\n    };\n  }, [groupId, layout, panelDataArray, panelGroupElement]);\n  useEffect(() => {\n    if (!panelGroupElement) {\n      return;\n    }\n    const eagerValues = eagerValuesRef.current;\n    assert(eagerValues, `Eager values not found`);\n    const {\n      panelDataArray\n    } = eagerValues;\n    const groupElement = getPanelGroupElement(groupId, panelGroupElement);\n    assert(groupElement != null, `No group found for id \"${groupId}\"`);\n    const handles = getResizeHandleElementsForGroup(groupId, panelGroupElement);\n    assert(handles, `No resize handles found for group id \"${groupId}\"`);\n    const cleanupFunctions = handles.map(handle => {\n      const handleId = handle.getAttribute(DATA_ATTRIBUTES.resizeHandleId);\n      assert(handleId, `Resize handle element has no handle id attribute`);\n      const [idBefore, idAfter] = getResizeHandlePanelIds(groupId, handleId, panelDataArray, panelGroupElement);\n      if (idBefore == null || idAfter == null) {\n        return () => {};\n      }\n      const onKeyDown = event => {\n        if (event.defaultPrevented) {\n          return;\n        }\n        switch (event.key) {\n          case \"Enter\":\n            {\n              event.preventDefault();\n              const index = panelDataArray.findIndex(panelData => panelData.id === idBefore);\n              if (index >= 0) {\n                const panelData = panelDataArray[index];\n                assert(panelData, `No panel data found for index ${index}`);\n                const size = layout[index];\n                const {\n                  collapsedSize = 0,\n                  collapsible,\n                  minSize = 0\n                } = panelData.constraints;\n                if (size != null && collapsible) {\n                  const nextLayout = adjustLayoutByDelta({\n                    delta: fuzzyNumbersEqual(size, collapsedSize) ? minSize - collapsedSize : collapsedSize - size,\n                    initialLayout: layout,\n                    panelConstraints: panelDataArray.map(panelData => panelData.constraints),\n                    pivotIndices: determinePivotIndices(groupId, handleId, panelGroupElement),\n                    prevLayout: layout,\n                    trigger: \"keyboard\"\n                  });\n                  if (layout !== nextLayout) {\n                    setLayout(nextLayout);\n                  }\n                }\n              }\n              break;\n            }\n        }\n      };\n      handle.addEventListener(\"keydown\", onKeyDown);\n      return () => {\n        handle.removeEventListener(\"keydown\", onKeyDown);\n      };\n    });\n    return () => {\n      cleanupFunctions.forEach(cleanupFunction => cleanupFunction());\n    };\n  }, [panelGroupElement, committedValuesRef, eagerValuesRef, groupId, layout, panelDataArray, setLayout]);\n}\n\nfunction areEqual(arrayA, arrayB) {\n  if (arrayA.length !== arrayB.length) {\n    return false;\n  }\n  for (let index = 0; index < arrayA.length; index++) {\n    if (arrayA[index] !== arrayB[index]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getResizeEventCursorPosition(direction, event) {\n  const isHorizontal = direction === \"horizontal\";\n  const {\n    x,\n    y\n  } = getResizeEventCoordinates(event);\n  return isHorizontal ? x : y;\n}\n\nfunction calculateDragOffsetPercentage(event, dragHandleId, direction, initialDragState, panelGroupElement) {\n  const isHorizontal = direction === \"horizontal\";\n  const handleElement = getResizeHandleElement(dragHandleId, panelGroupElement);\n  assert(handleElement, `No resize handle element found for id \"${dragHandleId}\"`);\n  const groupId = handleElement.getAttribute(DATA_ATTRIBUTES.groupId);\n  assert(groupId, `Resize handle element has no group id attribute`);\n  let {\n    initialCursorPosition\n  } = initialDragState;\n  const cursorPosition = getResizeEventCursorPosition(direction, event);\n  const groupElement = getPanelGroupElement(groupId, panelGroupElement);\n  assert(groupElement, `No group element found for id \"${groupId}\"`);\n  const groupRect = groupElement.getBoundingClientRect();\n  const groupSizeInPixels = isHorizontal ? groupRect.width : groupRect.height;\n  const offsetPixels = cursorPosition - initialCursorPosition;\n  const offsetPercentage = offsetPixels / groupSizeInPixels * 100;\n  return offsetPercentage;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementX\nfunction calculateDeltaPercentage(event, dragHandleId, direction, initialDragState, keyboardResizeBy, panelGroupElement) {\n  if (isKeyDown(event)) {\n    const isHorizontal = direction === \"horizontal\";\n    let delta = 0;\n    if (event.shiftKey) {\n      delta = 100;\n    } else if (keyboardResizeBy != null) {\n      delta = keyboardResizeBy;\n    } else {\n      delta = 10;\n    }\n    let movement = 0;\n    switch (event.key) {\n      case \"ArrowDown\":\n        movement = isHorizontal ? 0 : delta;\n        break;\n      case \"ArrowLeft\":\n        movement = isHorizontal ? -delta : 0;\n        break;\n      case \"ArrowRight\":\n        movement = isHorizontal ? delta : 0;\n        break;\n      case \"ArrowUp\":\n        movement = isHorizontal ? 0 : -delta;\n        break;\n      case \"End\":\n        movement = 100;\n        break;\n      case \"Home\":\n        movement = -100;\n        break;\n    }\n    return movement;\n  } else {\n    if (initialDragState == null) {\n      return 0;\n    }\n    return calculateDragOffsetPercentage(event, dragHandleId, direction, initialDragState, panelGroupElement);\n  }\n}\n\nfunction calculateUnsafeDefaultLayout({\n  panelDataArray\n}) {\n  const layout = Array(panelDataArray.length);\n  const panelConstraintsArray = panelDataArray.map(panelData => panelData.constraints);\n  let numPanelsWithSizes = 0;\n  let remainingSize = 100;\n\n  // Distribute default sizes first\n  for (let index = 0; index < panelDataArray.length; index++) {\n    const panelConstraints = panelConstraintsArray[index];\n    assert(panelConstraints, `Panel constraints not found for index ${index}`);\n    const {\n      defaultSize\n    } = panelConstraints;\n    if (defaultSize != null) {\n      numPanelsWithSizes++;\n      layout[index] = defaultSize;\n      remainingSize -= defaultSize;\n    }\n  }\n\n  // Remaining size should be distributed evenly between panels without default sizes\n  for (let index = 0; index < panelDataArray.length; index++) {\n    const panelConstraints = panelConstraintsArray[index];\n    assert(panelConstraints, `Panel constraints not found for index ${index}`);\n    const {\n      defaultSize\n    } = panelConstraints;\n    if (defaultSize != null) {\n      continue;\n    }\n    const numRemainingPanels = panelDataArray.length - numPanelsWithSizes;\n    const size = remainingSize / numRemainingPanels;\n    numPanelsWithSizes++;\n    layout[index] = size;\n    remainingSize -= size;\n  }\n  return layout;\n}\n\n// Layout should be pre-converted into percentages\nfunction callPanelCallbacks(panelsArray, layout, panelIdToLastNotifiedSizeMap) {\n  layout.forEach((size, index) => {\n    const panelData = panelsArray[index];\n    assert(panelData, `Panel data not found for index ${index}`);\n    const {\n      callbacks,\n      constraints,\n      id: panelId\n    } = panelData;\n    const {\n      collapsedSize = 0,\n      collapsible\n    } = constraints;\n    const lastNotifiedSize = panelIdToLastNotifiedSizeMap[panelId];\n    if (lastNotifiedSize == null || size !== lastNotifiedSize) {\n      panelIdToLastNotifiedSizeMap[panelId] = size;\n      const {\n        onCollapse,\n        onExpand,\n        onResize\n      } = callbacks;\n      if (onResize) {\n        onResize(size, lastNotifiedSize);\n      }\n      if (collapsible && (onCollapse || onExpand)) {\n        if (onExpand && (lastNotifiedSize == null || fuzzyNumbersEqual$1(lastNotifiedSize, collapsedSize)) && !fuzzyNumbersEqual$1(size, collapsedSize)) {\n          onExpand();\n        }\n        if (onCollapse && (lastNotifiedSize == null || !fuzzyNumbersEqual$1(lastNotifiedSize, collapsedSize)) && fuzzyNumbersEqual$1(size, collapsedSize)) {\n          onCollapse();\n        }\n      }\n    }\n  });\n}\n\nfunction compareLayouts(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  } else {\n    for (let index = 0; index < a.length; index++) {\n      if (a[index] != b[index]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n// This method returns a number between 1 and 100 representing\n\n// the % of the group's overall space this panel should occupy.\nfunction computePanelFlexBoxStyle({\n  defaultSize,\n  dragState,\n  layout,\n  panelData,\n  panelIndex,\n  precision = 3\n}) {\n  const size = layout[panelIndex];\n  let flexGrow;\n  if (size == null) {\n    // Initial render (before panels have registered themselves)\n    // In order to support server rendering, fall back to default size if provided\n    flexGrow = defaultSize != undefined ? defaultSize.toPrecision(precision) : \"1\";\n  } else if (panelData.length === 1) {\n    // Special case: Single panel group should always fill full width/height\n    flexGrow = \"1\";\n  } else {\n    flexGrow = size.toPrecision(precision);\n  }\n  return {\n    flexBasis: 0,\n    flexGrow,\n    flexShrink: 1,\n    // Without this, Panel sizes may be unintentionally overridden by their content\n    overflow: \"hidden\",\n    // Disable pointer events inside of a panel during resize\n    // This avoid edge cases like nested iframes\n    pointerEvents: dragState !== null ? \"none\" : undefined\n  };\n}\n\nfunction debounce(callback, durationMs = 10) {\n  let timeoutId = null;\n  let callable = (...args) => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => {\n      callback(...args);\n    }, durationMs);\n  };\n  return callable;\n}\n\n// PanelGroup might be rendering in a server-side environment where localStorage is not available\n// or on a browser with cookies/storage disabled.\n// In either case, this function avoids accessing localStorage until needed,\n// and avoids throwing user-visible errors.\nfunction initializeDefaultStorage(storageObject) {\n  try {\n    if (typeof localStorage !== \"undefined\") {\n      // Bypass this check for future calls\n      storageObject.getItem = name => {\n        return localStorage.getItem(name);\n      };\n      storageObject.setItem = (name, value) => {\n        localStorage.setItem(name, value);\n      };\n    } else {\n      throw new Error(\"localStorage not supported in this environment\");\n    }\n  } catch (error) {\n    console.error(error);\n    storageObject.getItem = () => null;\n    storageObject.setItem = () => {};\n  }\n}\n\nfunction getPanelGroupKey(autoSaveId) {\n  return `react-resizable-panels:${autoSaveId}`;\n}\n\n// Note that Panel ids might be user-provided (stable) or useId generated (non-deterministic)\n// so they should not be used as part of the serialization key.\n// Using the min/max size attributes should work well enough as a backup.\n// Pre-sorting by minSize allows remembering layouts even if panels are re-ordered/dragged.\nfunction getPanelKey(panels) {\n  return panels.map(panel => {\n    const {\n      constraints,\n      id,\n      idIsFromProps,\n      order\n    } = panel;\n    if (idIsFromProps) {\n      return id;\n    } else {\n      return order ? `${order}:${JSON.stringify(constraints)}` : JSON.stringify(constraints);\n    }\n  }).sort((a, b) => a.localeCompare(b)).join(\",\");\n}\nfunction loadSerializedPanelGroupState(autoSaveId, storage) {\n  try {\n    const panelGroupKey = getPanelGroupKey(autoSaveId);\n    const serialized = storage.getItem(panelGroupKey);\n    if (serialized) {\n      const parsed = JSON.parse(serialized);\n      if (typeof parsed === \"object\" && parsed != null) {\n        return parsed;\n      }\n    }\n  } catch (error) {}\n  return null;\n}\nfunction loadPanelGroupState(autoSaveId, panels, storage) {\n  var _loadSerializedPanelG, _state$panelKey;\n  const state = (_loadSerializedPanelG = loadSerializedPanelGroupState(autoSaveId, storage)) !== null && _loadSerializedPanelG !== void 0 ? _loadSerializedPanelG : {};\n  const panelKey = getPanelKey(panels);\n  return (_state$panelKey = state[panelKey]) !== null && _state$panelKey !== void 0 ? _state$panelKey : null;\n}\nfunction savePanelGroupState(autoSaveId, panels, panelSizesBeforeCollapse, sizes, storage) {\n  var _loadSerializedPanelG2;\n  const panelGroupKey = getPanelGroupKey(autoSaveId);\n  const panelKey = getPanelKey(panels);\n  const state = (_loadSerializedPanelG2 = loadSerializedPanelGroupState(autoSaveId, storage)) !== null && _loadSerializedPanelG2 !== void 0 ? _loadSerializedPanelG2 : {};\n  state[panelKey] = {\n    expandToSizes: Object.fromEntries(panelSizesBeforeCollapse.entries()),\n    layout: sizes\n  };\n  try {\n    storage.setItem(panelGroupKey, JSON.stringify(state));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction validatePanelConstraints({\n  panelConstraints: panelConstraintsArray,\n  panelId,\n  panelIndex\n}) {\n  {\n    const warnings = [];\n    const panelConstraints = panelConstraintsArray[panelIndex];\n    assert(panelConstraints, `No panel constraints found for index ${panelIndex}`);\n    const {\n      collapsedSize = 0,\n      collapsible = false,\n      defaultSize,\n      maxSize = 100,\n      minSize = 0\n    } = panelConstraints;\n    if (minSize > maxSize) {\n      warnings.push(`min size (${minSize}%) should not be greater than max size (${maxSize}%)`);\n    }\n    if (defaultSize != null) {\n      if (defaultSize < 0) {\n        warnings.push(\"default size should not be less than 0\");\n      } else if (defaultSize < minSize && (!collapsible || defaultSize !== collapsedSize)) {\n        warnings.push(\"default size should not be less than min size\");\n      }\n      if (defaultSize > 100) {\n        warnings.push(\"default size should not be greater than 100\");\n      } else if (defaultSize > maxSize) {\n        warnings.push(\"default size should not be greater than max size\");\n      }\n    }\n    if (collapsedSize > minSize) {\n      warnings.push(\"collapsed size should not be greater than min size\");\n    }\n    if (warnings.length > 0) {\n      const name = panelId != null ? `Panel \"${panelId}\"` : \"Panel\";\n      console.warn(`${name} has an invalid configuration:\\n\\n${warnings.join(\"\\n\")}`);\n      return false;\n    }\n  }\n  return true;\n}\n\n// All units must be in percentages; pixel values should be pre-converted\nfunction validatePanelGroupLayout({\n  layout: prevLayout,\n  panelConstraints\n}) {\n  const nextLayout = [...prevLayout];\n  const nextLayoutTotalSize = nextLayout.reduce((accumulated, current) => accumulated + current, 0);\n\n  // Validate layout expectations\n  if (nextLayout.length !== panelConstraints.length) {\n    throw Error(`Invalid ${panelConstraints.length} panel layout: ${nextLayout.map(size => `${size}%`).join(\", \")}`);\n  } else if (!fuzzyNumbersEqual(nextLayoutTotalSize, 100) && nextLayout.length > 0) {\n    // This is not ideal so we should warn about it, but it may be recoverable in some cases\n    // (especially if the amount is small)\n    {\n      console.warn(`WARNING: Invalid layout total size: ${nextLayout.map(size => `${size}%`).join(\", \")}. Layout normalization will be applied.`);\n    }\n    for (let index = 0; index < panelConstraints.length; index++) {\n      const unsafeSize = nextLayout[index];\n      assert(unsafeSize != null, `No layout data found for index ${index}`);\n      const safeSize = 100 / nextLayoutTotalSize * unsafeSize;\n      nextLayout[index] = safeSize;\n    }\n  }\n  let remainingSize = 0;\n\n  // First pass: Validate the proposed layout given each panel's constraints\n  for (let index = 0; index < panelConstraints.length; index++) {\n    const unsafeSize = nextLayout[index];\n    assert(unsafeSize != null, `No layout data found for index ${index}`);\n    const safeSize = resizePanel({\n      panelConstraints,\n      panelIndex: index,\n      size: unsafeSize\n    });\n    if (unsafeSize != safeSize) {\n      remainingSize += unsafeSize - safeSize;\n      nextLayout[index] = safeSize;\n    }\n  }\n\n  // If there is additional, left over space, assign it to any panel(s) that permits it\n  // (It's not worth taking multiple additional passes to evenly distribute)\n  if (!fuzzyNumbersEqual(remainingSize, 0)) {\n    for (let index = 0; index < panelConstraints.length; index++) {\n      const prevSize = nextLayout[index];\n      assert(prevSize != null, `No layout data found for index ${index}`);\n      const unsafeSize = prevSize + remainingSize;\n      const safeSize = resizePanel({\n        panelConstraints,\n        panelIndex: index,\n        size: unsafeSize\n      });\n      if (prevSize !== safeSize) {\n        remainingSize -= safeSize - prevSize;\n        nextLayout[index] = safeSize;\n\n        // Once we've used up the remainder, bail\n        if (fuzzyNumbersEqual(remainingSize, 0)) {\n          break;\n        }\n      }\n    }\n  }\n  return nextLayout;\n}\n\nconst LOCAL_STORAGE_DEBOUNCE_INTERVAL = 100;\nconst defaultStorage = {\n  getItem: name => {\n    initializeDefaultStorage(defaultStorage);\n    return defaultStorage.getItem(name);\n  },\n  setItem: (name, value) => {\n    initializeDefaultStorage(defaultStorage);\n    defaultStorage.setItem(name, value);\n  }\n};\nconst debounceMap = {};\nfunction PanelGroupWithForwardedRef({\n  autoSaveId = null,\n  children,\n  className: classNameFromProps = \"\",\n  direction,\n  forwardedRef,\n  id: idFromProps = null,\n  onLayout = null,\n  keyboardResizeBy = null,\n  storage = defaultStorage,\n  style: styleFromProps,\n  tagName: Type = \"div\",\n  ...rest\n}) {\n  const groupId = useUniqueId(idFromProps);\n  const panelGroupElementRef = useRef(null);\n  const [dragState, setDragState] = useState(null);\n  const [layout, setLayout] = useState([]);\n  const forceUpdate = useForceUpdate();\n  const panelIdToLastNotifiedSizeMapRef = useRef({});\n  const panelSizeBeforeCollapseRef = useRef(new Map());\n  const prevDeltaRef = useRef(0);\n  const committedValuesRef = useRef({\n    autoSaveId,\n    direction,\n    dragState,\n    id: groupId,\n    keyboardResizeBy,\n    onLayout,\n    storage\n  });\n  const eagerValuesRef = useRef({\n    layout,\n    panelDataArray: [],\n    panelDataArrayChanged: false\n  });\n  const devWarningsRef = useRef({\n    didLogIdAndOrderWarning: false,\n    didLogPanelConstraintsWarning: false,\n    prevPanelIds: []\n  });\n  useImperativeHandle(forwardedRef, () => ({\n    getId: () => committedValuesRef.current.id,\n    getLayout: () => {\n      const {\n        layout\n      } = eagerValuesRef.current;\n      return layout;\n    },\n    setLayout: unsafeLayout => {\n      const {\n        onLayout\n      } = committedValuesRef.current;\n      const {\n        layout: prevLayout,\n        panelDataArray\n      } = eagerValuesRef.current;\n      const safeLayout = validatePanelGroupLayout({\n        layout: unsafeLayout,\n        panelConstraints: panelDataArray.map(panelData => panelData.constraints)\n      });\n      if (!areEqual(prevLayout, safeLayout)) {\n        setLayout(safeLayout);\n        eagerValuesRef.current.layout = safeLayout;\n        if (onLayout) {\n          onLayout(safeLayout);\n        }\n        callPanelCallbacks(panelDataArray, safeLayout, panelIdToLastNotifiedSizeMapRef.current);\n      }\n    }\n  }), []);\n  useIsomorphicLayoutEffect(() => {\n    committedValuesRef.current.autoSaveId = autoSaveId;\n    committedValuesRef.current.direction = direction;\n    committedValuesRef.current.dragState = dragState;\n    committedValuesRef.current.id = groupId;\n    committedValuesRef.current.onLayout = onLayout;\n    committedValuesRef.current.storage = storage;\n  });\n  useWindowSplitterPanelGroupBehavior({\n    committedValuesRef,\n    eagerValuesRef,\n    groupId,\n    layout,\n    panelDataArray: eagerValuesRef.current.panelDataArray,\n    setLayout,\n    panelGroupElement: panelGroupElementRef.current\n  });\n  useEffect(() => {\n    const {\n      panelDataArray\n    } = eagerValuesRef.current;\n\n    // If this panel has been configured to persist sizing information, save sizes to local storage.\n    if (autoSaveId) {\n      if (layout.length === 0 || layout.length !== panelDataArray.length) {\n        return;\n      }\n      let debouncedSave = debounceMap[autoSaveId];\n\n      // Limit the frequency of localStorage updates.\n      if (debouncedSave == null) {\n        debouncedSave = debounce(savePanelGroupState, LOCAL_STORAGE_DEBOUNCE_INTERVAL);\n        debounceMap[autoSaveId] = debouncedSave;\n      }\n\n      // Clone mutable data before passing to the debounced function,\n      // else we run the risk of saving an incorrect combination of mutable and immutable values to state.\n      const clonedPanelDataArray = [...panelDataArray];\n      const clonedPanelSizesBeforeCollapse = new Map(panelSizeBeforeCollapseRef.current);\n      debouncedSave(autoSaveId, clonedPanelDataArray, clonedPanelSizesBeforeCollapse, layout, storage);\n    }\n  }, [autoSaveId, layout, storage]);\n\n  // DEV warnings\n  useEffect(() => {\n    {\n      const {\n        panelDataArray\n      } = eagerValuesRef.current;\n      const {\n        didLogIdAndOrderWarning,\n        didLogPanelConstraintsWarning,\n        prevPanelIds\n      } = devWarningsRef.current;\n      if (!didLogIdAndOrderWarning) {\n        const panelIds = panelDataArray.map(({\n          id\n        }) => id);\n        devWarningsRef.current.prevPanelIds = panelIds;\n        const panelsHaveChanged = prevPanelIds.length > 0 && !areEqual(prevPanelIds, panelIds);\n        if (panelsHaveChanged) {\n          if (panelDataArray.find(({\n            idIsFromProps,\n            order\n          }) => !idIsFromProps || order == null)) {\n            devWarningsRef.current.didLogIdAndOrderWarning = true;\n            console.warn(`WARNING: Panel id and order props recommended when panels are dynamically rendered`);\n          }\n        }\n      }\n      if (!didLogPanelConstraintsWarning) {\n        const panelConstraints = panelDataArray.map(panelData => panelData.constraints);\n        for (let panelIndex = 0; panelIndex < panelConstraints.length; panelIndex++) {\n          const panelData = panelDataArray[panelIndex];\n          assert(panelData, `Panel data not found for index ${panelIndex}`);\n          const isValid = validatePanelConstraints({\n            panelConstraints,\n            panelId: panelData.id,\n            panelIndex\n          });\n          if (!isValid) {\n            devWarningsRef.current.didLogPanelConstraintsWarning = true;\n            break;\n          }\n        }\n      }\n    }\n  });\n\n  // External APIs are safe to memoize via committed values ref\n  const collapsePanel = useCallback(panelData => {\n    const {\n      onLayout\n    } = committedValuesRef.current;\n    const {\n      layout: prevLayout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    if (panelData.constraints.collapsible) {\n      const panelConstraintsArray = panelDataArray.map(panelData => panelData.constraints);\n      const {\n        collapsedSize = 0,\n        panelSize,\n        pivotIndices\n      } = panelDataHelper(panelDataArray, panelData, prevLayout);\n      assert(panelSize != null, `Panel size not found for panel \"${panelData.id}\"`);\n      if (!fuzzyNumbersEqual$1(panelSize, collapsedSize)) {\n        // Store size before collapse;\n        // This is the size that gets restored if the expand() API is used.\n        panelSizeBeforeCollapseRef.current.set(panelData.id, panelSize);\n        const isLastPanel = findPanelDataIndex(panelDataArray, panelData) === panelDataArray.length - 1;\n        const delta = isLastPanel ? panelSize - collapsedSize : collapsedSize - panelSize;\n        const nextLayout = adjustLayoutByDelta({\n          delta,\n          initialLayout: prevLayout,\n          panelConstraints: panelConstraintsArray,\n          pivotIndices,\n          prevLayout,\n          trigger: \"imperative-api\"\n        });\n        if (!compareLayouts(prevLayout, nextLayout)) {\n          setLayout(nextLayout);\n          eagerValuesRef.current.layout = nextLayout;\n          if (onLayout) {\n            onLayout(nextLayout);\n          }\n          callPanelCallbacks(panelDataArray, nextLayout, panelIdToLastNotifiedSizeMapRef.current);\n        }\n      }\n    }\n  }, []);\n\n  // External APIs are safe to memoize via committed values ref\n  const expandPanel = useCallback((panelData, minSizeOverride) => {\n    const {\n      onLayout\n    } = committedValuesRef.current;\n    const {\n      layout: prevLayout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    if (panelData.constraints.collapsible) {\n      const panelConstraintsArray = panelDataArray.map(panelData => panelData.constraints);\n      const {\n        collapsedSize = 0,\n        panelSize = 0,\n        minSize: minSizeFromProps = 0,\n        pivotIndices\n      } = panelDataHelper(panelDataArray, panelData, prevLayout);\n      const minSize = minSizeOverride !== null && minSizeOverride !== void 0 ? minSizeOverride : minSizeFromProps;\n      if (fuzzyNumbersEqual$1(panelSize, collapsedSize)) {\n        // Restore this panel to the size it was before it was collapsed, if possible.\n        const prevPanelSize = panelSizeBeforeCollapseRef.current.get(panelData.id);\n        const baseSize = prevPanelSize != null && prevPanelSize >= minSize ? prevPanelSize : minSize;\n        const isLastPanel = findPanelDataIndex(panelDataArray, panelData) === panelDataArray.length - 1;\n        const delta = isLastPanel ? panelSize - baseSize : baseSize - panelSize;\n        const nextLayout = adjustLayoutByDelta({\n          delta,\n          initialLayout: prevLayout,\n          panelConstraints: panelConstraintsArray,\n          pivotIndices,\n          prevLayout,\n          trigger: \"imperative-api\"\n        });\n        if (!compareLayouts(prevLayout, nextLayout)) {\n          setLayout(nextLayout);\n          eagerValuesRef.current.layout = nextLayout;\n          if (onLayout) {\n            onLayout(nextLayout);\n          }\n          callPanelCallbacks(panelDataArray, nextLayout, panelIdToLastNotifiedSizeMapRef.current);\n        }\n      }\n    }\n  }, []);\n\n  // External APIs are safe to memoize via committed values ref\n  const getPanelSize = useCallback(panelData => {\n    const {\n      layout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    const {\n      panelSize\n    } = panelDataHelper(panelDataArray, panelData, layout);\n    assert(panelSize != null, `Panel size not found for panel \"${panelData.id}\"`);\n    return panelSize;\n  }, []);\n\n  // This API should never read from committedValuesRef\n  const getPanelStyle = useCallback((panelData, defaultSize) => {\n    const {\n      panelDataArray\n    } = eagerValuesRef.current;\n    const panelIndex = findPanelDataIndex(panelDataArray, panelData);\n    return computePanelFlexBoxStyle({\n      defaultSize,\n      dragState,\n      layout,\n      panelData: panelDataArray,\n      panelIndex\n    });\n  }, [dragState, layout]);\n\n  // External APIs are safe to memoize via committed values ref\n  const isPanelCollapsed = useCallback(panelData => {\n    const {\n      layout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    const {\n      collapsedSize = 0,\n      collapsible,\n      panelSize\n    } = panelDataHelper(panelDataArray, panelData, layout);\n    assert(panelSize != null, `Panel size not found for panel \"${panelData.id}\"`);\n    return collapsible === true && fuzzyNumbersEqual$1(panelSize, collapsedSize);\n  }, []);\n\n  // External APIs are safe to memoize via committed values ref\n  const isPanelExpanded = useCallback(panelData => {\n    const {\n      layout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    const {\n      collapsedSize = 0,\n      collapsible,\n      panelSize\n    } = panelDataHelper(panelDataArray, panelData, layout);\n    assert(panelSize != null, `Panel size not found for panel \"${panelData.id}\"`);\n    return !collapsible || fuzzyCompareNumbers(panelSize, collapsedSize) > 0;\n  }, []);\n  const registerPanel = useCallback(panelData => {\n    const {\n      panelDataArray\n    } = eagerValuesRef.current;\n    panelDataArray.push(panelData);\n    panelDataArray.sort((panelA, panelB) => {\n      const orderA = panelA.order;\n      const orderB = panelB.order;\n      if (orderA == null && orderB == null) {\n        return 0;\n      } else if (orderA == null) {\n        return -1;\n      } else if (orderB == null) {\n        return 1;\n      } else {\n        return orderA - orderB;\n      }\n    });\n    eagerValuesRef.current.panelDataArrayChanged = true;\n    forceUpdate();\n  }, [forceUpdate]);\n\n  // (Re)calculate group layout whenever panels are registered or unregistered.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useIsomorphicLayoutEffect(() => {\n    if (eagerValuesRef.current.panelDataArrayChanged) {\n      eagerValuesRef.current.panelDataArrayChanged = false;\n      const {\n        autoSaveId,\n        onLayout,\n        storage\n      } = committedValuesRef.current;\n      const {\n        layout: prevLayout,\n        panelDataArray\n      } = eagerValuesRef.current;\n\n      // If this panel has been configured to persist sizing information,\n      // default size should be restored from local storage if possible.\n      let unsafeLayout = null;\n      if (autoSaveId) {\n        const state = loadPanelGroupState(autoSaveId, panelDataArray, storage);\n        if (state) {\n          panelSizeBeforeCollapseRef.current = new Map(Object.entries(state.expandToSizes));\n          unsafeLayout = state.layout;\n        }\n      }\n      if (unsafeLayout == null) {\n        unsafeLayout = calculateUnsafeDefaultLayout({\n          panelDataArray\n        });\n      }\n\n      // Validate even saved layouts in case something has changed since last render\n      // e.g. for pixel groups, this could be the size of the window\n      const nextLayout = validatePanelGroupLayout({\n        layout: unsafeLayout,\n        panelConstraints: panelDataArray.map(panelData => panelData.constraints)\n      });\n      if (!areEqual(prevLayout, nextLayout)) {\n        setLayout(nextLayout);\n        eagerValuesRef.current.layout = nextLayout;\n        if (onLayout) {\n          onLayout(nextLayout);\n        }\n        callPanelCallbacks(panelDataArray, nextLayout, panelIdToLastNotifiedSizeMapRef.current);\n      }\n    }\n  });\n\n  // Reset the cached layout if hidden by the Activity/Offscreen API\n  useIsomorphicLayoutEffect(() => {\n    const eagerValues = eagerValuesRef.current;\n    return () => {\n      eagerValues.layout = [];\n    };\n  }, []);\n  const registerResizeHandle = useCallback(dragHandleId => {\n    let isRTL = false;\n    const panelGroupElement = panelGroupElementRef.current;\n    if (panelGroupElement) {\n      const style = window.getComputedStyle(panelGroupElement, null);\n      if (style.getPropertyValue(\"direction\") === \"rtl\") {\n        isRTL = true;\n      }\n    }\n    return function resizeHandler(event) {\n      event.preventDefault();\n      const panelGroupElement = panelGroupElementRef.current;\n      if (!panelGroupElement) {\n        return () => null;\n      }\n      const {\n        direction,\n        dragState,\n        id: groupId,\n        keyboardResizeBy,\n        onLayout\n      } = committedValuesRef.current;\n      const {\n        layout: prevLayout,\n        panelDataArray\n      } = eagerValuesRef.current;\n      const {\n        initialLayout\n      } = dragState !== null && dragState !== void 0 ? dragState : {};\n      const pivotIndices = determinePivotIndices(groupId, dragHandleId, panelGroupElement);\n      let delta = calculateDeltaPercentage(event, dragHandleId, direction, dragState, keyboardResizeBy, panelGroupElement);\n      const isHorizontal = direction === \"horizontal\";\n      if (isHorizontal && isRTL) {\n        delta = -delta;\n      }\n      const panelConstraints = panelDataArray.map(panelData => panelData.constraints);\n      const nextLayout = adjustLayoutByDelta({\n        delta,\n        initialLayout: initialLayout !== null && initialLayout !== void 0 ? initialLayout : prevLayout,\n        panelConstraints,\n        pivotIndices,\n        prevLayout,\n        trigger: isKeyDown(event) ? \"keyboard\" : \"mouse-or-touch\"\n      });\n      const layoutChanged = !compareLayouts(prevLayout, nextLayout);\n\n      // Only update the cursor for layout changes triggered by touch/mouse events (not keyboard)\n      // Update the cursor even if the layout hasn't changed (we may need to show an invalid cursor state)\n      if (isPointerEvent(event) || isMouseEvent(event)) {\n        // Watch for multiple subsequent deltas; this might occur for tiny cursor movements.\n        // In this case, Panel sizes might not change–\n        // but updating cursor in this scenario would cause a flicker.\n        if (prevDeltaRef.current != delta) {\n          prevDeltaRef.current = delta;\n          if (!layoutChanged && delta !== 0) {\n            // If the pointer has moved too far to resize the panel any further, note this so we can update the cursor.\n            // This mimics VS Code behavior.\n            if (isHorizontal) {\n              reportConstraintsViolation(dragHandleId, delta < 0 ? EXCEEDED_HORIZONTAL_MIN : EXCEEDED_HORIZONTAL_MAX);\n            } else {\n              reportConstraintsViolation(dragHandleId, delta < 0 ? EXCEEDED_VERTICAL_MIN : EXCEEDED_VERTICAL_MAX);\n            }\n          } else {\n            reportConstraintsViolation(dragHandleId, 0);\n          }\n        }\n      }\n      if (layoutChanged) {\n        setLayout(nextLayout);\n        eagerValuesRef.current.layout = nextLayout;\n        if (onLayout) {\n          onLayout(nextLayout);\n        }\n        callPanelCallbacks(panelDataArray, nextLayout, panelIdToLastNotifiedSizeMapRef.current);\n      }\n    };\n  }, []);\n\n  // External APIs are safe to memoize via committed values ref\n  const resizePanel = useCallback((panelData, unsafePanelSize) => {\n    const {\n      onLayout\n    } = committedValuesRef.current;\n    const {\n      layout: prevLayout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    const panelConstraintsArray = panelDataArray.map(panelData => panelData.constraints);\n    const {\n      panelSize,\n      pivotIndices\n    } = panelDataHelper(panelDataArray, panelData, prevLayout);\n    assert(panelSize != null, `Panel size not found for panel \"${panelData.id}\"`);\n    const isLastPanel = findPanelDataIndex(panelDataArray, panelData) === panelDataArray.length - 1;\n    const delta = isLastPanel ? panelSize - unsafePanelSize : unsafePanelSize - panelSize;\n    const nextLayout = adjustLayoutByDelta({\n      delta,\n      initialLayout: prevLayout,\n      panelConstraints: panelConstraintsArray,\n      pivotIndices,\n      prevLayout,\n      trigger: \"imperative-api\"\n    });\n    if (!compareLayouts(prevLayout, nextLayout)) {\n      setLayout(nextLayout);\n      eagerValuesRef.current.layout = nextLayout;\n      if (onLayout) {\n        onLayout(nextLayout);\n      }\n      callPanelCallbacks(panelDataArray, nextLayout, panelIdToLastNotifiedSizeMapRef.current);\n    }\n  }, []);\n  const reevaluatePanelConstraints = useCallback((panelData, prevConstraints) => {\n    const {\n      layout,\n      panelDataArray\n    } = eagerValuesRef.current;\n    const {\n      collapsedSize: prevCollapsedSize = 0,\n      collapsible: prevCollapsible\n    } = prevConstraints;\n    const {\n      collapsedSize: nextCollapsedSize = 0,\n      collapsible: nextCollapsible,\n      maxSize: nextMaxSize = 100,\n      minSize: nextMinSize = 0\n    } = panelData.constraints;\n    const {\n      panelSize: prevPanelSize\n    } = panelDataHelper(panelDataArray, panelData, layout);\n    if (prevPanelSize == null) {\n      // It's possible that the panels in this group have changed since the last render\n      return;\n    }\n    if (prevCollapsible && nextCollapsible && fuzzyNumbersEqual$1(prevPanelSize, prevCollapsedSize)) {\n      if (!fuzzyNumbersEqual$1(prevCollapsedSize, nextCollapsedSize)) {\n        resizePanel(panelData, nextCollapsedSize);\n      }\n    } else if (prevPanelSize < nextMinSize) {\n      resizePanel(panelData, nextMinSize);\n    } else if (prevPanelSize > nextMaxSize) {\n      resizePanel(panelData, nextMaxSize);\n    }\n  }, [resizePanel]);\n\n  // TODO Multiple drag handles can be active at the same time so this API is a bit awkward now\n  const startDragging = useCallback((dragHandleId, event) => {\n    const {\n      direction\n    } = committedValuesRef.current;\n    const {\n      layout\n    } = eagerValuesRef.current;\n    if (!panelGroupElementRef.current) {\n      return;\n    }\n    const handleElement = getResizeHandleElement(dragHandleId, panelGroupElementRef.current);\n    assert(handleElement, `Drag handle element not found for id \"${dragHandleId}\"`);\n    const initialCursorPosition = getResizeEventCursorPosition(direction, event);\n    setDragState({\n      dragHandleId,\n      dragHandleRect: handleElement.getBoundingClientRect(),\n      initialCursorPosition,\n      initialLayout: layout\n    });\n  }, []);\n  const stopDragging = useCallback(() => {\n    setDragState(null);\n  }, []);\n  const unregisterPanel = useCallback(panelData => {\n    const {\n      panelDataArray\n    } = eagerValuesRef.current;\n    const index = findPanelDataIndex(panelDataArray, panelData);\n    if (index >= 0) {\n      panelDataArray.splice(index, 1);\n\n      // TRICKY\n      // When a panel is removed from the group, we should delete the most recent prev-size entry for it.\n      // If we don't do this, then a conditionally rendered panel might not call onResize when it's re-mounted.\n      // Strict effects mode makes this tricky though because all panels will be registered, unregistered, then re-registered on mount.\n      delete panelIdToLastNotifiedSizeMapRef.current[panelData.id];\n      eagerValuesRef.current.panelDataArrayChanged = true;\n      forceUpdate();\n    }\n  }, [forceUpdate]);\n  const context = useMemo(() => ({\n    collapsePanel,\n    direction,\n    dragState,\n    expandPanel,\n    getPanelSize,\n    getPanelStyle,\n    groupId,\n    isPanelCollapsed,\n    isPanelExpanded,\n    reevaluatePanelConstraints,\n    registerPanel,\n    registerResizeHandle,\n    resizePanel,\n    startDragging,\n    stopDragging,\n    unregisterPanel,\n    panelGroupElement: panelGroupElementRef.current\n  }), [collapsePanel, dragState, direction, expandPanel, getPanelSize, getPanelStyle, groupId, isPanelCollapsed, isPanelExpanded, reevaluatePanelConstraints, registerPanel, registerResizeHandle, resizePanel, startDragging, stopDragging, unregisterPanel]);\n  const style = {\n    display: \"flex\",\n    flexDirection: direction === \"horizontal\" ? \"row\" : \"column\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    width: \"100%\"\n  };\n  return createElement(PanelGroupContext.Provider, {\n    value: context\n  }, createElement(Type, {\n    ...rest,\n    children,\n    className: classNameFromProps,\n    id: idFromProps,\n    ref: panelGroupElementRef,\n    style: {\n      ...style,\n      ...styleFromProps\n    },\n    // CSS selectors\n    [DATA_ATTRIBUTES.group]: \"\",\n    [DATA_ATTRIBUTES.groupDirection]: direction,\n    [DATA_ATTRIBUTES.groupId]: groupId\n  }));\n}\nconst PanelGroup = forwardRef((props, ref) => createElement(PanelGroupWithForwardedRef, {\n  ...props,\n  forwardedRef: ref\n}));\nPanelGroupWithForwardedRef.displayName = \"PanelGroup\";\nPanelGroup.displayName = \"forwardRef(PanelGroup)\";\nfunction findPanelDataIndex(panelDataArray, panelData) {\n  return panelDataArray.findIndex(prevPanelData => prevPanelData === panelData || prevPanelData.id === panelData.id);\n}\nfunction panelDataHelper(panelDataArray, panelData, layout) {\n  const panelIndex = findPanelDataIndex(panelDataArray, panelData);\n  const isLastPanel = panelIndex === panelDataArray.length - 1;\n  const pivotIndices = isLastPanel ? [panelIndex - 1, panelIndex] : [panelIndex, panelIndex + 1];\n  const panelSize = layout[panelIndex];\n  return {\n    ...panelData.constraints,\n    panelSize,\n    pivotIndices\n  };\n}\n\n// https://www.w3.org/WAI/ARIA/apg/patterns/windowsplitter/\n\nfunction useWindowSplitterResizeHandlerBehavior({\n  disabled,\n  handleId,\n  resizeHandler,\n  panelGroupElement\n}) {\n  useEffect(() => {\n    if (disabled || resizeHandler == null || panelGroupElement == null) {\n      return;\n    }\n    const handleElement = getResizeHandleElement(handleId, panelGroupElement);\n    if (handleElement == null) {\n      return;\n    }\n    const onKeyDown = event => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      switch (event.key) {\n        case \"ArrowDown\":\n        case \"ArrowLeft\":\n        case \"ArrowRight\":\n        case \"ArrowUp\":\n        case \"End\":\n        case \"Home\":\n          {\n            event.preventDefault();\n            resizeHandler(event);\n            break;\n          }\n        case \"F6\":\n          {\n            event.preventDefault();\n            const groupId = handleElement.getAttribute(DATA_ATTRIBUTES.groupId);\n            assert(groupId, `No group element found for id \"${groupId}\"`);\n            const handles = getResizeHandleElementsForGroup(groupId, panelGroupElement);\n            const index = getResizeHandleElementIndex(groupId, handleId, panelGroupElement);\n            assert(index !== null, `No resize element found for id \"${handleId}\"`);\n            const nextIndex = event.shiftKey ? index > 0 ? index - 1 : handles.length - 1 : index + 1 < handles.length ? index + 1 : 0;\n            const nextHandle = handles[nextIndex];\n            nextHandle.focus();\n            break;\n          }\n      }\n    };\n    handleElement.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      handleElement.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [panelGroupElement, disabled, handleId, resizeHandler]);\n}\n\nfunction PanelResizeHandle({\n  children = null,\n  className: classNameFromProps = \"\",\n  disabled = false,\n  hitAreaMargins,\n  id: idFromProps,\n  onBlur,\n  onClick,\n  onDragging,\n  onFocus,\n  onPointerDown,\n  onPointerUp,\n  style: styleFromProps = {},\n  tabIndex = 0,\n  tagName: Type = \"div\",\n  ...rest\n}) {\n  var _hitAreaMargins$coars, _hitAreaMargins$fine;\n  const elementRef = useRef(null);\n\n  // Use a ref to guard against users passing inline props\n  const callbacksRef = useRef({\n    onClick,\n    onDragging,\n    onPointerDown,\n    onPointerUp\n  });\n  useEffect(() => {\n    callbacksRef.current.onClick = onClick;\n    callbacksRef.current.onDragging = onDragging;\n    callbacksRef.current.onPointerDown = onPointerDown;\n    callbacksRef.current.onPointerUp = onPointerUp;\n  });\n  const panelGroupContext = useContext(PanelGroupContext);\n  if (panelGroupContext === null) {\n    throw Error(`PanelResizeHandle components must be rendered within a PanelGroup container`);\n  }\n  const {\n    direction,\n    groupId,\n    registerResizeHandle: registerResizeHandleWithParentGroup,\n    startDragging,\n    stopDragging,\n    panelGroupElement\n  } = panelGroupContext;\n  const resizeHandleId = useUniqueId(idFromProps);\n  const [state, setState] = useState(\"inactive\");\n  const [isFocused, setIsFocused] = useState(false);\n  const [resizeHandler, setResizeHandler] = useState(null);\n  const committedValuesRef = useRef({\n    state\n  });\n  useIsomorphicLayoutEffect(() => {\n    committedValuesRef.current.state = state;\n  });\n  useEffect(() => {\n    if (disabled) {\n      setResizeHandler(null);\n    } else {\n      const resizeHandler = registerResizeHandleWithParentGroup(resizeHandleId);\n      setResizeHandler(() => resizeHandler);\n    }\n  }, [disabled, resizeHandleId, registerResizeHandleWithParentGroup]);\n\n  // Extract hit area margins before passing them to the effect's dependency array\n  // so that inline object values won't trigger re-renders\n  const coarseHitAreaMargins = (_hitAreaMargins$coars = hitAreaMargins === null || hitAreaMargins === void 0 ? void 0 : hitAreaMargins.coarse) !== null && _hitAreaMargins$coars !== void 0 ? _hitAreaMargins$coars : 15;\n  const fineHitAreaMargins = (_hitAreaMargins$fine = hitAreaMargins === null || hitAreaMargins === void 0 ? void 0 : hitAreaMargins.fine) !== null && _hitAreaMargins$fine !== void 0 ? _hitAreaMargins$fine : 5;\n  useEffect(() => {\n    if (disabled || resizeHandler == null) {\n      return;\n    }\n    const element = elementRef.current;\n    assert(element, \"Element ref not attached\");\n    let didMove = false;\n    const setResizeHandlerState = (action, isActive, event) => {\n      if (!isActive) {\n        setState(\"inactive\");\n        return;\n      }\n      switch (action) {\n        case \"down\":\n          {\n            setState(\"drag\");\n            didMove = false;\n            assert(event, 'Expected event to be defined for \"down\" action');\n            startDragging(resizeHandleId, event);\n            const {\n              onDragging,\n              onPointerDown\n            } = callbacksRef.current;\n            onDragging === null || onDragging === void 0 ? void 0 : onDragging(true);\n            onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown();\n            break;\n          }\n        case \"move\":\n          {\n            const {\n              state\n            } = committedValuesRef.current;\n            didMove = true;\n            if (state !== \"drag\") {\n              setState(\"hover\");\n            }\n            assert(event, 'Expected event to be defined for \"move\" action');\n            resizeHandler(event);\n            break;\n          }\n        case \"up\":\n          {\n            setState(\"hover\");\n            stopDragging();\n            const {\n              onClick,\n              onDragging,\n              onPointerUp\n            } = callbacksRef.current;\n            onDragging === null || onDragging === void 0 ? void 0 : onDragging(false);\n            onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp();\n            if (!didMove) {\n              onClick === null || onClick === void 0 ? void 0 : onClick();\n            }\n            break;\n          }\n      }\n    };\n    return registerResizeHandle(resizeHandleId, element, direction, {\n      coarse: coarseHitAreaMargins,\n      fine: fineHitAreaMargins\n    }, setResizeHandlerState);\n  }, [coarseHitAreaMargins, direction, disabled, fineHitAreaMargins, registerResizeHandleWithParentGroup, resizeHandleId, resizeHandler, startDragging, stopDragging]);\n  useWindowSplitterResizeHandlerBehavior({\n    disabled,\n    handleId: resizeHandleId,\n    resizeHandler,\n    panelGroupElement\n  });\n  const style = {\n    touchAction: \"none\",\n    userSelect: \"none\"\n  };\n  return createElement(Type, {\n    ...rest,\n    children,\n    className: classNameFromProps,\n    id: idFromProps,\n    onBlur: () => {\n      setIsFocused(false);\n      onBlur === null || onBlur === void 0 ? void 0 : onBlur();\n    },\n    onFocus: () => {\n      setIsFocused(true);\n      onFocus === null || onFocus === void 0 ? void 0 : onFocus();\n    },\n    ref: elementRef,\n    role: \"separator\",\n    style: {\n      ...style,\n      ...styleFromProps\n    },\n    tabIndex,\n    // CSS selectors\n    [DATA_ATTRIBUTES.groupDirection]: direction,\n    [DATA_ATTRIBUTES.groupId]: groupId,\n    [DATA_ATTRIBUTES.resizeHandle]: \"\",\n    [DATA_ATTRIBUTES.resizeHandleActive]: state === \"drag\" ? \"pointer\" : isFocused ? \"keyboard\" : undefined,\n    [DATA_ATTRIBUTES.resizeHandleEnabled]: !disabled,\n    [DATA_ATTRIBUTES.resizeHandleId]: resizeHandleId,\n    [DATA_ATTRIBUTES.resizeHandleState]: state\n  });\n}\nPanelResizeHandle.displayName = \"PanelResizeHandle\";\n\nfunction usePanelGroupContext() {\n  const context = useContext(PanelGroupContext);\n  return {\n    direction: context === null || context === void 0 ? void 0 : context.direction,\n    groupId: context === null || context === void 0 ? void 0 : context.groupId\n  };\n}\n\nfunction getPanelElement(id, scope = document) {\n  const element = scope.querySelector(`[data-panel-id=\"${id}\"]`);\n  if (element) {\n    return element;\n  }\n  return null;\n}\n\nfunction getPanelElementsForGroup(groupId, scope = document) {\n  return Array.from(scope.querySelectorAll(`[data-panel][data-panel-group-id=\"${groupId}\"]`));\n}\n\nfunction getIntersectingRectangle(rectOne, rectTwo, strict) {\n  if (!intersects(rectOne, rectTwo, strict)) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  return {\n    x: Math.max(rectOne.x, rectTwo.x),\n    y: Math.max(rectOne.y, rectTwo.y),\n    width: Math.min(rectOne.x + rectOne.width, rectTwo.x + rectTwo.width) - Math.max(rectOne.x, rectTwo.x),\n    height: Math.min(rectOne.y + rectOne.height, rectTwo.y + rectTwo.height) - Math.max(rectOne.y, rectTwo.y)\n  };\n}\n\nexport { DATA_ATTRIBUTES, Panel, PanelGroup, PanelResizeHandle, assert, customizeGlobalCursorStyles, disableGlobalCursorStyles, enableGlobalCursorStyles, getIntersectingRectangle, getPanelElement, getPanelElementsForGroup, getPanelGroupElement, getResizeHandleElement, getResizeHandleElementIndex, getResizeHandleElementsForGroup, getResizeHandlePanelIds, intersects, setNonce, usePanelGroupContext };\n","\nimport React from 'react';\n\nexport const QueueIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <path d=\"M8 6h10\" />\n        <path d=\"M6 12h10\" />\n        <path d=\"M4 18h10\" />\n        <path d=\"m18 18 3-3-3-3\" />\n    </svg>\n);","\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport type { Player } from '../../types';\nimport { NewsIcon } from '../icons/NewsIcon';\nimport { InjuryIcon } from '../icons/InjuryIcon';\nimport { QueueIcon } from '../icons/QueueIcon';\nimport { CompareIcon } from '../icons/CompareIcon';\nimport { PencilIcon } from '../icons/PencilIcon';\nimport { StarIcon } from '../icons/StarIcon';\nimport { StarFilledIcon } from '../icons/StarFilledIcon';\nimport { useAppState } from '../../contexts/AppContext';\nimport { GemIcon } from '../icons/GemIcon';\n\ninterface PlayerCardProps {\n  player: Player;\n  onSelect: () => void;\n  onAddToQueue: () => void;\n  onDraft: () => void;\n  onNominate: () => void;\n  onAddNote: () => void;\n  isMyTurn: boolean;\n  isNominationTurn: boolean;\n  onToggleCompare: () => void;\n  isSelectedForCompare: boolean;\n  isInQueue: boolean;\n}\n\nconst positionColor: Record<string, string> = {\n    QB: 'border-red-400/50',\n    RB: 'border-green-400/50',\n    WR: 'border-blue-400/50',\n    TE: 'border-orange-400/50',\n    DST: 'border-purple-400/50',\n    K: 'border-yellow-400/50'\n};\n\nconst PlayerCard: React.FC<PlayerCardProps> = ({ \n    player, onSelect, onAddToQueue, onDraft, onNominate, onAddNote,\n    isMyTurn, isNominationTurn, onToggleCompare, isSelectedForCompare, isInQueue \n}) => {\n  const { state, dispatch } = useAppState();\n  const hasNews = player.newsFeed && player.newsFeed.length > 0;\n  const hasInjury = player?.injuryHistory && player?.injuryHistory.length > 0;\n  const isOnWatchlist = state.watchlist.includes(player.id);\n  const isValuePick = player.rank < player?.adp - 10;\n  \n  const handleToggleWatchlist = (e: React.MouseEvent) => {\n    e.stopPropagation(); // Prevent onSelect from firing\n    if(isOnWatchlist) {\n        dispatch({ type: 'REMOVE_FROM_WATCHLIST', payload: player.id });\n    } else {\n        dispatch({ type: 'ADD_TO_WATCHLIST', payload: player.id });\n    }\n  };\n\n  return (\n    <motion.div\n      className={`group w-full text-left p-1.5 sm:p-2 bg-slate-300/20 dark:bg-gray-800/40 rounded-lg border-l-4 ${positionColor[player.position]} ${isSelectedForCompare ? 'ring-2 ring-cyan-400' : 'hover:ring-2 hover:ring-cyan-400/50'} transition-all flex items-center gap-1.5 sm:gap-2`}\n      {...{\n        layout: true,\n        initial: { opacity: 0, x: -20 },\n        animate: { opacity: 1, x: 0 },\n        exit: { opacity: 0, x: 20 },\n        transition: { duration: 0.3, type: 'spring', stiffness: 200, damping: 25 },\n      }}\n    >\n        <div className=\"flex flex-col gap-0.5 sm:gap-1\">\n            <button\n                onClick={handleToggleWatchlist}\n                className={`p-1 sm:p-1.5 rounded-md transition-colors mobile-touch-target ${isOnWatchlist ? 'text-yellow-400' : 'text-gray-500 hover:text-yellow-400'}`}\n                aria-label={isOnWatchlist ? `Remove ${player.name} from watchlist` : `Add ${player.name} to watchlist`}\n            >\n                {isOnWatchlist ? <StarFilledIcon className=\"h-3 w-3 sm:h-4 sm:w-4\" /> : <StarIcon className=\"h-3 w-3 sm:h-4 sm:w-4\" />}\n            </button>\n            <button\n                onClick={onToggleCompare}\n                className={`p-1 sm:p-1.5 rounded-md transition-colors mobile-touch-target ${isSelectedForCompare ? 'bg-cyan-400/20 text-cyan-300' : 'text-gray-500 hover:text-cyan-400'}`}\n                aria-label={`Toggle comparison for ${player.name}`}\n            >\n                <CompareIcon className=\"h-3 w-3 sm:h-4 sm:w-4\" />\n            </button>\n            <button \n                onClick={onAddNote}\n                className=\"p-1 sm:p-1.5 rounded-md text-gray-500 hover:text-yellow-400 transition-colors mobile-touch-target\"\n                aria-label={`Add note for ${player.name}`}\n            >\n                <PencilIcon className=\"h-3 w-3 sm:h-4 sm:w-4\" />\n            </button>\n        </div>\n\n        <button onClick={onSelect} className=\"flex-grow flex items-center justify-between overflow-hidden mobile-touch-target\">\n            <div className=\"flex-grow overflow-hidden\">\n                <div className=\"flex items-center gap-1.5 sm:gap-2\">\n                    <p className=\"font-bold text-xs sm:text-sm text-[var(--text-primary)] truncate\">{player.name}</p>\n                    {isValuePick && (\n                        <div className=\"flex-shrink-0 flex items-center gap-1 px-1 sm:px-1.5 py-0.5 bg-green-500/20 text-green-300 text-[8px] sm:text-[10px] font-bold rounded-full\">\n                            <GemIcon /> <span className=\"hidden sm:inline\">VALUE</span>\n                        </div>\n                    )}\n                    {hasNews && <NewsIcon className=\"w-2.5 h-2.5 sm:w-3 sm:h-3 text-cyan-400 flex-shrink-0\" />}\n                    {hasInjury && <InjuryIcon className=\"w-2.5 h-2.5 sm:w-3 sm:h-3 text-red-400 flex-shrink-0\" />}\n                </div>\n                <p className=\"text-[10px] sm:text-xs text-[var(--text-secondary)]\">{player.position} - {player.team}</p>\n            </div>\n            <div className=\"text-right flex-shrink-0 ml-1 sm:ml-2\">\n                <p className=\"font-bold text-lg sm:text-xl text-cyan-400 dark:text-cyan-300\">{player.rank}</p>\n                <p className=\"text-[8px] sm:text-[10px] text-gray-400 dark:text-gray-500\">\n                    <span className=\"hidden sm:inline\">ADP: {player?.adp} | Bye: {player.bye}</span>\n                    <span className=\"sm:hidden\">{player?.adp}</span>\n                </p>\n            </div>\n        </button>\n\n        {(() => {\n            if (isNominationTurn) {\n                return (\n                    <button\n                        onClick={onNominate}\n                        className=\"flex-shrink-0 px-2.5 sm:px-4 py-1.5 sm:py-2 rounded-md bg-blue-500 text-white font-bold text-[10px] sm:text-xs uppercase shadow-lg hover:bg-blue-400 transition-colors mobile-touch-target\"\n                        aria-label={`Nominate ${player.name}`}\n                    >\n                        <span className=\"hidden sm:inline\">Nominate</span>\n                        <span className=\"sm:hidden\">Nom</span>\n                    </button>\n                );\n            } else if (isMyTurn) {\n                return (\n                    <button\n                        onClick={onDraft}\n                        className=\"flex-shrink-0 px-2.5 sm:px-4 py-1.5 sm:py-2 rounded-md bg-green-500 text-white font-bold text-[10px] sm:text-xs uppercase shadow-lg hover:bg-green-400 transition-colors mobile-touch-target\"\n                        aria-label={`Draft ${player.name}`}\n                    >\n                        <span className=\"hidden sm:inline\">Draft</span>\n                        <span className=\"sm:hidden\">+</span>\n                    </button>\n                );\n            } else {\n                return (\n                    <button \n                        onClick={onAddToQueue}\n                        className={`flex-shrink-0 p-1.5 sm:p-2 rounded-md bg-transparent hover:bg-cyan-400/20 transition-all mobile-touch-target ${isInQueue ? 'text-cyan-400 opacity-100' : 'text-gray-500 opacity-0 group-hover:opacity-100'}`}\n                        aria-label={isInQueue ? \"Player is in queue\" : \"Add to queue\"}\n                    >\n                        <QueueIcon />\n                    </button>\n                );\n            }\n        })()}\n    </motion.div>\n  );\n};\n\nexport default PlayerCard;","\nimport React from 'react';\nimport type { Player } from '../../types';\nimport PlayerCard from './PlayerCard';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { SearchIcon } from '../icons/SearchIcon';\nimport { StarFilledIcon } from '../icons/StarFilledIcon';\nimport { useAppState } from '../../contexts/AppContext';\n\ninterface PlayerPoolProps {\n  players: Player[];\n  onPlayerSelect: (player: Player) => void;\n  onAddToQueue: (player: Player) => void;\n  onDraftPlayer: (player: Player) => void;\n  onNominatePlayer: (player: Player) => void;\n  onAddNote: (player: Player) => void;\n  isMyTurn: boolean;\n  playersToCompare: Player[];\n  onToggleCompare: (player: Player) => void;\n  queuedPlayerIds: number[];\n  draftFormat: 'SNAKE' | 'AUCTION';\n  isNominationTurn: boolean;\n}\n\nconst INITIAL_LOAD_COUNT = 50;\nconst LOAD_MORE_COUNT = 50;\n\nconst PlayerPool: React.FC<PlayerPoolProps> = ({ \n    players, onPlayerSelect, onAddToQueue, onDraftPlayer, onNominatePlayer,\n    onAddNote, isMyTurn, playersToCompare, onToggleCompare, queuedPlayerIds,\n    draftFormat, isNominationTurn \n}) => {\n  const { state } = useAppState();\n  const [search, setSearch] = React.useState('');\n  const [positionFilter, setPositionFilter] = React.useState<string>('ALL');\n  const [showWatchlistOnly, setShowWatchlistOnly] = React.useState(false);\n  const [sortBy, setSortBy] = React.useState<'default' | 'custom'>('default');\n  const [visibleCount, setVisibleCount] = React.useState(INITIAL_LOAD_COUNT);\n\n  const filteredPlayers = React.useMemo(() => {\n    let initialPool = showWatchlistOnly ? players.filter((p: any) => state.watchlist.includes(p.id)) : players;\n\n    let sortedPool = [...initialPool];\n    if (sortBy === 'custom' && state.activeLeagueId && state.customRankings[state.activeLeagueId]) {\n      const customRanks = state.customRankings[state.activeLeagueId];\n      sortedPool.sort((a, b) => {\n        const rankA = customRanks[a.id] ?? Infinity;\n        const rankB = customRanks[b.id] ?? Infinity;\n        if(rankA !== rankB) return rankA - rankB;\n        return a.rank - b.rank; // fallback to default rank\n      });\n    }\n\n    return sortedPool.filter((p: any) => {\n        const searchLower = search.toLowerCase();\n        const matchesSearch = p.name.toLowerCase().includes(searchLower) || p.team.toLowerCase().includes(searchLower);\n        const matchesPosition = positionFilter === 'ALL' || p.position === positionFilter;\n        return matchesSearch && matchesPosition;\n    });\n  }, [players, search, positionFilter, showWatchlistOnly, state.watchlist, sortBy, state.customRankings, state.activeLeagueId]);\n\n  const playersToShow = filteredPlayers.slice(0, visibleCount);\n  const hasMore = visibleCount < filteredPlayers.length;\n\n  const handleLoadMore = () => {\n    setVisibleCount(current => current + LOAD_MORE_COUNT);\n  };\n  \n  React.useEffect(() => {\n    setVisibleCount(INITIAL_LOAD_COUNT);\n  }, [search, positionFilter, showWatchlistOnly, sortBy]);\n\n\n  const positions = ['ALL', 'QB', 'RB', 'WR', 'TE', 'K', 'DST'];\n\n  return (\n    <div className=\"glass-pane flex flex-col bg-[var(--panel-bg)] border-[var(--panel-border)] rounded-2xl h-full shadow-2xl shadow-black/50\">\n      <div className=\"flex-shrink-0 p-2 sm:p-3 border-b border-[var(--panel-border)]\">\n        <h2 className=\"font-display text-lg sm:text-xl font-bold text-[var(--text-primary)] tracking-wider text-center\">AVAILABLE PLAYERS</h2>\n        <p className=\"text-center text-xs sm:text-sm text-cyan-200/70\">{players.length} Remaining</p>\n      </div>\n      <div className=\"flex-shrink-0 p-1.5 sm:p-2 space-y-2\">\n         <div className=\"relative\">\n            <input\n                type=\"text\"\n                placeholder=\"Search player or team...\"\n                value={search}\n                onChange={e => setSearch(e.target.value)}\n                className=\"w-full bg-black/10 dark:bg-gray-900/50 border border-[var(--panel-border)] rounded-md px-3 py-1.5 pl-8 text-xs sm:text-sm placeholder:text-[var(--text-secondary)] focus:outline-none focus:ring-2 focus:ring-cyan-400 mobile-touch-target\"\n            />\n            <SearchIcon className=\"absolute left-2.5 top-1/2 -translate-y-1/2 h-3 w-3 sm:h-4 sm:w-4 text-[var(--text-secondary)]\" />\n         </div>\n        <div className=\"flex gap-1 justify-between items-center flex-wrap\">\n            <div className=\"flex gap-1 flex-wrap\">\n                {positions.map((pos: any) => (\n                    <button \n                        key={pos} \n                        onClick={() => setPositionFilter(pos)}\n                        className={`px-2 sm:px-2.5 py-1 sm:py-0.5 text-xs font-bold rounded-full transition-all mobile-touch-target\n                            ${positionFilter === pos ? 'bg-cyan-400 text-black' : 'bg-black/10 dark:bg-gray-700/50 text-[var(--text-secondary)] hover:bg-black/20 dark:hover:bg-gray-600/50'}\n                        `}\n                    >\n                        {pos}\n                    </button>\n                ))}\n            </div>\n            <div className=\"flex gap-1\">\n                <button\n                    onClick={() => setShowWatchlistOnly(s => !s)}\n                    className={`flex items-center gap-1 px-2 sm:px-2.5 py-1 sm:py-0.5 text-xs font-bold rounded-full transition-all mobile-touch-target\n                        ${showWatchlistOnly ? 'bg-yellow-400 text-black' : 'bg-black/10 dark:bg-gray-700/50 text-[var(--text-secondary)] hover:bg-black/20 dark:hover:bg-gray-600/50'}\n                    `}\n                >\n                    <StarFilledIcon className=\"h-3 w-3\" />\n                    <span className=\"hidden sm:inline\">Watchlist</span>\n                    <span className=\"sm:hidden\">★</span>\n                </button>\n                <select \n                    value={sortBy} \n                    onChange={e => setSortBy(e.target.value as any)}\n                    className=\"bg-black/10 dark:bg-gray-700/50 text-[var(--text-secondary)] text-xs font-bold rounded-full px-2 sm:px-2.5 py-1 border-0 focus:ring-2 focus:ring-cyan-400 mobile-touch-target\"\n                  >\n                      <option value=\"default\">Default</option>\n                      <option value=\"custom\">Custom</option>\n                </select>\n            </div>\n        </div>\n      </div>\n      <div className=\"flex-grow overflow-y-auto p-1 sm:p-2 space-y-1\">\n        <AnimatePresence>\n            {playersToShow.map((player) => (\n                <PlayerCard \n                    key={player.id} \n                    player={player} \n                    onSelect={() => onPlayerSelect(player)}\n                    onAddToQueue={() => onAddToQueue(player)}\n                    onDraft={() => onDraftPlayer(player)}\n                    onNominate={() => onNominatePlayer(player)}\n                    onAddNote={() => onAddNote(player)}\n                    isMyTurn={isMyTurn}\n                    onToggleCompare={() => onToggleCompare(player)}\n                    isSelectedForCompare={playersToCompare.some((p: any) => p.id === player.id)}\n                    isInQueue={queuedPlayerIds.includes(player.id)}\n                    isNominationTurn={isNominationTurn}\n                />\n            ))}\n        </AnimatePresence>\n        {hasMore && (\n            <div className=\"pt-2 text-center\">\n                <button onClick={handleLoadMore} className=\"w-full px-3 sm:px-4 py-2 sm:py-2.5 text-xs font-bold text-cyan-300 bg-cyan-500/10 rounded-md hover:bg-cyan-500/20 mobile-touch-target\">\n                    Load More ({filteredPlayers.length - visibleCount} remaining)\n                </button>\n            </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerPool;\n","\n\n\nimport React from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport type { Team, DraftPick, Player } from '../../types';\nimport { players } from '../../data/players';\nimport { Avatar } from '../ui/Avatar';\n\ninterface TeamColumnProps {\n  team: Team;\n  picks: DraftPick[];\n  currentPick?: number;\n  onPlayerSelect: (player: Player) => void;\n  draftFormat: 'SNAKE' | 'AUCTION';\n  isMyTeam?: boolean;\n  isOnTheClock?: boolean;\n}\n\nconst positionColor: Record<string, string> = {\n    QB: 'bg-red-500/70',\n    RB: 'bg-green-500/70',\n    WR: 'bg-blue-500/70',\n    TE: 'bg-orange-500/70',\n    DST: 'bg-purple-500/70',\n    K: 'bg-yellow-500/70'\n};\n\nconst TeamColumn: React.FC<TeamColumnProps> = ({ team, picks, currentPick, onPlayerSelect, draftFormat, isMyTeam, isOnTheClock }) => {\n\n  const getSnakePickDisplay = (pick: DraftPick) => {\n    return `${pick.round}.${pick.pickInRound}`;\n  }\n  \n  const displayItems = draftFormat === 'AUCTION'\n    ? team.roster.map((player, index) => {\n        const pick = picks.find((p: any) => p.playerId === player.id);\n        return {\n            key: player.id,\n            player,\n            price: pick?.price,\n            isCurrent: false,\n            display: ''\n        };\n    })\n    : picks.map((pick: any) => {\n        const player = players.find((p: any) => p.id === pick.playerId);\n        return {\n            key: pick.overall,\n            player,\n            price: undefined,\n            isCurrent: pick.overall === currentPick,\n            display: getSnakePickDisplay(pick)\n        }\n    });\n\n  const columnClasses = [\n      'w-24 sm:w-32 flex-shrink-0 flex flex-col items-center gap-0.5 sm:gap-1 rounded-lg transition-all duration-300',\n      isMyTeam ? 'bg-cyan-500/10' : '',\n      isOnTheClock ? 'shadow-lg shadow-yellow-300/40 ring-2 ring-yellow-300' : ''\n  ].join(' ');\n\n  return (\n    <div className={columnClasses}>\n      <div className=\"h-10 sm:h-12 flex-shrink-0 flex flex-col items-center justify-center w-full bg-black/10 dark:bg-gray-800/50 rounded-t-lg border-b-2 border-transparent\">\n        <Avatar avatar={team.avatar} className=\"w-6 h-6 sm:w-8 sm:h-8 text-lg sm:text-2xl rounded-md\" />\n        <p className=\"text-[10px] sm:text-xs font-bold truncate w-full text-center px-0.5 sm:px-1\">{team.name}</p>\n         {draftFormat === 'AUCTION' && <p className=\"text-[10px] sm:text-xs font-bold text-green-400\">${team.budget}</p>}\n      </div>\n      <AnimatePresence>\n      {displayItems.map((item: any) => {\n        const WrapperComponent = item.player ? motion.button : motion.div;\n        const bgColor = item.player ? positionColor[item.player.position] : 'bg-slate-200/50 dark:bg-gray-800/30';\n        const textColor = item.player ? 'text-white' : 'text-gray-500';\n\n        return (\n          <WrapperComponent\n            key={item.key}\n            onClick={() => item.player && onPlayerSelect(item.player)}\n            {...{\n                layout: true,\n                initial: { opacity: 0, y: -10 },\n                animate: { opacity: 1, y: 0 },\n                exit: { opacity: 0 },\n                transition: { duration: 0.3 },\n            }}\n            className={`h-6 sm:h-8 flex-shrink-0 w-full rounded-md flex items-center justify-center text-[10px] sm:text-xs transition-all duration-300 mobile-touch-target\n              ${item.isCurrent ? 'ring-2 ring-offset-2 ring-offset-black/50 ring-yellow-300 scale-105 shadow-lg shadow-cyan-500/20' : ''}\n              ${item.player ? 'font-semibold hover:ring-2 hover:ring-cyan-400' : 'border border-dashed border-gray-400/30 dark:border-gray-600/50'}\n              ${bgColor} ${textColor}\n            `}\n          >\n            {item.player ? (\n              <div className=\"flex items-center gap-1 sm:gap-1.5 w-full px-1 sm:px-1.5 overflow-hidden\">\n                <span className=\"truncate flex-grow text-left text-shadow-sm\">{item.player.name}</span>\n                 {draftFormat === 'AUCTION' && item.price && (\n                    <span className=\"font-bold text-yellow-300/90 text-[9px] sm:text-xs\">${item.price}</span>\n                )}\n              </div>\n            ) : (\n              <span>{item.display}</span>\n            )}\n          </WrapperComponent>\n        );\n      })}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default TeamColumn;","\n\nimport React from 'react';\nimport type { Team, DraftPick, Player } from '../../types';\nimport TeamColumn from './TeamColumn';\nimport { useAppState } from '../../contexts/AppContext';\n\ninterface DraftBoardProps {\n  teams: Team[];\n  draftPicks: DraftPick[];\n  currentPick?: number; // Optional for auction\n  onPlayerSelect: (player: Player) => void;\n  draftFormat: 'SNAKE' | 'AUCTION';\n  teamOnClockId?: number;\n}\n\nconst DraftBoard: React.FC<DraftBoardProps> = ({ teams, draftPicks, currentPick, onPlayerSelect, draftFormat, teamOnClockId }) => {\n  const { state } = useAppState();\n  const myTeamId = teams.find((t: any) => t.owner.id === state.user.id)?.id;\n  const rounds = draftFormat === 'SNAKE' ? 16 : teams[0]?.roster.length || 16;\n  \n  return (\n    <div \n        className=\"glass-pane flex flex-col bg-[var(--panel-bg)] border-[var(--panel-border)] rounded-lg sm:rounded-2xl h-full shadow-2xl shadow-black/50\"\n    >\n      <div className=\"flex-shrink-0 p-2 sm:p-3 text-center border-b border-[var(--panel-border)]\">\n        <h2 className=\"font-display text-base sm:text-lg md:text-xl font-bold text-[var(--text-primary)] tracking-wider\">LIVE DRAFT BOARD</h2>\n      </div>\n      <div className=\"flex-grow flex overflow-x-auto p-1 sm:p-2\">\n        <div className=\"flex gap-0.5 sm:gap-1\">\n          {/* Round Numbers Column - Hide on very small screens */}\n          {draftFormat === 'SNAKE' && (\n            <div className=\"hidden sm:flex flex-shrink-0 w-6 sm:w-8 flex-col\">\n                <div className=\"h-10 sm:h-12 flex-shrink-0\"></div>\n                {Array.from({ length: rounds }).map((_, i) => (\n                    <div key={i} className=\"h-6 sm:h-8 flex-shrink-0 flex items-center justify-center font-bold text-cyan-300/50 text-xs\">\n                        {i + 1}\n                    </div>\n                ))}\n            </div>\n          )}\n          {teams.map((team: any) => (\n            <TeamColumn\n              key={team.id}\n              team={team}\n              picks={draftPicks.filter((p: any) => p.teamId === team.id)}\n              currentPick={currentPick}\n              onPlayerSelect={onPlayerSelect}\n              draftFormat={draftFormat}\n              isMyTeam={team.id === myTeamId}\n              isOnTheClock={team.id === teamOnClockId}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DraftBoard;","\n\nimport React from 'react';\nimport type { Player } from '../../types';\nimport Modal from '../ui/Modal';\n\ninterface PlayerCompareToolProps {\n    players: Player[];\n    onClose: () => void;\n}\n\nconst PlayerCompareTool: React.FC<PlayerCompareToolProps> = ({ players, onClose }) => {\n\n    const renderStatRow = (label: string, data: (string | number | undefined)[], higherIsBetter = true) => {\n        let bestValue: string | number | undefined;\n        const numericValues = data.filter((v: any) => typeof v === 'number') as number[];\n\n        if (numericValues.length > 1) {\n            bestValue = higherIsBetter ? Math.max(...numericValues) : Math.min(...numericValues);\n        }\n\n        return (\n             <tr className=\"border-t border-white/10\">\n                <td className=\"p-3 font-semibold text-gray-300 text-sm whitespace-nowrap\">{label}</td>\n                {data.map((val, i) => (\n                    <td key={i} className={`p-3 text-center text-sm ${val === bestValue ? 'font-bold text-green-400' : 'text-white'}`}>\n                        {val ?? 'N/A'}\n                    </td>\n                ))}\n            </tr>\n        )\n    };\n\n    return (\n        <Modal onClose={onClose}>\n            <div className=\"glass-pane p-4 sm:p-6 rounded-2xl w-full max-w-5xl max-h-[85vh] flex flex-col\">\n                <h2 className=\"font-display text-2xl font-bold mb-4 text-center\">Player Comparison</h2>\n                <div className=\"overflow-y-auto\">\n                    <table className=\"w-full min-w-max text-sm border-separate border-spacing-0\">\n                        <thead>\n                            <tr>\n                                <th className=\"sticky top-0 text-left p-3 bg-[var(--panel-bg)]/80 backdrop-blur-sm z-10\">Metric</th>\n                                {players.map((p: any) => (\n                                    <th key={p.id} className=\"sticky top-0 text-center p-3 bg-[var(--panel-bg)]/80 backdrop-blur-sm z-10\">\n                                        <p className=\"font-bold text-cyan-300 text-base\">{p.name}</p>\n                                        <p className=\"text-xs text-gray-400\">{p.position} - {p.team}</p>\n                                    </th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {/* Basic Info */}\n                            {renderStatRow(\"Rank\", players.map((p: any) => p.rank), false)}\n                            {renderStatRow(\"Tier\", players.map((p: any) => p?.tier), false)}\n                            {renderStatRow(\"ADP\", players.map((p: any) => p?.adp), false)}\n                            {renderStatRow(\"Bye\", players.map((p: any) => p.bye), false)}\n                            {renderStatRow(\"Age\", players.map((p: any) => p?.age), false)}\n\n                             {/* Separator */}\n                            <tr className=\"h-4\"><td colSpan={players.length + 1}></td></tr>\n                            \n                            {/* Projections */}\n                            {renderStatRow(\"Projection\", players.map((p: any) => p.stats.projection), true)}\n                            {renderStatRow(\"Auction Value\", players.map((p: any) => p.auctionValue), true)}\n                            {renderStatRow(\"Value Over Replacement\", players.map((p: any) => p.stats.vorp), true)}\n                            {renderStatRow(\"Last Year Pts\", players.map((p: any) => p.stats.lastYear), true)}\n\n                            {/* Separator */}\n                            <tr className=\"h-4\"><td colSpan={players.length + 1}></td></tr>\n\n                            {/* Scouting */}\n                             <tr className=\"border-t border-white/10\">\n                                <td className=\"p-3 font-semibold text-gray-300 text-sm align-top\">Bio</td>\n                                {players.map((p, i) => (\n                                    <td key={i} className=\"p-3 text-left text-xs text-gray-300 align-top\">\n                                        {p.bio ?? 'N/A'}\n                                    </td>\n                                ))}\n                            </tr>\n                             <tr className=\"border-t border-white/10\">\n                                <td className=\"p-3 font-semibold text-gray-300 text-sm align-top\">Scouting</td>\n                                {players.map((p, i) => (\n                                    <td key={i} className=\"p-3 text-left text-xs text-gray-300 align-top\">\n                                        {p.scoutingReport?.summary ?? 'N/A'}\n                                    </td>\n                                ))}\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                 <div className=\"mt-6 text-center\">\n                    <button onClick={onClose} className=\"px-6 py-2 bg-cyan-500 text-black font-bold text-sm rounded-md\">\n                        Done\n                    </button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default PlayerCompareTool;\n","\nimport React from 'react';\nimport { Reorder } from 'framer-motion';\nimport type { Player } from '../../types';\nimport { players } from '../../data/players';\nimport { QueueIcon } from '../icons/QueueIcon';\nimport { DragHandleIcon } from '../icons/DragHandleIcon';\nimport { CloseIcon } from '../icons/CloseIcon';\n\ninterface WarRoomPanelProps {\n    queue: number[]; // player IDs\n    leagueId: string;\n    dispatch: React.Dispatch<any>;\n}\n\nconst WarRoomPanel: React.FC<WarRoomPanelProps> = ({ queue, leagueId, dispatch }) => {\n    // We have player IDs, we need the full player objects, maintaining order\n    const queuedPlayers = React.useMemo(() => {\n        const playerMap = new Map(players.map((p: any) => [p.id, p]));\n        return queue.map((id: any) => playerMap.get(id)).filter((p: any) => p !== undefined) as Player[];\n    }, [queue]);\n    \n    const setQueuedPlayers = (newOrder: Player[]) => {\n        const newPlayerIds = newOrder.map((p: any) => p.id);\n        dispatch({\n            type: 'REORDER_QUEUE',\n            payload: { leagueId, playerIds: newPlayerIds }\n        });\n    };\n\n    const handleRemove = (playerId: number) => {\n        dispatch({\n            type: 'REMOVE_FROM_QUEUE',\n            payload: { leagueId, playerId }\n        });\n        const player = players.find((p: any) => p.id === playerId);\n        if (player) {\n            dispatch({ type: 'ADD_NOTIFICATION', payload: `${player.name} removed from queue.` });\n        }\n    };\n    \n    return (\n        <div className=\"h-full flex flex-col text-[var(--text-primary)] p-2\">\n            <div className=\"flex-shrink-0 p-3 text-center border-b border-[var(--panel-border)] mb-2\">\n                <h3 className=\"font-display text-lg font-bold flex items-center justify-center gap-2\">\n                    <QueueIcon />\n                    MY DRAFT QUEUE\n                </h3>\n            </div>\n            <div className=\"flex-grow space-y-1 overflow-y-auto pr-1\">\n                {queuedPlayers.length === 0 ? (\n                    <div className=\"text-center text-sm text-[var(--text-secondary)] p-4 h-full flex items-center justify-center\">\n                        <p>Add players to your queue from the player pool. Drag and drop to reorder.</p>\n                    </div>\n                ) : (\n                    <Reorder.Group axis=\"y\" values={queuedPlayers} onReorder={setQueuedPlayers} className=\"space-y-1\">\n                        {queuedPlayers.map((player: any) => (\n                            <Reorder.Item \n                                key={player.id} \n                                value={player}\n                                className=\"bg-white/5 rounded-md flex justify-between items-center group cursor-grab active:cursor-grabbing\"\n                            >\n                                <div className=\"flex items-center gap-2 overflow-hidden p-2\">\n                                     <DragHandleIcon className=\"h-5 w-5 text-gray-500 flex-shrink-0\" />\n                                    <div className=\"overflow-hidden\">\n                                        <p className=\"font-bold text-sm truncate\">{player.name}</p>\n                                        <p className=\"text-xs text-gray-400\">{player.position} - {player.team}</p>\n                                    </div>\n                                </div>\n                                <div className=\"flex items-center gap-2 p-2\">\n                                    <span className=\"font-bold text-md text-cyan-400\">{player.rank}</span>\n                                    <button onClick={() => handleRemove(player.id)} className=\"text-gray-500 hover:text-red-400 transition-colors opacity-0 group-hover:opacity-100\" aria-label={`Remove ${player.name} from queue`}>\n                                        <CloseIcon className=\"w-4 h-4\" />\n                                    </button>\n                                </div>\n                            </Reorder.Item>\n                        ))}\n                    </Reorder.Group>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default WarRoomPanel;\n","\n\n\nimport React from 'react';\nimport type { Player, Team, GroundingChunk } from '../../types';\nimport { streamOracleResponse } from '../../services/geminiService';\nimport ReactMarkdown from 'react-markdown';\nimport GroundingCitations from '../ui/GroundingCitations';\n\ninterface Message {\n    id: number;\n    sender: 'user' | 'ai';\n    text: string;\n    isLoading?: boolean;\n    groundingChunks?: GroundingChunk[];\n}\n\ninterface ConversationalOracleProps {\n    myTeam: Team | undefined;\n    availablePlayers: Player[];\n}\n\nconst ConversationalOracle: React.FC<ConversationalOracleProps> = ({ myTeam, availablePlayers }) => {\n    const [messages, setMessages] = React.useState<Message[]>([\n        { id: 1, sender: 'ai', text: \"Welcome to the Oracle. Ask me anything about your draft strategy.\" }\n    ]);\n    const [input, setInput] = React.useState('');\n    const [isSending, setIsSending] = React.useState(false);\n    const messagesEndRef = React.useRef<HTMLDivElement>(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    React.useEffect(() => {\n        // A slight delay to allow the new message to render before scrolling\n        setTimeout(scrollToBottom, 100);\n    }, [messages]);\n\n    const handleSend = async () => {\n        if (input.trim() === '' || isSending) return;\n        \n        const userMessage: Message = { id: Date.now(), sender: 'user', text: input };\n        const aiMessagePlaceholder: Message = { id: Date.now() + 1, sender: 'ai', text: '', isLoading: true, groundingChunks: [] };\n\n        const currentMessages = [...messages, userMessage];\n        setMessages([...currentMessages, aiMessagePlaceholder]);\n        setInput('');\n        setIsSending(true);\n\n        try {\n            // Prepare history for the API call, excluding the initial welcome message\n            const historyForApi = currentMessages.slice(1).map((m: any) => ({ sender: m.sender, text: m.text }));\n\n            const stream = await streamOracleResponse(historyForApi, input, myTeam, availablePlayers);\n            let fullText = \"\";\n            let collectedChunks: GroundingChunk[] = [];\n            for await (const chunk of stream) {\n                fullText += chunk.text;\n                const newChunks = chunk.candidates?.[0]?.groundingMetadata?.groundingChunks;\n                if (newChunks) {\n                    collectedChunks.push(...newChunks);\n                }\n                setMessages(prev => prev.map((msg: any) => \n                    msg.id === aiMessagePlaceholder.id ? { ...msg, text: fullText } : msg\n                ));\n            }\n\n            const uniqueChunks = Array.from(new Map(collectedChunks.filter((c: any) => c.web && c.web.uri).map((item: any) => [item.web!.uri!, item])).values());\n\n            setMessages(prev => prev.map((msg: any) => \n                msg.id === aiMessagePlaceholder.id ? { ...msg, isLoading: false, groundingChunks: uniqueChunks } : msg\n            ));\n\n        } catch (error) {\n            console.error(\"Error calling Gemini API:\", error);\n            setMessages(prev => prev.map((msg: any) => \n                msg.id === aiMessagePlaceholder.id \n                ? { ...msg, text: \"My apologies, I'm having trouble connecting to the cosmos. Please try again shortly.\", isLoading: false }\n                : msg\n            ));\n        } finally {\n            setIsSending(false);\n        }\n    };\n    \n    return (\n        <div className=\"h-full flex flex-col text-[var(--text-primary)]\">\n            <div className=\"flex-shrink-0 p-3 text-center border-b border-[var(--panel-border)]\">\n                <h3 className=\"font-display text-lg font-bold\">THE ORACLE</h3>\n            </div>\n            <div className=\"flex-grow p-2 space-y-4 overflow-y-auto\">\n                 {messages.map((msg) => (\n                    <div key={msg.id} className={`flex gap-2.5 ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\n                        {msg.sender === 'ai' && <span className=\"text-lg mt-1 self-start flex-shrink-0\">🔮</span>}\n                        <div className={`max-w-[85%] p-2.5 rounded-lg text-sm leading-relaxed ${msg.sender === 'user' ? 'bg-cyan-600' : 'bg-black/20'}`}>\n                            {msg.isLoading ? (\n                                <div className=\"flex items-center gap-1.5 p-1\">\n                                    <span style={{ animationDelay: '0ms' }} className=\"animate-pulse bg-white/50 rounded-full h-1.5 w-1.5\"></span>\n                                    <span style={{ animationDelay: '150ms' }} className=\"animate-pulse bg-white/50 rounded-full h-1.5 w-1.5\"></span>\n                                    <span style={{ animationDelay: '300ms' }} className=\"animate-pulse bg-white/50 rounded-full h-1.5 w-1.5\"></span>\n                                </div>\n                            ) : (\n                                <>\n                                    <div className=\"prose prose-sm prose-invert prose-p:my-0\">\n                                        <ReactMarkdown>{msg.text}</ReactMarkdown>\n                                    </div>\n                                    {msg.groundingChunks && msg.groundingChunks.length > 0 && (\n                                        <GroundingCitations chunks={msg.groundingChunks} />\n                                    )}\n                                </>\n                            )}\n                        </div>\n                    </div>\n                ))}\n                <div ref={messagesEndRef} />\n            </div>\n             <div className=\"flex-shrink-0 p-2 border-t border-[var(--panel-border)]\">\n                <div className=\"flex gap-2\">\n                    <input\n                        type=\"text\"\n                        placeholder={isSending ? \"The Oracle is thinking...\" : \"Ask the Oracle...\"}\n                        value={input}\n                        onChange={e => setInput(e.target.value)}\n                        onKeyDown={e => e.key === 'Enter' && handleSend()}\n                        disabled={isSending}\n                        className=\"flex-grow bg-black/10 dark:bg-gray-900/50 border border-[var(--panel-border)] rounded-md px-3 py-1.5 text-sm placeholder:text-[var(--text-secondary)] focus:outline-none focus:ring-1 focus:ring-cyan-400 disabled:opacity-50\"\n                    />\n                    <button onClick={handleSend} disabled={isSending || !input} className=\"px-4 py-1.5 bg-cyan-500 text-black font-bold text-sm rounded-md hover:bg-cyan-400 disabled:opacity-50 disabled:cursor-not-allowed\">Ask</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ConversationalOracle;\n","\nimport React from 'react';\nimport type { Team, DraftPick } from '../../types';\n\ninterface TurnTimerProps {\n    currentPick: number;\n    teams: Team[];\n    draftPicks: DraftPick[];\n    isMyTurn: boolean;\n    isPaused: boolean;\n}\n\nconst PICK_TIME_SECONDS = 60;\n\nconst TurnTimer: React.FC<TurnTimerProps> = ({ currentPick, teams, draftPicks, isMyTurn, isPaused }) => {\n    const [timeLeft, setTimeLeft] = React.useState(PICK_TIME_SECONDS);\n    \n    const isDraftComplete = draftPicks.length > 0 && currentPick > draftPicks.length;\n    \n    React.useEffect(() => {\n        if (isDraftComplete) return;\n\n        setTimeLeft(PICK_TIME_SECONDS);\n\n        const interval = setInterval(() => {\n            if (!isPaused) {\n                setTimeLeft(prev => (prev > 0 ? prev - 1 : 0));\n            }\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, [currentPick, isPaused, isDraftComplete]);\n    \n    const teamOnTheClockId = !isDraftComplete ? draftPicks[currentPick - 1]?.teamId : null;\n    const teamOnTheClock = teams.find((t: any) => t.id === teamOnTheClockId);\n    const progress = (timeLeft / PICK_TIME_SECONDS) * 100;\n\n    return (\n        <>\n            {isDraftComplete ? (\n                 <div className=\"glass-pane p-3 rounded-xl flex items-center justify-center bg-gradient-to-r from-green-500 to-cyan-500\">\n                    <p className=\"font-bold text-lg text-white\">DRAFT COMPLETE!</p>\n                </div>\n            ) : (\n                <div className=\"glass-pane p-3 rounded-xl flex items-center justify-between\">\n                    <div>\n                        <p className=\"text-xs text-gray-400\">ON THE CLOCK (PICK {currentPick})</p>\n                        <p className=\"font-bold text-lg text-white\">{teamOnTheClock?.name || '...'}</p>\n                    </div>\n                    <div className=\"flex items-center gap-4\">\n                        {isMyTurn && !isPaused &&\n                            <span className=\"px-3 py-1 bg-green-500/80 text-white font-bold rounded-full text-sm animate-pulse\">\n                                YOUR PICK!\n                            </span>\n                        }\n                        {isPaused &&\n                            <span className=\"px-3 py-1 bg-yellow-500/80 text-white font-bold rounded-full text-sm\">\n                                PAUSED\n                            </span>\n                        }\n                        <div className=\"w-24 h-8 bg-gray-800/50 rounded-full relative overflow-hidden\">\n                            <div \n                                className=\"h-full bg-gradient-to-r from-green-400 to-cyan-400 transition-all duration-1000 linear\"\n                                style={{ width: `${progress}%` }}\n                            ></div>\n                            <span className=\"absolute inset-0 flex items-center justify-center font-mono font-bold text-lg text-white\">\n                                0:{timeLeft.toString().padStart(2, '0')}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default TurnTimer;","\n\n\nimport React from 'react';\nimport type { Player, Team, AuctionState } from '../../types';\nimport Tooltip from '../ui/Tooltip';\nimport { Avatar } from '../ui/Avatar';\n\ninterface AuctionPanelProps {\n    nominatingTeam?: Team;\n    nominatedPlayer: Player | null;\n    currentBid: number;\n    highBidder?: Team | null;\n    timeLeft: number;\n    myBudget: number;\n    onPlaceBid: (bid: number) => void;\n    myTeamId?: number;\n    bidHistory: AuctionState['bidHistory'];\n    teams: Team[];\n}\n\nconst BidHistory: React.FC<{ history: AuctionState['bidHistory'], teams: Team[] }> = ({ history, teams }) => (\n    <div className=\"text-xs text-gray-400 flex flex-wrap-reverse items-center gap-x-3 gap-y-1\">\n        <span>History:</span>\n        {history.slice().reverse().slice(0, 5).map((item, index) => {\n            const team = teams.find((t: any) => t.id === item.teamId);\n            return (\n                 <span key={index} className=\"flex items-center gap-1\">\n                    <Avatar avatar={team?.avatar || '❓'} className=\"w-4 h-4 text-xs rounded-full\" />\n                    <span className=\"font-mono\">${item.bid}</span>\n                </span>\n            );\n        })}\n    </div>\n);\n\nconst AuctionPanel: React.FC<AuctionPanelProps> = ({ nominatingTeam, nominatedPlayer, currentBid, highBidder, timeLeft, myBudget, onPlaceBid, myTeamId, bidHistory, teams }) => {\n    const [myBidString, setMyBidString] = React.useState((currentBid + 1).toString());\n    const isMeHighBidder = !!(myTeamId && highBidder && highBidder.id === myTeamId);\n\n    React.useEffect(() => {\n        const currentMyBidNumber = parseInt(myBidString, 10);\n        if (isNaN(currentMyBidNumber) || currentMyBidNumber <= currentBid) {\n           setMyBidString((currentBid + 1).toString());\n        }\n    }, [currentBid]);\n\n    const handleBidSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        const bidAmount = parseInt(myBidString, 10);\n        if (isNaN(bidAmount) || bidAmount > myBudget || bidAmount <= currentBid) {\n            return;\n        }\n        onPlaceBid(bidAmount);\n    };\n    \n    const bidAmountAsNumber = parseInt(myBidString, 10);\n    const isMyBidTooHigh = !isNaN(bidAmountAsNumber) && bidAmountAsNumber > myBudget;\n    const isBidInvalid = isNaN(bidAmountAsNumber) || bidAmountAsNumber <= currentBid;\n    \n    const progress = (timeLeft / 10) * 100;\n\n    return (\n        <div className=\"glass-pane p-3 rounded-xl flex flex-col gap-2\">\n            <div className=\"flex items-center justify-between\">\n                {nominatedPlayer ? (\n                    <>\n                        <div>\n                            <p className=\"text-xs text-gray-400\">ON THE BLOCK (NOM BY: {nominatingTeam?.name || 'N/A'})</p>\n                            <p className=\"font-bold text-lg text-white\">{nominatedPlayer.name} <span className=\"text-sm font-normal\">({nominatedPlayer.position})</span></p>\n                            <p className=\"text-xs text-gray-400\">High Bid: <span className=\"font-bold text-yellow-300\">${currentBid}</span> ({highBidder?.name || 'N/A'})</p>\n                        </div>\n                        <form onSubmit={handleBidSubmit} className=\"flex items-center gap-4\">\n                            <div className=\"flex items-center gap-2\">\n                                <Tooltip text={isMyBidTooHigh ? \"Bid exceeds your budget!\" : `Your Budget: $${myBudget}`}>\n                                    <input \n                                        type=\"number\" \n                                        value={myBidString}\n                                        onChange={e => setMyBidString(e.target.value)}\n                                        min={currentBid + 1}\n                                        disabled={isMeHighBidder}\n                                        className={`w-20 bg-black/20 text-white font-bold text-center p-2 rounded-md border  ${isMyBidTooHigh ? 'border-red-500' : 'border-cyan-400/50'} disabled:opacity-60`}\n                                    />\n                                </Tooltip>\n                                <button type=\"submit\" className={`px-6 py-2 text-white font-bold rounded-md transition-colors ${isMeHighBidder ? 'bg-yellow-600' : 'bg-green-500 hover:bg-green-400'} disabled:opacity-60 disabled:cursor-not-allowed`} disabled={isMyBidTooHigh || isBidInvalid || isMeHighBidder}>\n                                    {isMeHighBidder ? 'LEADING' : 'BID'}\n                                </button>\n                            </div>\n                            <div className=\"w-24 h-8 bg-gray-800/50 rounded-full relative overflow-hidden\">\n                                <div className=\"h-full bg-gradient-to-r from-red-500 to-orange-500 transition-all duration-1000 linear\" style={{ width: `${progress}%` }}></div>\n                                <span className=\"absolute inset-0 flex items-center justify-center font-mono font-bold text-lg text-white\">\n                                    {timeLeft}\n                                </span>\n                            </div>\n                        </form>\n                    </>\n                ) : (\n                    <div className=\"w-full flex justify-center items-center\">\n                        <p className=\"text-sm text-gray-400\">{nominatingTeam?.name || '...'} is nominating...</p>\n                    </div>\n                )}\n            </div>\n            {nominatedPlayer && bidHistory.length > 0 && <BidHistory history={bidHistory} teams={teams} />}\n        </div>\n    );\n};\n\nexport default AuctionPanel;","\nimport React from 'react';\nimport type { DraftPick, Team } from '../../types';\nimport { players } from '../../data/players';\n\ninterface LiveDraftLogProps {\n  draftPicks: DraftPick[];\n  teams: Team[];\n}\n\nconst LiveDraftLog: React.FC<LiveDraftLogProps> = ({ draftPicks, teams }) => {\n    const completedPicks = draftPicks.filter((p: any) => p.playerId).sort((a, b) => b.overall - a.overall);\n\n    return (\n        <div className=\"h-full flex flex-col text-[var(--text-primary)] p-2\">\n             <div className=\"flex-shrink-0 p-3 text-center border-b border-[var(--panel-border)] mb-2\">\n                <h3 className=\"font-display text-lg font-bold\">DRAFT LOG</h3>\n            </div>\n            <div className=\"flex-grow space-y-2 overflow-y-auto text-xs p-1\">\n                {completedPicks.length === 0 && (\n                    <p className=\"text-center text-sm text-[var(--text-secondary)] p-4\">The draft is about to begin...</p>\n                )}\n                {completedPicks.map((pick: any) => {\n                    const team = teams.find((t: any) => t.id === pick.teamId);\n                    const player = players.find((p: any) => p.id === pick.playerId);\n\n                    return (\n                        <div key={pick.overall} className=\"p-2 bg-white/5 rounded-md\">\n                            <span className=\"text-gray-500 mr-2\">\n                                {pick.round}.{pick.pickInRound.toString().padStart(2, '0')}\n                            </span>\n                            <span>\n                                <span className=\"font-semibold text-cyan-400\">{team?.name || 'Unknown Team'}</span> selected <span className=\"font-bold text-white\">{player?.name || 'Unknown Player'}</span> ({player?.position})\n                            </span>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default LiveDraftLog;","\n\nexport const showNotification = (title: string, options?: NotificationOptions) => {\n    // Check if notifications are supported and permission is granted\n    if ('Notification' in window && Notification.permission === 'granted') {\n        new Notification(title, {\n            ...options,\n            icon: '/favicon.svg',\n            body: options?.body || 'Astral Draft',\n            tag: title, // Use title as tag to prevent multiple notifications for same event\n        });\n    }\n}\n\nexport const requestNotificationPermission = async (dispatch: React.Dispatch<any>) => {\n    if ('Notification' in window) {\n        const permission = await Notification.requestPermission();\n        dispatch({ type: 'SET_NOTIFICATION_PERMISSION', payload: permission });\n        if (permission === 'granted') {\n            showNotification('Notifications Enabled!', { body: 'You will now receive alerts from Astral Draft.' });\n        }\n    } else {\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Browser does not support notifications.', type: 'SYSTEM' } });\n    }\n}","\nimport React from 'react';\nimport type { League, Player, PlayerPosition, User } from '../types';\nimport { players } from '../data/players';\nimport { getAiDraftPick } from '../services/geminiService';\nimport useSound from './useSound';\nimport { useAppState } from '../contexts/AppContext';\nimport { showNotification } from '../utils/notifications';\n\nconst DRAFT_SPEED_MS = 3000; // Increased speed slightly to account for API latency\nconst USER_PICK_TIME_LIMIT_MS = 60000;\n\nexport const useRealtimeDraft = (\n    league: League | undefined, \n    isPaused: boolean,\n    user: User, \n    dispatch: React.Dispatch<any>\n) => {\n    const { state } = useAppState();\n    const playDraftSound = useSound('draft', 0.5);\n    const playYourTurnSound = useSound('yourTurn', 0.3);\n\n    const teams = league?.teams ?? [];\n    const draftPicks = league?.draftPicks ?? [];\n    const status = league?.status;\n\n    const currentPick = draftPicks.filter(p => p.playerId).length + 1;\n    const availablePlayers = players.filter(p => !draftPicks.some(dp => dp.playerId === p.id));\n    const myTeamId = teams.find(t => t.owner.id === user.id)?.id;\n    const teamOnClockId = league ? league.draftPicks[currentPick - 1]?.teamId : null;\n    const isMyTurn = myTeamId === teamOnClockId;\n    \n    // Play sound on user's turn\n    React.useEffect(() => {\n        if (!league || isPaused || status !== 'DRAFTING') return;\n        if (isMyTurn) {\n            playYourTurnSound();\n            showNotification(\"It's your turn to draft!\", {\n                body: `You are on the clock in ${league.name}.`,\n                tag: `turn-notification-${league.id}`\n            });\n        }\n    }, [isMyTurn, user.id, league, isPaused, status, playYourTurnSound]);\n\n    React.useEffect(() => {\n        if (!league || status !== 'DRAFTING' || isPaused || currentPick > league.draftPicks.length) {\n            return;\n        }\n\n        const teamOnTheClock = league.teams.find(t => t.id === teamOnClockId);\n\n        if (!teamOnTheClock) return;\n\n        // AI Pick Logic\n        if (teamOnTheClock.owner.id.startsWith('ai_')) {\n            const pickTimer = setTimeout(async () => {\n                const currentPicksInHook = league.draftPicks.filter(p => p.playerId).length;\n                \n                if ((currentPicksInHook + 1) !== currentPick) return;\n\n                const availablePlayersNow = players.filter(p => !league.draftPicks.some(dp => dp.playerId === p.id));\n                const recommendedPlayerName = await getAiDraftPick(teamOnTheClock, availablePlayersNow);\n                let playerToDraft = recommendedPlayerName ? availablePlayersNow.find(p => p.name === recommendedPlayerName) : undefined;\n\n                if (!playerToDraft) {\n                    console.warn(\"Gemini pick failed or was invalid. Using fallback logic.\");\n                    const rosterCount = (pos: Player['position']) => teamOnTheClock.roster.filter(rp => rp.position === pos).length;\n                    const ROSTER_LIMITS: { [key in PlayerPosition]: number } = { QB: 2, RB: 5, WR: 6, TE: 2, K: 1, DST: 1 };\n                    const neededPlayers = availablePlayersNow.filter(p => rosterCount(p.position) < ROSTER_LIMITS[p.position]);\n                    playerToDraft = neededPlayers[0] || availablePlayersNow[0];\n                }\n\n                if (playerToDraft) {\n                    dispatch({ type: 'DRAFT_PLAYER', payload: { teamId: teamOnTheClock.id, player: playerToDraft } });\n                    dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `${teamOnTheClock.name} drafted ${playerToDraft.name}`, type: 'DRAFT' }});\n                    playDraftSound();\n                }\n            }, DRAFT_SPEED_MS);\n\n            return () => clearTimeout(pickTimer);\n        }\n        \n        // User Auto-Draft Logic\n        if (isMyTurn) {\n             const autoDraftTimer = setTimeout(() => {\n                const myQueue = state.playerQueues[league.id] || [];\n                const availablePlayersNow = players.filter(p => !league.draftPicks.some(dp => dp.playerId === p.id));\n                const availablePlayerIds = new Set(availablePlayersNow.map(p => p.id));\n                const playerToDraftFromQueue = myQueue.map(pid => players.find(p => p.id === pid)).find(p => p && availablePlayerIds.has(p.id));\n\n                if (playerToDraftFromQueue) {\n                    dispatch({ type: 'DRAFT_PLAYER', payload: { teamId: myTeamId, player: playerToDraftFromQueue } });\n                    dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `Auto-drafted ${playerToDraftFromQueue.name} from your queue.`, type: 'SYSTEM' }});\n                    playDraftSound();\n                } else if(availablePlayersNow.length > 0) {\n                     // Fallback: draft best available player if queue is empty/exhausted\n                    dispatch({ type: 'DRAFT_PLAYER', payload: { teamId: myTeamId, player: availablePlayersNow[0] } });\n                    dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `Auto-drafted ${availablePlayersNow[0].name} (Best Available).`, type: 'SYSTEM' }});\n                    playDraftSound();\n                }\n            }, USER_PICK_TIME_LIMIT_MS);\n            \n            return () => clearTimeout(autoDraftTimer);\n        }\n\n    }, [currentPick, league, status, isPaused, dispatch, playDraftSound, isMyTurn, myTeamId, state.playerQueues, teamOnClockId]);\n\n    const draftPlayer = React.useCallback((player: Player) => {\n        if (!league) return;\n        \n        const internalCurrentPick = league.draftPicks.filter(p => p.playerId).length + 1;\n        const currentTeamId = league.draftPicks[internalCurrentPick - 1]?.teamId;\n\n        if (myTeamId === currentTeamId) {\n            dispatch({ type: 'DRAFT_PLAYER', payload: { teamId: myTeamId, player } });\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `You drafted ${player.name}!`, type: 'DRAFT' }});\n            playDraftSound();\n        } else {\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: \"It's not your turn!\", type: 'SYSTEM' } });\n        }\n    }, [league, myTeamId, dispatch, playDraftSound]);\n\n    const latestPickOverall = draftPicks.filter(p => p.playerId).length;\n    const latestPick = draftPicks.find(p => p.overall === latestPickOverall);\n    const latestPlayer = latestPick ? players.find(p => p.id === latestPick.playerId) : null;\n\n    return {\n        teams,\n        draftPicks,\n        availablePlayers,\n        currentPick,\n        latestPick: latestPlayer && latestPick ? { ...latestPick, player: latestPlayer } : null,\n        draftPlayer\n    };\n};\n","\n\n\nimport React from 'react';\nimport type { League, Team, Player, User, AuctionState } from '../types';\nimport { getAiNomination, getAiBid } from '../services/geminiService';\nimport { players } from '../data/players';\nimport useSound from './useSound';\n\nconst AUCTION_TIMER_SECONDS = 10;\nconst AI_ACTION_DELAY_MS = 2000;\n\nexport const useRealtimeAuction = (\n    league: League | undefined,\n    isPaused: boolean,\n    user: User,\n    dispatch: React.Dispatch<any>\n) => {\n    const playNominationSound = useSound('yourTurn', 0.4);\n    const playBidSound = useSound('bid', 0.5);\n    const playSoldSound = useSound('sold', 0.6);\n\n    const auctionState = league?.auctionState;\n    const teams = league?.teams ?? [];\n    const draftedPlayerIds = new Set(league?.draftPicks.map(p => p.playerId));\n    const availablePlayers = players.filter(p => !draftedPlayerIds.has(p.id));\n    \n    // Timer Logic\n    React.useEffect(() => {\n        if (isPaused || !league || !auctionState || !auctionState.nominatedPlayerId || auctionState.lastBidTimestamp === 0) {\n            return;\n        }\n\n        const interval = setInterval(() => {\n            const timeSinceLastBid = (Date.now() - auctionState.lastBidTimestamp) / 1000;\n            if (timeSinceLastBid >= AUCTION_TIMER_SECONDS) {\n                const soldPlayer = players.find(p => p.id === auctionState.nominatedPlayerId)\n                dispatch({ type: 'PROCESS_AUCTION_SALE', payload: { leagueId: league.id } });\n                dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `${soldPlayer?.name} sold!`, type: 'DRAFT' }});\n                playSoldSound();\n            }\n        }, 1000);\n\n        return () => clearInterval(interval);\n\n    }, [auctionState, isPaused, league, dispatch, playSoldSound]);\n\n    // AI Logic (Nomination and Bidding)\n    React.useEffect(() => {\n        if (isPaused || !league || !auctionState || league.status !== 'DRAFTING') {\n            return;\n        }\n\n        const nominatingTeam = teams.find(t => t.id === auctionState.nominatingTeamId);\n        \n        // AI Nomination\n        if (!auctionState.nominatedPlayerId && nominatingTeam?.owner.id.startsWith('ai_')) {\n            const timer = setTimeout(async () => {\n                const playerName = await getAiNomination(nominatingTeam, availablePlayers);\n                const playerToNominate = availablePlayers.find(p => p.name === playerName) || availablePlayers[Math.floor(Math.random() * 20)];\n                if (playerToNominate) {\n                    dispatch({ type: 'AUCTION_NOMINATE', payload: { leagueId: league.id, playerId: playerToNominate.id, teamId: nominatingTeam.id } });\n                    dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `${nominatingTeam.name} nominates ${playerToNominate.name}.`, type: 'DRAFT' } });\n                    playNominationSound();\n                }\n            }, AI_ACTION_DELAY_MS);\n            return () => clearTimeout(timer);\n        }\n\n        // AI Bidding\n        if (auctionState.nominatedPlayerId) {\n            const nominatedPlayer = players.find(p => p.id === auctionState.nominatedPlayerId)!;\n            \n            const aiTeamsToAct = teams.filter(t => t.owner.id.startsWith('ai_') && t.id !== auctionState.highBidderId && t.budget > auctionState.currentBid);\n\n            aiTeamsToAct.forEach(aiTeam => {\n                const bidTimer = setTimeout(async () => {\n                    const latestAuctionState = league?.auctionState; // Get latest state\n                    if (!latestAuctionState || latestAuctionState.highBidderId === aiTeam.id || isPaused) return;\n\n                    const newBid = await getAiBid(aiTeam, nominatedPlayer, latestAuctionState.currentBid);\n                    if (newBid) {\n                        dispatch({ type: 'AUCTION_BID', payload: { leagueId: league.id, teamId: aiTeam.id, bid: newBid } });\n                        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `${aiTeam.name} bids $${newBid}.`, type: 'DRAFT' }});\n                        playBidSound();\n                    }\n                }, AI_ACTION_DELAY_MS + Math.random() * 2000); // Stagger AI bids\n            });\n        }\n\n    }, [auctionState, isPaused, league, availablePlayers, dispatch, playBidSound, playNominationSound]);\n    \n    const myTeam = teams.find(t => t.owner.id === user.id);\n    const nominatedPlayer = auctionState?.nominatedPlayerId ? players.find(p => p.id === auctionState.nominatedPlayerId) : null;\n    const highBidderTeam = auctionState?.highBidderId ? teams.find(t => t.id === auctionState.highBidderId) : null;\n    const nominatingTeam = auctionState ? teams.find(t => t.id === auctionState.nominatingTeamId) : null;\n    \n    const timeLeft = auctionState?.lastBidTimestamp ? Math.max(0, AUCTION_TIMER_SECONDS - Math.floor((Date.now() - auctionState.lastBidTimestamp) / 1000)) : 0;\n    \n    const isMyNominationTurn = myTeam && auctionState?.nominatingTeamId === myTeam.id;\n\n    const placeBid = (bid: number) => {\n        if (!league || !myTeam) return;\n        dispatch({ type: 'AUCTION_BID', payload: { leagueId: league.id, teamId: myTeam.id, bid } });\n        playBidSound();\n    };\n\n    const nominatePlayer = (player: Player) => {\n        if (!league || !myTeam) return;\n        dispatch({ type: 'AUCTION_NOMINATE', payload: { leagueId: league.id, playerId: player.id, teamId: myTeam.id } });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `You nominated ${player.name}.`, type: 'DRAFT' }});\n        playNominationSound();\n    };\n    \n    return {\n        teams,\n        availablePlayers,\n        nominatedPlayer,\n        nominatingTeam,\n        currentBid: auctionState?.currentBid ?? 0,\n        highBidderTeam,\n        timeLeft,\n        myTeam,\n        bidHistory: auctionState?.bidHistory ?? [],\n        isMyNominationTurn: !!isMyNominationTurn && !auctionState?.nominatedPlayerId,\n        isBiddingActive: !!auctionState?.nominatedPlayerId,\n        placeBid,\n        nominatePlayer,\n    };\n};","\nimport React from 'react';\n\nexport const PartyPopperIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-8 w-8 text-yellow-300\"}>\n        <path d=\"M5.8 11.3 2 22l10.7-3.8c.2-.1.3-.2.4-.4L17 14l-6-6-3.8 3.8c-.2.2-.3.3-.4.4Z\"/>\n        <path d=\"m14 6 6-6\"/>\n        <path d=\"m6 14-4 4\"/>\n        <path d=\"m18 12 4 4\"/>\n        <path d=\"M12 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z\"/>\n    </svg>\n);\n","import React from 'react';\n\nconst confettiCount = 150;\nconst gravity = 0.98;\nconst terminalVelocity = 9;\nconst drag = 0.075;\n\ninterface ConfettiParticle {\n    x: number;\n    y: number;\n    w: number;\n    h: number;\n    color: string;\n    vx: number;\n    vy: number;\n    angle: number;\n    rotation: number;\n    tilt: number;\n    tiltAngle: number;\n    tiltAngleIncrement: number;\n}\n\nexport const useConfetti = () => {\n    const [canvas, setCanvas] = React.useState<HTMLCanvasElement | null>(null);\n\n    React.useEffect(() => {\n        const c = document.getElementById('confetti-canvas') as HTMLCanvasElement | null;\n        if (c) setCanvas(c);\n    }, []);\n\n    const triggerConfetti = React.useCallback(() => {\n        if (!canvas) return;\n\n        const ctx = canvas.getContext('2d');\n        if (!ctx) return;\n        \n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\n        let particles: ConfettiParticle[] = [];\n        const colors = ['#06b6d4', '#22c55e', '#a855f7', '#facc15', '#ec4899'];\n\n        const createParticles = () => {\n            particles = [];\n            for (let i = 0; i < confettiCount; i++) {\n                particles.push({\n                    x: canvas.width * 0.5,\n                    y: canvas.height * 0.5,\n                    w: Math.random() * 8 + 5,\n                    h: Math.random() * 5 + 5,\n                    color: colors[Math.floor(Math.random() * colors.length)],\n                    vx: (Math.random() - 0.5) * 15,\n                    vy: (Math.random() - 0.5) * 15,\n                    angle: Math.random() * Math.PI * 2,\n                    rotation: Math.random() * 10,\n                    tilt: Math.random() * 10 - 10,\n                    tiltAngle: 0,\n                    tiltAngleIncrement: Math.random() * 0.07 + 0.05\n                });\n            }\n        };\n\n        const update = () => {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            \n            particles.forEach((p, i) => {\n                p.vx *= (1 - drag);\n                p.vy += gravity;\n                p.vy = Math.min(p.vy, terminalVelocity);\n                \n                p.x += p.vx;\n                p.y += p.vy;\n\n                p.tiltAngle += p.tiltAngleIncrement;\n                p.tilt = Math.sin(p.tiltAngle) * 15;\n                \n                ctx.save();\n                ctx.fillStyle = p.color;\n                ctx.translate(p.x + p.w / 2, p.y + p.h / 2);\n                ctx.rotate(p.rotation);\n                ctx.globalAlpha = 1 - (p.y / canvas.height);\n                ctx.fillRect(-p.w / 2, -p.h / 2, p.w, p.h);\n                ctx.restore();\n\n                if (p.y > canvas.height) {\n                    particles.splice(i, 1);\n                }\n            });\n\n            if (particles.length > 0) {\n                requestAnimationFrame(update);\n            } else {\n                 ctx.clearRect(0, 0, canvas.width, canvas.height);\n            }\n        };\n        \n        createParticles();\n        requestAnimationFrame(update);\n\n    }, [canvas]);\n    \n    return triggerConfetti;\n};\n","\n\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport type { League } from '../../types';\nimport { PartyPopperIcon } from '../icons/PartyPopperIcon';\nimport { useConfetti } from '../../utils/confetti';\n\ninterface DraftCompleteOverlayProps {\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nconst DraftCompleteOverlay: React.FC<DraftCompleteOverlayProps> = ({ league, dispatch }) => {\n    const triggerConfetti = useConfetti();\n    \n    React.useEffect(() => {\n        triggerConfetti();\n    }, [triggerConfetti]);\n\n\n    const handleViewAnalytics = () => {\n        dispatch({ type: 'SET_VIEW', payload: 'ANALYTICS_HUB' });\n    };\n\n    const handleViewTeam = () => {\n        dispatch({ type: 'SET_VIEW', payload: 'TEAM_HUB' });\n    };\n\n    return (\n        <motion.div\n            className=\"absolute inset-0 z-50 flex flex-col items-center justify-center bg-gray-900/80 backdrop-blur-sm\"\n            {...{\n                initial: { opacity: 0 },\n                animate: { opacity: 1 },\n                transition: { duration: 0.5 },\n            }}\n        >\n            <motion.div\n                className=\"text-center p-8 rounded-2xl glass-pane max-w-lg\"\n                {...{\n                    initial: { opacity: 0, y: -20, scale: 0.95 },\n                    animate: { opacity: 1, y: 0, scale: 1 },\n                    transition: { type: 'spring', delay: 0.3, duration: 0.5 },\n                }}\n            >\n                <PartyPopperIcon className=\"h-16 w-16 text-yellow-300 mx-auto mb-4\" />\n                <h1 className=\"font-display text-4xl font-bold text-white mb-2\">Draft Complete!</h1>\n                <p className=\"text-gray-300 mb-6\">Congratulations, your draft for \"{league.name}\" has concluded. Now it's time to see how you did.</p>\n                <div className=\"flex justify-center gap-4\">\n                    <button\n                        onClick={handleViewAnalytics}\n                        className=\"px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-500 text-white font-bold rounded-lg shadow-lg hover:scale-105 transition-transform\"\n                    >\n                        View Draft Analytics\n                    </button>\n                    <button\n                        onClick={handleViewTeam}\n                        className=\"px-6 py-3 bg-gradient-to-r from-green-500 to-cyan-500 text-white font-bold rounded-lg shadow-lg hover:scale-105 transition-transform\"\n                    >\n                        Go to My Team Hub\n                    </button>\n                </div>\n            </motion.div>\n        </motion.div>\n    );\n};\n\nexport default DraftCompleteOverlay;","\nimport React from 'react';\nimport type { Team, PlayerPosition } from '../../types';\nimport { UserIcon } from '../icons/UserIcon';\n\ninterface MyRosterPanelProps {\n    team: Team | undefined;\n}\n\nconst positionOrder: PlayerPosition[] = ['QB', 'RB', 'WR', 'TE', 'K', 'DST'];\n\nconst MyRosterPanel: React.FC<MyRosterPanelProps> = ({ team }) => {\n    if (!team) {\n        return (\n            <div className=\"h-full flex flex-col items-center justify-center text-center p-4\">\n                <p className=\"text-sm text-[var(--text-secondary)]\">Your team information is not available.</p>\n            </div>\n        );\n    }\n\n    const rosterByPosition = positionOrder.map((pos: any) => ({\n        position: pos,\n        players: team.roster.filter((p: any) => p.position === pos)\n    }));\n\n    return (\n        <div className=\"h-full flex flex-col text-[var(--text-primary)] p-1.5 sm:p-2\">\n            <div className=\"flex-shrink-0 p-2 sm:p-3 text-center border-b border-[var(--panel-border)] mb-2\">\n                <h3 className=\"font-display text-base sm:text-lg font-bold flex items-center justify-center gap-2\">\n                    <UserIcon />\n                    <span className=\"hidden sm:inline\">MY ROSTER</span>\n                    <span className=\"sm:hidden\">ROSTER</span>\n                </h3>\n            </div>\n            <div className=\"flex-grow space-y-2 sm:space-y-3 overflow-y-auto pr-1\">\n                {rosterByPosition.map(({ position, players }) => (\n                    <div key={position}>\n                        <h4 className=\"font-bold text-xs sm:text-sm text-cyan-300 px-1 mb-1\">{position} ({players.length})</h4>\n                        <div className=\"space-y-0.5 sm:space-y-1\">\n                            {players.length > 0 ? (\n                                players.map((player: any) => (\n                                    <div key={player.id} className=\"text-[10px] sm:text-xs p-1 sm:p-1.5 bg-white/5 rounded-md\">\n                                        {player.name}\n                                    </div>\n                                ))\n                            ) : (\n                                <div className=\"text-[10px] sm:text-xs p-1 sm:p-1.5 text-gray-500 italic\">No players drafted</div>\n                            )}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default MyRosterPanel;","\n\n\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport type { Player } from '../../types';\nimport { Avatar } from '../ui/Avatar';\nimport { CloseIcon } from '../icons/CloseIcon';\nimport { CompareIcon } from '../icons/CompareIcon';\nimport { useAppState } from '../../contexts/AppContext';\n\ninterface CompareTrayProps {\n    players: Player[];\n    onClear: () => void;\n    onCompare: () => void;\n}\n\nconst CompareTray: React.FC<CompareTrayProps> = ({ players, onClear, onCompare }) => {\n    const { dispatch } = useAppState();\n\n    const handleRemovePlayer = (e: React.MouseEvent, player: Player) => {\n        e.stopPropagation();\n        // This is a bit of a hack. Ideally the toggle function would be passed down.\n        // For now, we'll just show a notification to guide the user.\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `Click ${player.name} in the list to remove from comparison.`, type: 'SYSTEM' } });\n    }\n\n    return (\n        <AnimatePresence>\n            {players.length > 0 && (\n                <motion.div\n                    className=\"fixed bottom-0 left-1/2 -translate-x-1/2 w-full max-w-4xl z-30\"\n                    {...{\n                        layout: true,\n                        initial: { y: 100, opacity: 0 },\n                        animate: { y: 0, opacity: 1 },\n                        exit: { y: 100, opacity: 0 },\n                        transition: { type: 'spring', stiffness: 200, damping: 30 },\n                    }}\n                >\n                    <div className=\"mx-4 mb-4 glass-pane p-2 rounded-xl flex items-center justify-between gap-4\">\n                        <div className=\"flex items-center gap-2\">\n                             {players.map((player: any) => (\n                                <div key={player.id} className=\"relative group\">\n                                    <Avatar avatar={player.astralIntelligence?.spiritAnimal?.split(',')[0] || '🏈'} className=\"w-12 h-12 text-2xl rounded-lg\" alt={player.name} />\n                                    <button onClick={(e: any) => handleRemovePlayer(e, player)} className=\"absolute -top-1 -right-1 p-0.5 bg-red-500 rounded-full text-white opacity-0 group-hover:opacity-100 transition-opacity\">\n                                        <CloseIcon className=\"w-3 h-3\" />\n                                    </button>\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                            <button onClick={onClear} className=\"px-3 py-1.5 text-xs font-bold bg-red-500/20 text-red-300 rounded-md hover:bg-red-500/30\">Clear</button>\n                            <button onClick={onCompare} disabled={players.length < 2} className=\"px-4 py-2 flex items-center gap-2 text-sm font-bold bg-cyan-500 text-black rounded-md hover:bg-cyan-400 disabled:opacity-50\">\n                                <CompareIcon />\n                                Compare ({players.length})\n                            </button>\n                        </div>\n                    </div>\n                </motion.div>\n            )}\n        </AnimatePresence>\n    );\n};\n\nexport default CompareTray;\n","import React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport type { League } from '../types';\nimport { players } from '../data/players';\nimport { generateDraftPickCommentary } from '../services/geminiService';\n\nexport const useDraftCommentary = (league: League | undefined) => {\n    const { dispatch } = useAppState();\n    const picksSoFar = league?.draftPicks.filter(p => p.playerId).length || 0;\n    const prevPicksCount = React.useRef(picksSoFar);\n    \n    React.useEffect(() => {\n        const currentPicksCount = league?.draftPicks.filter(p => p.playerId).length || 0;\n\n        if (league && currentPicksCount > prevPicksCount.current) {\n            const latestPick = league.draftPicks.filter(p => p.playerId).sort((a,b) => b.overall - a.overall)[0];\n            if (!latestPick) return;\n\n            const player = players.find(p => p.id === latestPick.playerId);\n            const team = league.teams.find(t => t.id === latestPick.teamId);\n\n            if (player && team) {\n                generateDraftPickCommentary(player, team, latestPick.overall, latestPick.round, league).then(commentaryText => {\n                    if (commentaryText) {\n                        dispatch({\n                            type: 'ADD_DRAFT_COMMENTARY',\n                            payload: {\n                                leagueId: league.id,\n                                commentary: {\n                                    pickNumber: latestPick.overall,\n                                    text: commentaryText,\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n        }\n        prevPicksCount.current = currentPicksCount;\n\n    }, [picksSoFar, league, dispatch]);\n};\n","import React from 'react';\n\nexport const BotMessageSquareIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <path d=\"M12 6V2H8\" />\n        <path d=\"m8 18-4 4V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2Z\" />\n        <path d=\"M2 12h2\" />\n        <path d=\"M9 12h2\" />\n        <path d=\"M16 12h2\" />\n    </svg>\n);\n","\nimport React from 'react';\nimport { useLeague } from '../../hooks/useLeague';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { BotMessageSquareIcon } from '../icons/BotMessageSquareIcon';\n\nconst AiCoPilotPanel: React.FC = () => {\n    const { league } = useLeague();\n    const commentary = league?.draftCommentary || [];\n    const scrollRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (scrollRef.current) {\n            scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n        }\n    }, [commentary]);\n\n    return (\n        <div className=\"h-full flex flex-col text-[var(--text-primary)]\">\n            <div className=\"flex-shrink-0 p-3 text-center border-b border-[var(--panel-border)]\">\n                <h3 className=\"font-display text-lg font-bold flex items-center justify-center gap-2\">\n                    <BotMessageSquareIcon /> DRAFT CO-PILOT\n                </h3>\n            </div>\n            <div ref={scrollRef} className=\"flex-grow p-2 space-y-3 overflow-y-auto\">\n                <AnimatePresence>\n                    {commentary.map((item, index) => (\n                        <motion.div\n                            key={item.pickNumber}\n                            className=\"flex items-start gap-2 text-sm\"\n                            {...{\n                                initial: { opacity: 0, y: 10 },\n                                animate: { opacity: 1, y: 0 },\n                                transition: { delay: index > commentary.length - 2 ? 0.2 : 0 },\n                            }}\n                        >\n                            <span className=\"font-mono text-xs text-gray-500 pt-0.5 w-8 text-center\">{item.pickNumber}</span>\n                            <p className=\"flex-1 bg-black/10 p-2 rounded-md\">{item.text}</p>\n                        </motion.div>\n                    ))}\n                </AnimatePresence>\n                {commentary.length === 0 && (\n                    <div className=\"text-center text-xs text-gray-400 p-4 h-full flex items-center justify-center\">\n                        <p>The Oracle is standing by... Commentary will appear here as picks are made.</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default AiCoPilotPanel;\n","\nimport React from 'react';\nimport { Panel, PanelGroup, PanelResizeHandle } from 'react-resizable-panels';\nimport { useAppState } from '../contexts/AppContext';\n\nimport PlayerPool from '../components/player/PlayerPool';\nimport DraftBoard from '../components/draft/DraftBoard';\nimport PlayerDetailModal from '../components/player/PlayerDetailModal';\nimport PlayerCompareTool from '../components/analytics/PlayerCompareTool';\nimport { Player, League, User, AppState } from '../types';\nimport { AnimatePresence } from 'framer-motion';\nimport ChatPanel from '../components/chat/ChatPanel';\nimport WarRoomPanel from '../components/strategy/WarRoomPanel';\nimport ConversationalOracle from '../components/ai/ConversationalOracle';\nimport TurnTimer from '../components/draft/TurnTimer';\nimport AuctionPanel from '../components/draft/AuctionPanel';\nimport LiveDraftLog from '../components/draft/LiveDraftLog';\nimport { useRealtimeDraft } from '../hooks/useRealtimeDraft';\nimport { useRealtimeAuction } from '../hooks/useRealtimeAuction';\nimport DraftCompleteOverlay from '../components/draft/DraftCompleteOverlay';\nimport MyRosterPanel from '../components/draft/MyRosterPanel';\nimport { useLeague } from '../hooks/useLeague';\nimport CompareTray from '../components/analytics/CompareTray';\nimport { useDraftCommentary } from '../hooks/useDraftCommentary';\nimport AiCoPilotPanel from '../components/draft/AiCoPilotPanel';\nimport { useMediaQuery } from '../hooks/useMediaQuery';\n\ninterface DraftRoomContainerProps {\n    league: League;\n    isPaused: boolean;\n    user: User;\n    dispatch: React.Dispatch<any>;\n    playerNotes: AppState['playerNotes'];\n    playerQueues: AppState['playerQueues'];\n}\n\nconst DraftRoomContainer: React.FC<DraftRoomContainerProps> = ({ league, isPaused, user, dispatch, playerNotes, playerQueues }) => {\n    const [playersToCompare, setPlayersToCompare] = React.useState<Player[]>([]);\n    const [isCompareModalOpen, setIsCompareModalOpen] = React.useState(false);\n    const [activeSideTab, setActiveSideTab] = React.useState('co-pilot');\n    const isMobile = useMediaQuery('(max-width: 768px)');\n    \n    const snakeDraftState = useRealtimeDraft(league, isPaused, user, dispatch);\n    const auctionDraftState = useRealtimeAuction(league, isPaused, user, dispatch);\n    useDraftCommentary(league);\n    \n    const { myTeam } = useLeague();\n    const isAuction = league.settings.draftFormat === 'AUCTION';\n    \n    const draft = isAuction ? auctionDraftState : snakeDraftState;\n    const teamOnClockId = !isAuction && snakeDraftState.currentPick > 0 && league.draftPicks.length >= snakeDraftState.currentPick ? league.draftPicks[snakeDraftState.currentPick - 1]?.teamId : undefined;\n    const isMyTurnForSnake = !!(myTeam && myTeam.id === teamOnClockId && !isPaused);\n\n    const myQueue = (league && playerQueues[league.id]) || [];\n\n    const handlePlayerSelect = (player: Player) => {\n        dispatch({ type: 'SET_PLAYER_DETAIL', payload: { player, initialTab: 'overview' } });\n    };\n\n    const handleOpenNotes = (player: Player) => {\n        dispatch({ type: 'SET_PLAYER_DETAIL', payload: { player, initialTab: 'notes' } });\n    };\n\n    const handleToggleCompare = (player: Player) => {\n        setPlayersToCompare(prev => {\n            const isAlreadySelected = prev.some(p => p.id === player.id);\n            if (isAlreadySelected) {\n                return prev.filter(p => p.id !== player.id);\n            }\n            if (prev.length >= 4) {\n                dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Comparison limit of 4 players reached.', type: 'SYSTEM' } });\n                return prev;\n            }\n            return [...prev, player];\n        });\n    };\n\n    const addToQueue = (player: Player) => {\n        if (!league) return;\n        if (myQueue.includes(player.id)) {\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `${player.name} is already in your queue.`, type: 'SYSTEM' } });\n            return;\n        }\n        dispatch({\n            type: 'ADD_TO_QUEUE',\n            payload: { leagueId: league.id, playerId: player.id }\n        });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `${player.name} added to queue.`, type: 'SYSTEM' }});\n    };\n\n    const sidePanelTabs = [\n        { id: 'co-pilot', label: 'Co-pilot' },\n        { id: 'oracle', label: 'Oracle' },\n        { id: 'my_roster', label: 'My Roster' },\n        { id: 'war_room', label: 'War Room' },\n        { id: 'chat', label: 'Chat' },\n        { id: 'log', label: 'Draft Log' },\n    ];\n    \n    return (\n        <div className=\"w-full h-full flex flex-col relative\">\n            <header className=\"p-3 sm:p-2 text-center flex-shrink-0 border-b border-[var(--panel-border)] flex flex-col sm:flex-row sm:items-center sm:justify-between px-3 sm:px-4 gap-2 sm:gap-0\">\n                <button onClick={() => dispatch({type: 'SET_VIEW', payload: 'LEAGUE_HUB'})} className=\"w-full sm:w-auto px-3 py-2 bg-white/10 rounded text-xs sm:text-sm mobile-touch-target\">Back to Hub</button>\n                <div className=\"flex-1 min-w-0\">\n                    <h1 className=\"font-display text-lg sm:text-xl md:text-2xl font-bold uppercase text-[var(--text-primary)] truncate\">{league.name}</h1>\n                    <p className=\"text-xs sm:text-sm text-[var(--text-secondary)]\">Live {league.settings.draftFormat} Draft In Progress...</p>\n                </div>\n                {league.isMock ? (\n                    <div className=\"px-3 py-1 bg-indigo-500/20 text-indigo-300 font-bold rounded-full text-xs self-center sm:self-auto\">MOCK DRAFT</div>\n                ) : (\n                    <div className=\"hidden sm:block w-20\"> {/* Spacer for desktop */} </div>\n                )}\n            </header>\n            <div className=\"p-2 sm:p-3 flex-shrink-0\">\n                {isAuction ? (\n                     <AuctionPanel\n                        nominatingTeam={auctionDraftState.nominatingTeam || undefined}\n                        nominatedPlayer={auctionDraftState.nominatedPlayer || null}\n                        currentBid={auctionDraftState.currentBid}\n                        highBidder={auctionDraftState.highBidderTeam}\n                        timeLeft={auctionDraftState.timeLeft}\n                        myBudget={myTeam?.budget || 0}\n                        onPlaceBid={auctionDraftState.placeBid}\n                        myTeamId={myTeam?.id}\n                        bidHistory={auctionDraftState.bidHistory}\n                        teams={league.teams}\n                    />\n                ) : (\n                    <TurnTimer \n                        currentPick={snakeDraftState.currentPick} \n                        teams={league.teams}\n                        draftPicks={league.draftPicks}\n                        isMyTurn={isMyTurnForSnake}\n                        isPaused={isPaused}\n                    />\n                )}\n            </div>\n            <PanelGroup direction={isMobile ? 'vertical' : 'horizontal'} className=\"flex-grow px-1 sm:px-2 pb-1 sm:pb-2 gap-1 sm:gap-2\">\n                <Panel defaultSize={isMobile ? 35 : 25} minSize={isMobile ? 25 : 20}>\n                    <PlayerPool \n                        players={draft.availablePlayers} \n                        onPlayerSelect={handlePlayerSelect}\n                        onAddToQueue={addToQueue}\n                        onDraftPlayer={snakeDraftState.draftPlayer}\n                        onNominatePlayer={auctionDraftState.nominatePlayer}\n                        onAddNote={handleOpenNotes}\n                        isMyTurn={isMyTurnForSnake}\n                        playersToCompare={playersToCompare}\n                        onToggleCompare={handleToggleCompare}\n                        queuedPlayerIds={myQueue}\n                        draftFormat={league.settings.draftFormat}\n                        isNominationTurn={auctionDraftState.isMyNominationTurn}\n                    />\n                </Panel>\n                <PanelResizeHandle className={`bg-black/20 hover:bg-cyan-400/50 transition-colors rounded-full ${isMobile ? 'h-1 sm:h-2 w-full' : 'w-1 sm:w-2 h-full'} mobile-touch-target`} />\n                <Panel defaultSize={isMobile ? 45 : 50} minSize={30}>\n                    <DraftBoard \n                        teams={league.teams} \n                        draftPicks={league.draftPicks} \n                        currentPick={snakeDraftState.currentPick}\n                        onPlayerSelect={handlePlayerSelect} \n                        draftFormat={league.settings.draftFormat}\n                    />\n                </Panel>\n                 <PanelResizeHandle className={`bg-black/20 hover:bg-cyan-400/50 transition-colors rounded-full ${isMobile ? 'h-1 sm:h-2 w-full' : 'w-1 sm:w-2 h-full'} mobile-touch-target`} />\n                <Panel defaultSize={isMobile ? 20 : 25} minSize={isMobile ? 15 : 20}>\n                    <div className=\"h-full flex flex-col glass-pane rounded-lg sm:rounded-2xl\">\n                        <div className=\"flex-shrink-0 border-b border-[var(--panel-border)] px-1 sm:px-2\">\n                             <div className=\"flex space-x-1 overflow-x-auto scrollbar-hide\">\n                                {sidePanelTabs.map(item => (\n                                    <button\n                                    key={item.id}\n                                    onClick={() => setActiveSideTab(item.id)}\n                                    className={`${\n                                        activeSideTab === item.id ? 'text-[var(--text-primary)] border-cyan-400' : 'text-[var(--text-secondary)] border-transparent hover:text-[var(--text-primary)]'\n                                    } relative py-2 px-2 sm:px-3 text-xs sm:text-sm font-medium transition-colors focus:outline-none border-b-2 whitespace-nowrap mobile-touch-target min-w-fit`}\n                                    >\n                                    {item.label}\n                                    </button>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"flex-grow overflow-hidden\">\n                           {activeSideTab === 'co-pilot' && <AiCoPilotPanel />}\n                           {activeSideTab === 'oracle' && <ConversationalOracle myTeam={myTeam} availablePlayers={draft.availablePlayers} />}\n                           {activeSideTab === 'my_roster' && <MyRosterPanel team={myTeam} />}\n                           {activeSideTab === 'war_room' && league && <WarRoomPanel queue={myQueue} leagueId={league.id} dispatch={dispatch} />}\n                           {activeSideTab === 'chat' && <ChatPanel />}\n                           {activeSideTab === 'log' && <LiveDraftLog draftPicks={league.draftPicks} teams={league.teams} />}\n                        </div>\n                    </div>\n                </Panel>\n            </PanelGroup>\n\n            <CompareTray \n                players={playersToCompare}\n                onClear={() => setPlayersToCompare([])}\n                onCompare={() => setIsCompareModalOpen(true)}\n            />\n\n            <AnimatePresence>\n                {league.status === 'DRAFT_COMPLETE' && (\n                    <DraftCompleteOverlay league={league} dispatch={dispatch} />\n                )}\n            </AnimatePresence>\n\n            <AnimatePresence>\n                {isCompareModalOpen && playersToCompare.length > 0 && (\n                    <PlayerCompareTool\n                        players={playersToCompare}\n                        onClose={() => setIsCompareModalOpen(false)}\n                    />\n                )}\n            </AnimatePresence>\n        </div>\n    );\n};\n\nconst DraftRoomView: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const { league } = useLeague();\n\n    return (\n        <div className=\"w-full h-full\">\n            {!league ? (\n                <div className=\"w-full h-full flex flex-col items-center justify-center\">\n                    <p className=\"text-lg\">Error: No active league found.</p>\n                    <button onClick={() => dispatch({type: 'SET_VIEW', payload: 'DASHBOARD'})} className=\"mt-4 px-4 py-2 bg-cyan-500 rounded text-black font-bold\">Back to Dashboard</button>\n                </div>\n            ) : league.status === 'PRE_DRAFT' ? (\n                <div className=\"w-full h-full flex flex-col items-center justify-center\">\n                    <p className=\"text-lg\">The draft has not started yet.</p>\n                    <button onClick={() => dispatch({type: 'SET_VIEW', payload: 'LEAGUE_HUB'})} className=\"mt-4 px-4 py-2 bg-cyan-500 rounded text-black font-bold\">Back to League Hub</button>\n                </div>\n            ) : (\n                <DraftRoomContainer\n                  league={league}\n                  isPaused={state.isDraftPaused}\n                  user={state.user}\n                  dispatch={dispatch}\n                  playerNotes={state.playerNotes}\n                  playerQueues={state.playerQueues}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default DraftRoomView;\n"],"names":["PanelGroupContext","createContext","DATA_ATTRIBUTES","PRECISION","useIsomorphicLayoutEffect","useLayoutEffect","useId","React","wrappedUseId","counter","useUniqueId","idFromParams","idFromUseId","idRef","useRef","PanelWithForwardedRef","children","classNameFromProps","collapsedSize","collapsible","defaultSize","forwardedRef","idFromProps","maxSize","minSize","onCollapse","onExpand","onResize","order","styleFromProps","Type","rest","context","useContext","collapsePanel","expandPanel","getPanelSize","getPanelStyle","groupId","isPanelCollapsed","reevaluatePanelConstraints","registerPanel","resizePanel","unregisterPanel","panelId","panelDataRef","callbacks","constraints","prevConstraints","panelData","useImperativeHandle","size","style","createElement","Panel","forwardRef","props","ref","currentCursorStyle","prevRuleIndex","styleElement","getCursorStyle","state","constraintFlags","isPointerDown","horizontalMin","EXCEEDED_HORIZONTAL_MIN","horizontalMax","EXCEEDED_HORIZONTAL_MAX","verticalMin","EXCEEDED_VERTICAL_MIN","verticalMax","EXCEEDED_VERTICAL_MAX","resetGlobalCursorStyle","setGlobalCursorStyle","_styleElement$sheet$i","_styleElement$sheet2","_styleElement$sheet","isKeyDown","event","isPointerEvent","isMouseEvent","getResizeEventCoordinates","getInputType","intersects","rectOne","rectTwo","strict","compare","a","b","ancestors","get_ancestors","common_ancestor","assert","z_indexes","get_z_index","find_stacking_context","furthest_ancestors","i","child","is_flex_item","node","_get_parent","display","get_parent","creates_stacking_context","nodes","parentNode","isCoarsePointer","intersectingHandles","ownerDocumentCounts","panelConstraintFlags","registeredResizeHandlers","registerResizeHandle","resizeHandleId","element","direction","hitAreaMargins","setResizeHandlerState","_ownerDocumentCounts$","ownerDocument","data","count","updateListeners","_ownerDocumentCounts$2","index","updateCursor","handlePointerDown","target","x","y","recalculateIntersectingHandles","updateResizeHandlerStates","isWithinResizeHandle","handlePointerMove","handlePointerUp","currentElement","targetElement","dragHandleElement","dragHandleRect","bottom","left","right","top","margin","didIntersect","reportConstraintsViolation","flag","intersectsHorizontal","intersectsVertical","listenersAbortController","_listenersAbortContro","options","body","_","action","isActive","useForceUpdate","setCount","useState","useCallback","prevCount","expectedCondition","message","fuzzyCompareNumbers","actual","expected","fractionDigits","fuzzyNumbersEqual$1","fuzzyNumbersEqual","fuzzyLayoutsEqual","actualSize","expectedSize","panelConstraintsArray","panelIndex","panelConstraints","halfwayPoint","adjustLayoutByDelta","delta","initialLayout","pivotIndices","prevLayout","trigger","nextLayout","firstPivotIndex","secondPivotIndex","deltaApplied","prevSize","localDelta","increment","maxAvailableDelta","minAbsDelta","deltaRemaining","unsafeSize","safeSize","pivotIndex","totalSize","total","calculateAriaValues","layout","panelsArray","currentMinSize","currentMaxSize","totalMinSize","totalMaxSize","firstIndex","valueMax","valueMin","valueNow","getResizeHandleElementsForGroup","scope","getResizeHandleElementIndex","id","handle","determinePivotIndices","dragHandleId","panelGroupElement","isHTMLElement","getPanelGroupElement","rootElement","getResizeHandleElement","getResizeHandlePanelIds","handleId","_panelsArray$index$id","_panelsArray$index","_panelsArray$id","_panelsArray","handles","idBefore","idAfter","useWindowSplitterPanelGroupBehavior","committedValuesRef","eagerValuesRef","panelDataArray","setLayout","devWarningsRef","resizeHandleElements","resizeHandleElement","didWarnAboutMissingResizeHandle","useEffect","eagerValues","groupElement","cleanupFunctions","onKeyDown","cleanupFunction","areEqual","arrayA","arrayB","getResizeEventCursorPosition","isHorizontal","calculateDragOffsetPercentage","initialDragState","handleElement","initialCursorPosition","cursorPosition","groupRect","groupSizeInPixels","calculateDeltaPercentage","keyboardResizeBy","movement","calculateUnsafeDefaultLayout","numPanelsWithSizes","remainingSize","numRemainingPanels","callPanelCallbacks","panelIdToLastNotifiedSizeMap","lastNotifiedSize","compareLayouts","computePanelFlexBoxStyle","dragState","precision","flexGrow","debounce","callback","durationMs","timeoutId","args","initializeDefaultStorage","storageObject","name","value","error","getPanelGroupKey","autoSaveId","getPanelKey","panels","panel","idIsFromProps","loadSerializedPanelGroupState","storage","panelGroupKey","serialized","parsed","loadPanelGroupState","_loadSerializedPanelG","_state$panelKey","panelKey","savePanelGroupState","panelSizesBeforeCollapse","sizes","_loadSerializedPanelG2","validatePanelConstraints","warnings","validatePanelGroupLayout","nextLayoutTotalSize","accumulated","current","LOCAL_STORAGE_DEBOUNCE_INTERVAL","defaultStorage","debounceMap","PanelGroupWithForwardedRef","onLayout","panelGroupElementRef","setDragState","forceUpdate","panelIdToLastNotifiedSizeMapRef","panelSizeBeforeCollapseRef","prevDeltaRef","unsafeLayout","safeLayout","debouncedSave","clonedPanelDataArray","clonedPanelSizesBeforeCollapse","didLogIdAndOrderWarning","didLogPanelConstraintsWarning","prevPanelIds","panelIds","panelSize","panelDataHelper","findPanelDataIndex","minSizeOverride","minSizeFromProps","prevPanelSize","baseSize","isPanelExpanded","panelA","panelB","orderA","orderB","isRTL","layoutChanged","unsafePanelSize","prevCollapsedSize","prevCollapsible","nextCollapsedSize","nextCollapsible","nextMaxSize","nextMinSize","startDragging","stopDragging","useMemo","PanelGroup","prevPanelData","useWindowSplitterResizeHandlerBehavior","disabled","resizeHandler","nextIndex","PanelResizeHandle","onBlur","onClick","onDragging","onFocus","onPointerDown","onPointerUp","tabIndex","_hitAreaMargins$coars","_hitAreaMargins$fine","elementRef","callbacksRef","panelGroupContext","registerResizeHandleWithParentGroup","setState","isFocused","setIsFocused","setResizeHandler","coarseHitAreaMargins","fineHitAreaMargins","didMove","QueueIcon","className","jsxDEV","this","positionColor","PlayerCard","player","onSelect","onAddToQueue","onDraft","onNominate","onAddNote","isMyTurn","isNominationTurn","onToggleCompare","isSelectedForCompare","isInQueue","dispatch","useAppState","hasNews","hasInjury","isOnWatchlist","isValuePick","handleToggleWatchlist","e","motion","StarFilledIcon","StarIcon","CompareIcon","PencilIcon","GemIcon","NewsIcon","InjuryIcon","INITIAL_LOAD_COUNT","LOAD_MORE_COUNT","PlayerPool","players","onPlayerSelect","onDraftPlayer","onNominatePlayer","playersToCompare","queuedPlayerIds","draftFormat","search","setSearch","positionFilter","setPositionFilter","showWatchlistOnly","setShowWatchlistOnly","sortBy","setSortBy","visibleCount","setVisibleCount","filteredPlayers","sortedPool","p","customRanks","rankA","rankB","searchLower","matchesSearch","matchesPosition","playersToShow","hasMore","handleLoadMore","positions","SearchIcon","pos","s","AnimatePresence","TeamColumn","team","picks","currentPick","isMyTeam","isOnTheClock","getSnakePickDisplay","pick","displayItems","columnClasses","Avatar","item","WrapperComponent","bgColor","textColor","DraftBoard","teams","draftPicks","teamOnClockId","myTeamId","t","rounds","PlayerCompareTool","onClose","renderStatRow","label","higherIsBetter","bestValue","numericValues","v","val","Modal","WarRoomPanel","queue","leagueId","queuedPlayers","playerMap","setQueuedPlayers","newOrder","newPlayerIds","handleRemove","playerId","Reorder.Group","Reorder.Item","DragHandleIcon","CloseIcon","ConversationalOracle","myTeam","availablePlayers","messages","setMessages","input","setInput","isSending","setIsSending","messagesEndRef","scrollToBottom","handleSend","userMessage","aiMessagePlaceholder","currentMessages","historyForApi","m","stream","streamOracleResponse","fullText","collectedChunks","chunk","newChunks","prev","msg","uniqueChunks","c","Fragment","ReactMarkdown","GroundingCitations","PICK_TIME_SECONDS","TurnTimer","isPaused","timeLeft","setTimeLeft","isDraftComplete","interval","teamOnTheClockId","teamOnTheClock","progress","BidHistory","history","AuctionPanel","nominatingTeam","nominatedPlayer","currentBid","highBidder","myBudget","onPlaceBid","bidHistory","myBidString","setMyBidString","isMeHighBidder","currentMyBidNumber","handleBidSubmit","bidAmount","bidAmountAsNumber","isMyBidTooHigh","isBidInvalid","Tooltip","LiveDraftLog","completedPicks","showNotification","title","DRAFT_SPEED_MS","USER_PICK_TIME_LIMIT_MS","useRealtimeDraft","league","user","playDraftSound","useSound","playYourTurnSound","status","dp","pickTimer","availablePlayersNow","recommendedPlayerName","getAiDraftPick","playerToDraft","rosterCount","rp","ROSTER_LIMITS","autoDraftTimer","myQueue","availablePlayerIds","playerToDraftFromQueue","pid","draftPlayer","internalCurrentPick","currentTeamId","latestPickOverall","latestPick","latestPlayer","AUCTION_TIMER_SECONDS","AI_ACTION_DELAY_MS","useRealtimeAuction","playNominationSound","playBidSound","playSoldSound","auctionState","draftedPlayerIds","soldPlayer","timer","playerName","getAiNomination","playerToNominate","aiTeam","latestAuctionState","newBid","getAiBid","highBidderTeam","isMyNominationTurn","placeBid","bid","nominatePlayer","PartyPopperIcon","confettiCount","gravity","terminalVelocity","drag","useConfetti","canvas","setCanvas","ctx","particles","colors","createParticles","update","DraftCompleteOverlay","triggerConfetti","handleViewAnalytics","handleViewTeam","positionOrder","MyRosterPanel","rosterByPosition","UserIcon","position","CompareTray","onClear","onCompare","handleRemovePlayer","useDraftCommentary","picksSoFar","prevPicksCount","currentPicksCount","generateDraftPickCommentary","commentaryText","BotMessageSquareIcon","AiCoPilotPanel","useLeague","commentary","scrollRef","DraftRoomContainer","playerNotes","playerQueues","setPlayersToCompare","isCompareModalOpen","setIsCompareModalOpen","activeSideTab","setActiveSideTab","isMobile","useMediaQuery","snakeDraftState","auctionDraftState","isAuction","draft","isMyTurnForSnake","handlePlayerSelect","handleOpenNotes","handleToggleCompare","addToQueue","sidePanelTabs","ChatPanel","DraftRoomView"],"mappings":"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","x_google_ignoreList":[0]}