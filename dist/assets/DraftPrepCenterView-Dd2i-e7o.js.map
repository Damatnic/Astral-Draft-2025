{"version":3,"file":"DraftPrepCenterView-Dd2i-e7o.js","sources":["../../node_modules/lucide-react/dist/esm/icons/rocket.js","../../node_modules/lucide-react/dist/esm/icons/rotate-ccw.js","../../components/prep/MyRankingsEditor.tsx","../../components/prep/MockDraftHistory.tsx","../../services/draftSimulationEngine.ts","../../components/draft/DraftSimulationInterface.tsx","../../components/draft/DraftSimulationDemo.tsx","../../views/DraftPrepCenterView.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.535.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z\",\n      key: \"m3kijz\"\n    }\n  ],\n  [\n    \"path\",\n    {\n      d: \"m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z\",\n      key: \"1fmvmk\"\n    }\n  ],\n  [\"path\", { d: \"M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0\", key: \"1f8sc4\" }],\n  [\"path\", { d: \"M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5\", key: \"qeys4\" }]\n];\nconst Rocket = createLucideIcon(\"rocket\", __iconNode);\n\nexport { __iconNode, Rocket as default };\n//# sourceMappingURL=rocket.js.map\n","/**\n * @license lucide-react v0.535.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\", key: \"1357e3\" }],\n  [\"path\", { d: \"M3 3v5h5\", key: \"1xhq8a\" }]\n];\nconst RotateCcw = createLucideIcon(\"rotate-ccw\", __iconNode);\n\nexport { __iconNode, RotateCcw as default };\n//# sourceMappingURL=rotate-ccw.js.map\n","\nimport React from 'react';\nimport { DndContext, closestCenter, DragEndEvent, useSensor, useSensors, PointerSensor } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { useAppState } from '../../contexts/AppContext';\nimport { players as allPlayers } from '../../data/players';\nimport type { Player, PlayerPosition, CustomRanking } from '../../types';\nimport { DragHandleIcon } from '../icons/DragHandleIcon';\n\nconst positionOrder: PlayerPosition[] = ['QB', 'RB', 'WR', 'TE', 'K', 'DST'];\n\ninterface SortableItemProps {\n    player: Player;\n    rank: number;\n}\n\nconst SortableItem: React.FC<SortableItemProps> = ({ player, rank }) => {\n    const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id: player.id });\n    const style = {\n        transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\n        transition,\n        zIndex: isDragging ? 100 : 'auto',\n    };\n\n    return (\n        <div ref={setNodeRef} style={style} className={`p-1.5 bg-white/5 rounded-md flex items-center gap-2 ${isDragging ? 'shadow-lg' : ''}`}>\n            <div {...attributes} {...listeners} className=\"p-1 cursor-grab active:cursor-grabbing text-gray-500\">\n                <DragHandleIcon />\n            </div>\n            <span className=\"w-6 text-center text-xs font-mono text-gray-400\">{rank}</span>\n            <span className=\"font-semibold text-sm\">{player.name}</span>\n            <span className=\"text-xs text-gray-500 ml-auto\">{player.position} - {player.team}</span>\n        </div>\n    );\n};\n\nconst MyRankingsEditor: React.FC<{ leagueId: string }> = ({ leagueId }) => {\n    const { state, dispatch } = useAppState();\n    const [activePosition, setActivePosition] = React.useState<PlayerPosition>('RB');\n    const [rankedPlayers, setRankedPlayers] = React.useState<Player[]>([]);\n    \n    const customRanks = state.customRankings[leagueId] || {};\n\n    React.useEffect(() => {\n        const playersForPosition = allPlayers.filter((p: any) => p.position === activePosition);\n        playersForPosition.sort((a, b) => {\n            const rankA = customRanks[a.id] ?? a.rank;\n            const rankB = customRanks[b.id] ?? b.rank;\n            if(rankA !== rankB) return rankA - rankB;\n            return a.rank - b.rank;\n        });\n        setRankedPlayers(playersForPosition);\n    }, [activePosition, customRanks]);\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { active, over } = event;\n        if (over && active.id !== over.id) {\n            const oldIndex = rankedPlayers.findIndex((p: any) => p.id === active.id);\n            const newIndex = rankedPlayers.findIndex((p: any) => p.id === over.id);\n            const newOrder = arrayMove(rankedPlayers, oldIndex, newIndex);\n            setRankedPlayers(newOrder);\n\n            const newCustomRanks: CustomRanking = { ...customRanks };\n            newOrder.forEach((player, index) => {\n                newCustomRanks[player.id] = index + 1;\n            });\n\n            dispatch({\n                type: 'UPDATE_CUSTOM_RANKINGS',\n                payload: { leagueId, rankings: newCustomRanks },\n            });\n        }\n    };\n    \n    const sensors = useSensors(useSensor(PointerSensor, { activationConstraint: { distance: 5 } }));\n\n    return (\n        <div className=\"grid grid-cols-[1fr_3fr] gap-6\">\n            <div>\n                <h3 className=\"font-bold mb-2\">Positions</h3>\n                <div className=\"space-y-1\">\n                    {positionOrder.map((pos: any) => (\n                        <button\n                            key={pos}\n                            onClick={() => setActivePosition(pos)}\n                            className={`w-full text-left p-2 rounded-md text-sm font-semibold transition-colors ${activePosition === pos ? 'bg-cyan-400/20 text-cyan-300' : 'hover:bg-white/10'}`}\n                        >\n                            {pos}\n                        </button>\n                    ))}\n                </div>\n            </div>\n            <div className=\"glass-pane p-4 rounded-xl h-[70vh] flex flex-col\">\n                <h3 className=\"font-bold mb-2 flex-shrink-0\">My {activePosition} Rankings</h3>\n                <p className=\"text-xs text-gray-400 mb-2 flex-shrink-0\">Drag and drop to create your personal rankings. Changes are saved automatically.</p>\n                <div className=\"flex-grow overflow-y-auto pr-2\">\n                    <DndContext sensors={sensors} collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n                        <SortableContext items={rankedPlayers.map(p => p.id)} strategy={verticalListSortingStrategy}>\n                            <div className=\"space-y-1\">\n                                {rankedPlayers.map((player, index) => (\n                                    <SortableItem key={player.id} player={player} rank={index + 1} />\n                                ))}\n                            </div>\n                        </SortableContext>\n                    </DndContext>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MyRankingsEditor;\n","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\n\nconst MockDraftHistory: React.FC = () => {\n    const { state, dispatch } = useAppState();\n\n    const mockDrafts = state.leagues.filter((l: any) => l.isMock);\n\n    const handleViewDraft = (leagueId: string) => {\n        dispatch({ type: 'SET_ACTIVE_LEAGUE', payload: leagueId });\n        dispatch({ type: 'SET_VIEW', payload: 'DRAFT_ROOM' });\n    }\n\n    return (\n        <div className=\"glass-pane p-4 rounded-xl\">\n            <h3 className=\"font-bold mb-2\">My Mock Drafts</h3>\n            {mockDrafts.length === 0 ? (\n                <p className=\"text-sm text-gray-400 text-center py-8\">You haven't completed any mock drafts yet.</p>\n            ) : (\n                <div className=\"space-y-2\">\n                    {mockDrafts.map((league: any) => (\n                        <div key={league.id} className=\"p-3 bg-white/5 rounded-md flex justify-between items-center\">\n                            <div>\n                                <p className=\"font-semibold\">{league.name}</p>\n                                <p className=\"text-xs text-gray-400\">{league.settings.teamCount} Teams - {new Date(parseInt(league.id.split('_')[1])).toLocaleDateString()}</p>\n                            </div>\n                            {/* In a real app, this would link to a recap or a read-only board */}\n                            <button className=\"px-3 py-1 text-xs font-bold bg-cyan-500/10 text-cyan-300 rounded-md hover:bg-cyan-500/20\" disabled>\n                                View Results\n                            </button>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MockDraftHistory;\n","/**\n * AI-Powered Draft Simulation Engine\n * Advanced mock draft simulation with opponent modeling and AI decision-making\n */\n\nimport { Player } from '../types';\n\n// Draft simulation types\nexport interface DraftPick {\n    round: number;\n    pick: number;\n    overallPick: number;\n    teamId: string;\n    teamName: string;\n    playerId?: string;\n    player?: Player;\n    timeUsed: number; // seconds\n    reasoning?: string;\n    confidence: number;\n    alternativeOptions?: string[];\n}\n\nexport interface DraftTeam {\n    id: string;\n    name: string;\n    owner: string;\n    draftPosition: number;\n    strategy: DraftStrategy;\n    needs: Position[];\n    roster: Player[];\n    budget?: number; // for auction drafts\n    aiPersonality: AIPersonality;\n    pickHistory: DraftPick[];\n    tendencies: DraftTendencies;\n}\n\nexport interface DraftStrategy {\n    type: 'balanced' | 'rb_heavy' | 'wr_heavy' | 'zero_rb' | 'hero_rb' | 'best_available';\n    riskTolerance: 'conservative' | 'moderate' | 'aggressive';\n    positionPriority: Position[];\n    rookiePreference: number; // 0-1 scale\n    valueBased: boolean;\n    targetADP: boolean; // follow ADP closely vs deviate\n}\n\nexport interface AIPersonality {\n    name: string;\n    description: string;\n    decisionSpeed: 'fast' | 'moderate' | 'slow';\n    research_level: 'casual' | 'informed' | 'expert';\n    tradeAggression: number; // 0-1 scale\n    reaches: number; // tendency to reach for players (0-1)\n    sleepers: number; // tendency to draft sleepers (0-1)\n    consistency: number; // how consistent with stated strategy (0-1)\n}\n\nexport interface DraftTendencies {\n    averagePickTime: number;\n    positionBias: Record<Position, number>;\n    tierBreaking: 'random' | 'upside' | 'floor' | 'adp';\n    handcuffing: boolean;\n    streamingDST: boolean;\n    lateQB: boolean;\n    rookieHype: number;\n    injuryAversion: number;\n}\n\nexport interface SimulationSettings {\n    draftType: 'snake' | 'linear' | 'auction';\n    rounds: number;\n    teams: number;\n    userPosition: number;\n    scoringType: 'standard' | 'ppr' | 'half_ppr' | 'superflex';\n    positionLimits: Record<Position, number>;\n    benchSize: number;\n    aiDifficulty: 'easy' | 'medium' | 'hard' | 'expert';\n    realtimeSpeed: number; // 1x, 2x, 4x, etc.\n    includeRookies: boolean;\n    injuryUpdates: boolean;\n}\n\nexport interface SimulationResult {\n    id: string;\n    draftOrder: DraftPick[];\n    teams: DraftTeam[];\n    userTeam: DraftTeam;\n    analytics: SimulationAnalytics;\n    timestamp: Date;\n    settings: SimulationSettings;\n}\n\nexport interface SimulationAnalytics {\n    userRosterScore: number;\n    userRosterRank: number;\n    strengthsWeaknesses: {\n        strengths: Position[];\n        weaknesses: Position[];\n    };\n    valueFinds: Player[];\n    reaches: DraftPick[];\n    steals: DraftPick[];\n    tradeSuggestions: TradeSuggestion[];\n    comparison: TeamComparison[];\n}\n\nexport interface TradeSuggestion {\n    withTeam: string;\n    give: Player[];\n    receive: Player[];\n    reasoning: string;\n    confidence: number;\n    valueGap: number;\n}\n\nexport interface TeamComparison {\n    teamId: string;\n    vsUser: 'better' | 'similar' | 'worse';\n    projectedWins: number;\n    strengthAreas: Position[];\n    notes: string;\n}\n\ntype Position = 'QB' | 'RB' | 'WR' | 'TE' | 'K' | 'DST';\n\nclass AIPlayerEvaluator {\n    private readonly playerRankings: Map<string, number> = new Map();\n    private readonly positionScarcity: Map<Position, number> = new Map();\n    private readonly rookieProjections: Map<string, number> = new Map();\n\n    /**\n     * Evaluate player value based on AI analysis\n     */\n    evaluatePlayer(\n        player: Player, \n        team: DraftTeam, \n        availablePlayers: Player[], \n        currentRound: number,\n        settings: SimulationSettings\n    ): number {\n        let baseValue = this.getBasePlayerValue(player, settings.scoringType);\n        \n        // Apply position scarcity multiplier\n        const scarcityMultiplier = this.calculatePositionScarcity(player.position, availablePlayers);\n        baseValue *= scarcityMultiplier;\n        \n        // Apply team need multiplier\n        const needMultiplier = this.calculateTeamNeed(player.position, team);\n        baseValue *= needMultiplier;\n        \n        // Apply strategy multiplier\n        const strategyMultiplier = this.calculateStrategyFit(player, team.strategy, currentRound);\n        baseValue *= strategyMultiplier;\n        \n        // Apply AI personality adjustments\n        baseValue = this.applyPersonalityAdjustments(baseValue, player, team.aiPersonality);\n        \n        // Apply situational factors\n        baseValue = this.applySituationalFactors(baseValue, player, currentRound, settings);\n        \n        return Math.max(0, baseValue);\n    }\n\n    private getBasePlayerValue(player: Player, scoringType: string): number {\n        // Base fantasy projections (would come from external data)\n        const baseProjections = {\n            QB: 280, // fantasy points\n            RB: 220,\n            WR: 180,\n            TE: 140,\n            K: 120,\n            DST: 110\n        };\n\n        const positionBase = baseProjections[player.position as Position] || 100;\n        \n        // Apply tier adjustments (simulated)\n        const tierAdjustment = this.calculatePlayerTier(player);\n        \n        // Apply scoring type bonus\n        const scoringAdjustment = this.getScoringTypeAdjustment(player, scoringType);\n        \n        return positionBase * tierAdjustment * scoringAdjustment;\n    }\n\n    private calculatePositionScarcity(position: Position, availablePlayers: Player[]): number {\n        const positionPlayers = availablePlayers.filter(p => p.position === position);\n        const totalPlayers = availablePlayers.length;\n        \n        if (totalPlayers === 0) return 1.0;\n        \n        const scarcityRatio = positionPlayers.length / totalPlayers;\n        \n        // Lower ratio = higher scarcity = higher multiplier\n        switch (position) {\n            case 'QB': return Math.max(0.8, 1.2 - scarcityRatio);\n            case 'RB': return Math.max(0.9, 1.4 - scarcityRatio);\n            case 'WR': return Math.max(0.95, 1.1 - scarcityRatio);\n            case 'TE': return Math.max(0.85, 1.3 - scarcityRatio);\n            default: return 1.0;\n        }\n    }\n\n    private calculateTeamNeed(position: Position, team: DraftTeam): number {\n        const currentRoster = team.roster.filter(p => p.position === position);\n        const needLevel = team.needs.indexOf(position);\n        \n        if (needLevel === -1) return 0.7; // Not a need\n        if (currentRoster.length === 0) return 1.5; // Urgent need\n        if (currentRoster.length === 1) return 1.2; // Moderate need\n        return 0.9; // Depth pick\n    }\n\n    private calculateStrategyFit(player: Player, strategy: DraftStrategy, round: number): number {\n        let multiplier = 1.0;\n        \n        // Position priority adjustment\n        const priorityIndex = strategy.positionPriority.indexOf(player.position as Position);\n        if (priorityIndex !== -1) {\n            multiplier += (5 - priorityIndex) * 0.05; // Higher priority = higher multiplier\n        }\n        \n        // Strategy-specific adjustments\n        switch (strategy.type) {\n            case 'rb_heavy':\n                if (player.position === 'RB' && round <= 6) multiplier += 0.2;\n                break;\n            case 'wr_heavy':\n                if (player.position === 'WR' && round <= 5) multiplier += 0.15;\n                break;\n            case 'zero_rb':\n                if (player.position === 'RB' && round <= 4) multiplier -= 0.3;\n                if (player.position === 'WR' && round <= 6) multiplier += 0.2;\n                break;\n            case 'hero_rb':\n                if (player.position === 'RB' && round === 1) multiplier += 0.25;\n                if (player.position === 'RB' && round > 1 && round <= 6) multiplier -= 0.15;\n                break;\n        }\n        \n        return Math.max(0.5, multiplier);\n    }\n\n    private applyPersonalityAdjustments(value: number, player: Player, personality: AIPersonality): number {\n        let adjusted = value;\n        \n        // Apply reaches tendency\n        if (personality.reaches > 0.5) {\n            adjusted *= (1 + (personality.reaches - 0.5) * 0.3);\n        }\n        \n        // Apply sleepers tendency\n        if (personality.sleepers > 0.5 && this.isSleeperPick(player)) {\n            adjusted *= (1 + (personality.sleepers - 0.5) * 0.4);\n        }\n        \n        // Apply consistency factor (random deviation)\n        if (personality.consistency < 1.0) {\n            const deviation = (1 - personality.consistency) * 0.2;\n            const randomFactor = 1 + (Math.random() - 0.5) * deviation;\n            adjusted *= randomFactor;\n        }\n        \n        return adjusted;\n    }\n\n    private applySituationalFactors(value: number, player: Player, round: number, settings: SimulationSettings): number {\n        let adjusted = value;\n        \n        // Rookie bonus/penalty\n        if (this.isRookie(player)) {\n            if (settings.includeRookies) {\n                adjusted *= 1.1; // Rookie bonus\n            } else {\n                adjusted *= 0.8; // Rookie penalty\n            }\n        }\n        \n        // Injury concerns\n        if (settings.injuryUpdates && this.hasInjuryConcerns(player)) {\n            adjusted *= 0.85;\n        }\n        \n        // Late round value picks\n        if (round > 10 && this.isValuePick(player)) {\n            adjusted *= 1.15;\n        }\n        \n        return adjusted;\n    }\n\n    private calculatePlayerTier(player: Player): number {\n        // Simulate tier-based evaluation\n        // In real implementation, this would use actual rankings/tiers\n        const playerHash = this.stringToNumber(player.id.toString());\n        const tierValue = 0.7 + (playerHash % 100) / 100 * 0.6; // 0.7 to 1.3\n        return tierValue;\n    }\n\n    private getScoringTypeAdjustment(player: Player, scoringType: string): number {\n        if (player.position === 'WR' || player.position === 'RB') {\n            switch (scoringType) {\n                case 'ppr': return 1.15;\n                case 'half_ppr': return 1.07;\n                default: return 1.0;\n            }\n        }\n        return 1.0;\n    }\n\n    private isSleeperPick(player: Player): boolean {\n        // Simulate sleeper identification logic\n        const playerHash = this.stringToNumber(player.id.toString());\n        return (playerHash % 10) < 2; // 20% of players are \"sleepers\"\n    }\n\n    private isRookie(player: Player): boolean {\n        // Simulate rookie identification\n        const playerHash = this.stringToNumber(player.id.toString());\n        return (playerHash % 8) === 0; // ~12.5% are rookies\n    }\n\n    private hasInjuryConcerns(player: Player): boolean {\n        // Simulate injury concern detection\n        const playerHash = this.stringToNumber(player.id.toString());\n        return (playerHash % 6) === 0; // ~16.7% have injury concerns\n    }\n\n    private isValuePick(player: Player): boolean {\n        // Simulate value pick identification\n        const playerHash = this.stringToNumber(player.id.toString());\n        return (playerHash % 5) === 0; // 20% are value picks\n    }\n\n    public stringToNumber(str: string): number {\n        let hash = 0;\n        for (let i = 0; i < str.length; i++) {\n            const char = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash = hash & hash; // Convert to 32-bit integer\n        }\n        return Math.abs(hash);\n    }\n}\n\nclass DraftSimulationEngine {\n    private readonly aiEvaluator: AIPlayerEvaluator;\n    private currentDraft: SimulationResult | null = null;\n\n    constructor() {\n        this.aiEvaluator = new AIPlayerEvaluator();\n    }\n\n    /**\n     * Start a new draft simulation\n     */\n    async startSimulation(settings: SimulationSettings, availablePlayers: Player[]): Promise<SimulationResult> {\n        const teams = this.generateAITeams(settings);\n        const userTeam = teams[settings.userPosition - 1];\n        \n        const simulation: SimulationResult = {\n            id: `sim_${Date.now()}`,\n            draftOrder: [],\n            teams,\n            userTeam,\n            analytics: {\n                userRosterScore: 0,\n                userRosterRank: 0,\n                strengthsWeaknesses: { strengths: [], weaknesses: [] },\n                valueFinds: [],\n                reaches: [],\n                steals: [],\n                tradeSuggestions: [],\n                comparison: []\n            },\n            timestamp: new Date(),\n            settings\n        };\n\n        this.currentDraft = simulation;\n        return simulation;\n    }\n\n    /**\n     * Simulate AI pick for a specific team\n     */\n    simulateAIPick(\n        team: DraftTeam, \n        availablePlayers: Player[], \n        currentRound: number, \n        settings: SimulationSettings\n    ): DraftPick {\n        const startTime = Date.now();\n        \n        // Evaluate all available players\n        const playerEvaluations = availablePlayers.map(player => ({\n            player,\n            value: this.aiEvaluator.evaluatePlayer(player, team, availablePlayers, currentRound, settings)\n        }));\n\n        // Sort by value and apply some randomness based on AI personality\n        playerEvaluations.sort((a, b) => b.value - a.value);\n        \n        // Apply decision-making logic\n        const selectedPlayer = this.makeAIDecision(playerEvaluations, team, currentRound);\n        \n        // Calculate pick details\n        const overallPick = this.calculateOverallPick(currentRound, team.draftPosition, settings);\n        const timeUsed = this.calculatePickTime(team.aiPersonality.decisionSpeed);\n        const reasoning = this.generatePickReasoning(selectedPlayer.player, team, currentRound);\n        \n        const pick: DraftPick = {\n            round: currentRound,\n            pick: team.draftPosition,\n            overallPick,\n            teamId: team.id,\n            teamName: team.name,\n            playerId: selectedPlayer.player.id.toString(),\n            player: selectedPlayer.player,\n            timeUsed,\n            reasoning,\n            confidence: Math.min(100, Math.max(60, selectedPlayer.value / 10)),\n            alternativeOptions: playerEvaluations\n                .slice(1, 4)\n                .map(pe => pe.player.name)\n        };\n\n        // Update team roster\n        team.roster.push(selectedPlayer.player);\n        team.pickHistory.push(pick);\n        \n        // Update team needs\n        this.updateTeamNeeds(team, selectedPlayer.player);\n\n        console.log(`AI Draft Pick: ${team.name} selects ${selectedPlayer.player.name} (${selectedPlayer.player.position}) in round ${currentRound}`);\n        \n        return pick;\n    }\n\n    /**\n     * Generate comprehensive analytics for the completed draft\n     */\n    generateAnalytics(simulation: SimulationResult): SimulationAnalytics {\n        const userTeam = simulation.userTeam;\n        const allTeams = simulation.teams;\n        \n        // Calculate roster scores\n        const teamScores = allTeams.map(team => ({\n            team,\n            score: this.calculateRosterScore(team, simulation.settings)\n        }));\n        \n        teamScores.sort((a, b) => b.score - a.score);\n        \n        const userTeamScore = teamScores.find(ts => ts.team.id === userTeam.id);\n        const userRank = teamScores.findIndex(ts => ts.team.id === userTeam.id) + 1;\n        \n        return {\n            userRosterScore: userTeamScore?.score || 0,\n            userRosterRank: userRank,\n            strengthsWeaknesses: this.analyzeStrengthsWeaknesses(userTeam),\n            valueFinds: this.identifyValueFinds(simulation.draftOrder),\n            reaches: this.identifyReaches(simulation.draftOrder),\n            steals: this.identifySteals(simulation.draftOrder),\n            tradeSuggestions: this.generateTradeSuggestions(userTeam, allTeams),\n            comparison: this.generateTeamComparisons(userTeam, allTeams)\n        };\n    }\n\n    private generateAITeams(settings: SimulationSettings): DraftTeam[] {\n        const teams: DraftTeam[] = [];\n        const personalities = this.getAIPersonalities();\n        const strategies = this.getDraftStrategies();\n        \n        for (let i = 0; i < settings.teams; i++) {\n            const personality = personalities[i % personalities.length];\n            const strategy = strategies[i % strategies.length];\n            \n            teams.push({\n                id: `team_${i + 1}`,\n                name: i === settings.userPosition - 1 ? 'Your Team' : `Team ${i + 1}`,\n                owner: i === settings.userPosition - 1 ? 'User' : `AI Owner ${i + 1}`,\n                draftPosition: i + 1,\n                strategy,\n                needs: ['QB', 'RB', 'RB', 'WR', 'WR', 'TE', 'K', 'DST'] as Position[],\n                roster: [],\n                aiPersonality: personality,\n                pickHistory: [],\n                tendencies: this.generateDraftTendencies(personality, strategy)\n            });\n        }\n        \n        return teams;\n    }\n\n    private makeAIDecision(\n        evaluations: Array<{player: Player, value: number}>, \n        team: DraftTeam, \n        round: number\n    ): {player: Player, value: number} {\n        if (evaluations.length === 0) {\n            throw new Error('No players available for selection');\n        }\n        \n        // Apply personality-based decision making\n        const personality = team.aiPersonality;\n        \n        // Determine selection pool size based on research level\n        let poolSize = 1;\n        switch (personality.research_level) {\n            case 'casual': poolSize = Math.min(5, evaluations.length); break;\n            case 'informed': poolSize = Math.min(3, evaluations.length); break;\n            case 'expert': poolSize = Math.min(2, evaluations.length); break;\n        }\n        \n        // Random selection from top options (weighted by value)\n        const topOptions = evaluations.slice(0, poolSize);\n        const totalValue = topOptions.reduce((sum, opt) => sum + opt.value, 0);\n        \n        let random = Math.random() * totalValue;\n        for (const option of topOptions) {\n            random -= option.value;\n            if (random <= 0) {\n                return option;\n            }\n        }\n        \n        return topOptions[0]; // Fallback\n    }\n\n    private calculateOverallPick(round: number, position: number, settings: SimulationSettings): number {\n        if (settings.draftType === 'snake') {\n            if (round % 2 === 1) {\n                return (round - 1) * settings.teams + position;\n            } else {\n                return (round - 1) * settings.teams + (settings.teams - position + 1);\n            }\n        } else {\n            return (round - 1) * settings.teams + position;\n        }\n    }\n\n    private calculatePickTime(speed: 'fast' | 'moderate' | 'slow'): number {\n        const baseTimes = { fast: 15, moderate: 45, slow: 90 };\n        const baseTime = baseTimes[speed];\n        return baseTime + Math.random() * 30; // Add some randomness\n    }\n\n    private generatePickReasoning(player: Player, team: DraftTeam, round: number): string {\n        const reasons = [\n            `Strong value at this position in round ${round}`,\n            `Fills a critical need at ${player.position}`,\n            `Best player available on our board`,\n            `Excellent fit for our ${team.strategy.type} strategy`,\n            `High upside pick with great potential`,\n            `Reliable floor player for consistent production`,\n            `Addressing depth at ${player.position}`,\n            `Can't let them fall any further`\n        ];\n        \n        return reasons[Math.floor(Math.random() * reasons.length)];\n    }\n\n    private updateTeamNeeds(team: DraftTeam, selectedPlayer: Player): void {\n        const position = selectedPlayer.position as Position;\n        const positionCount = team.roster.filter(p => p.position === position).length;\n        \n        // Remove from needs if threshold met\n        const thresholds = { QB: 1, RB: 2, WR: 2, TE: 1, K: 1, DST: 1 };\n        if (positionCount >= (thresholds[position] || 1)) {\n            team.needs = team.needs.filter(need => need !== position);\n        }\n    }\n\n    private calculateRosterScore(team: DraftTeam, settings: SimulationSettings): number {\n        // Simplified roster scoring algorithm\n        let score = 0;\n        \n        const positionValues = {\n            QB: 100, RB: 90, WR: 85, TE: 70, K: 40, DST: 35\n        };\n        \n        team.roster.forEach(player => {\n            const baseValue = positionValues[player.position as Position] || 50;\n            const playerHash = this.aiEvaluator.stringToNumber(player.id.toString());\n            const variance = (playerHash % 40) - 20; // -20 to +20\n            score += baseValue + variance;\n        });\n        \n        return score;\n    }\n\n    private analyzeStrengthsWeaknesses(team: DraftTeam): {strengths: Position[], weaknesses: Position[]} {\n        const positionCounts = team.roster.reduce((counts, player) => {\n            const pos = player.position as Position;\n            counts[pos] = (counts[pos] || 0) + 1;\n            return counts;\n        }, {} as Record<Position, number>);\n        \n        const strengths: Position[] = [];\n        const weaknesses: Position[] = [];\n        \n        Object.entries(positionCounts).forEach(([pos, count]) => {\n            const position = pos as Position;\n            const ideal = { QB: 2, RB: 3, WR: 3, TE: 2, K: 1, DST: 1 }[position] || 1;\n            \n            if (count > ideal) strengths.push(position);\n            if (count < ideal) weaknesses.push(position);\n        });\n        \n        return { strengths, weaknesses };\n    }\n\n    private identifyValueFinds(draftOrder: DraftPick[]): Player[] {\n        // Simplified value identification\n        return draftOrder\n            .filter(pick => pick.confidence > 85 && pick.round > 5)\n            .map(pick => pick.player)\n            .filter((player): player is Player => player !== undefined)\n            .slice(0, 3);\n    }\n\n    private identifyReaches(draftOrder: DraftPick[]): DraftPick[] {\n        // Simplified reach identification\n        return draftOrder\n            .filter(pick => pick.confidence < 70 && pick.round < 8)\n            .slice(0, 3);\n    }\n\n    private identifySteals(draftOrder: DraftPick[]): DraftPick[] {\n        // Simplified steal identification\n        return draftOrder\n            .filter(pick => pick.confidence > 90 && pick.round > 3)\n            .slice(0, 3);\n    }\n\n    private generateTradeSuggestions(userTeam: DraftTeam, allTeams: DraftTeam[]): TradeSuggestion[] {\n        // Simplified trade suggestion generation\n        return [];\n    }\n\n    private generateTeamComparisons(userTeam: DraftTeam, allTeams: DraftTeam[]): TeamComparison[] {\n        return allTeams\n            .filter(team => team.id !== userTeam.id)\n            .slice(0, 3)\n            .map(team => ({\n                teamId: team.id,\n                vsUser: 'similar' as const,\n                projectedWins: 8,\n                strengthAreas: ['RB'],\n                notes: `${team.name} has a balanced roster with solid depth`\n            }));\n    }\n\n    private getAIPersonalities(): AIPersonality[] {\n        return [\n            {\n                name: 'The Scholar',\n                description: 'Methodical and research-driven drafter',\n                decisionSpeed: 'slow',\n                research_level: 'expert',\n                tradeAggression: 0.3,\n                reaches: 0.2,\n                sleepers: 0.8,\n                consistency: 0.9\n            },\n            {\n                name: 'The Gambler',\n                description: 'High-risk, high-reward strategy',\n                decisionSpeed: 'fast',\n                research_level: 'casual',\n                tradeAggression: 0.9,\n                reaches: 0.7,\n                sleepers: 0.6,\n                consistency: 0.4\n            },\n            {\n                name: 'The Safe Pick',\n                description: 'Conservative, floor-focused drafter',\n                decisionSpeed: 'moderate',\n                research_level: 'informed',\n                tradeAggression: 0.2,\n                reaches: 0.1,\n                sleepers: 0.2,\n                consistency: 0.8\n            }\n        ];\n    }\n\n    private getDraftStrategies(): DraftStrategy[] {\n        return [\n            {\n                type: 'balanced',\n                riskTolerance: 'moderate',\n                positionPriority: ['RB', 'WR', 'QB', 'TE', 'DST', 'K'],\n                rookiePreference: 0.5,\n                valueBased: true,\n                targetADP: true\n            },\n            {\n                type: 'rb_heavy',\n                riskTolerance: 'conservative',\n                positionPriority: ['RB', 'RB', 'WR', 'QB', 'TE', 'DST'],\n                rookiePreference: 0.3,\n                valueBased: false,\n                targetADP: false\n            },\n            {\n                type: 'zero_rb',\n                riskTolerance: 'aggressive',\n                positionPriority: ['WR', 'WR', 'QB', 'TE', 'RB', 'DST'],\n                rookiePreference: 0.7,\n                valueBased: true,\n                targetADP: false\n            }\n        ];\n    }\n\n    private generateDraftTendencies(personality: AIPersonality, strategy: DraftStrategy): DraftTendencies {\n        let averagePickTime = 45; // default\n        if (personality.decisionSpeed === 'fast') {\n            averagePickTime = 20;\n        } else if (personality.decisionSpeed === 'slow') {\n            averagePickTime = 90;\n        }\n\n        return {\n            averagePickTime,\n            positionBias: {\n                QB: 1.0, RB: 1.1, WR: 1.0, TE: 0.9, K: 0.8, DST: 0.8\n            },\n            tierBreaking: 'upside',\n            handcuffing: strategy.riskTolerance === 'conservative',\n            streamingDST: true,\n            lateQB: strategy.type === 'zero_rb',\n            rookieHype: personality.sleepers,\n            injuryAversion: strategy.riskTolerance === 'conservative' ? 0.8 : 0.4\n        };\n    }\n}\n\n// Export singleton instance\nexport const draftSimulationEngine = new DraftSimulationEngine();\nexport default draftSimulationEngine;\n","/**\n * AI Draft Simulation Component\n * Interactive interface for running AI-powered mock drafts\n */\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n    PlayIcon, \n    PauseIcon, \n    RotateCcwIcon, \n    SettingsIcon,\n    UsersIcon,\n    ClockIcon,\n    TrophyIcon,\n    BarChart3Icon,\n    ZapIcon\n} from 'lucide-react';\nimport { Widget } from '../ui/Widget';\nimport { \n    draftSimulationEngine, \n    type SimulationSettings, \n    type SimulationResult, \n    type DraftPick,\n    type DraftTeam \n} from '../../services/draftSimulationEngine';\nimport { Player } from '../../types';\nimport { players } from '../../data/players';\n\ninterface SimulationState {\n    isRunning: boolean;\n    isPaused: boolean;\n    currentRound: number;\n    currentPick: number;\n    currentTeam: DraftTeam | null;\n    draftBoard: DraftPick[];\n    availablePlayers: Player[];\n    timeRemaining: number;\n}\n\nconst DraftSimulationInterface: React.FC = () => {\n    const [simulation, setSimulation] = useState<SimulationResult | null>(null);\n    const [simulationState, setSimulationState] = useState<SimulationState>({\n        isRunning: false,\n        isPaused: false,\n        currentRound: 1,\n        currentPick: 1,\n        currentTeam: null,\n        draftBoard: [],\n        availablePlayers: [],\n        timeRemaining: 60\n    });\n\n    const [settings, setSettings] = useState<SimulationSettings>({\n        draftType: 'snake',\n        rounds: 16,\n        teams: 12,\n        userPosition: 6,\n        scoringType: 'ppr',\n        positionLimits: { QB: 3, RB: 8, WR: 8, TE: 3, K: 2, DST: 3 },\n        benchSize: 7,\n        aiDifficulty: 'medium',\n        realtimeSpeed: 2, // 2x speed\n        includeRookies: true,\n        injuryUpdates: true\n    });\n\n    const [showSettings, setShowSettings] = useState(false);\n    const [selectedTeam, setSelectedTeam] = useState<string | null>(null);\n\n    // Initialize simulation\n    const initializeSimulation = useCallback(async () => {\n        try {\n            const newSimulation = await draftSimulationEngine.startSimulation(settings, players);\n            setSimulation(newSimulation);\n            setSelectedTeam(newSimulation.userTeam.id);\n            \n            setSimulationState({\n                isRunning: false,\n                isPaused: false,\n                currentRound: 1,\n                currentPick: 1,\n                currentTeam: newSimulation.teams[0],\n                draftBoard: [],\n                availablePlayers: [...players],\n                timeRemaining: 60\n            });\n        } catch (error) {\n            console.error('Failed to initialize simulation:', error);\n        }\n    }, [settings]);\n\n    // Start/resume simulation\n    const startSimulation = useCallback(() => {\n        if (!simulation) return;\n        \n        setSimulationState(prev => ({\n            ...prev,\n            isRunning: true,\n            isPaused: false\n        }));\n    }, [simulation]);\n\n    // Pause simulation\n    const pauseSimulation = useCallback(() => {\n        setSimulationState(prev => ({\n            ...prev,\n            isRunning: false,\n            isPaused: true\n        }));\n    }, []);\n\n    // Reset simulation\n    const resetSimulation = useCallback(() => {\n        setSimulation(null);\n        setSimulationState({\n            isRunning: false,\n            isPaused: false,\n            currentRound: 1,\n            currentPick: 1,\n            currentTeam: null,\n            draftBoard: [],\n            availablePlayers: [],\n            timeRemaining: 60\n        });\n    }, []);\n\n    // Simulate next pick\n    const simulateNextPick = useCallback(async () => {\n        if (!simulation || !simulationState.currentTeam) return;\n\n        try {\n            const pick = draftSimulationEngine.simulateAIPick(\n                simulationState.currentTeam,\n                simulationState.availablePlayers,\n                simulationState.currentRound,\n                settings\n            );\n\n            // Update simulation state\n            setSimulationState(prev => {\n                const newDraftBoard = [...prev.draftBoard, pick];\n                const newAvailablePlayers = prev.availablePlayers.filter((p: any) => p.id !== pick.player?.id);\n                \n                // Calculate next pick\n                const nextPickNumber = prev.currentPick + 1;\n                const isNewRound = nextPickNumber > settings.teams;\n                const newRound = isNewRound ? prev.currentRound + 1 : prev.currentRound;\n                const newPick = isNewRound ? 1 : nextPickNumber;\n                \n                // Determine next team based on snake draft\n                let nextTeamIndex = 0;\n                if (settings.draftType === 'snake') {\n                    if (newRound % 2 === 1) {\n                        nextTeamIndex = newPick - 1;\n                    } else {\n                        nextTeamIndex = settings.teams - newPick;\n                    }\n                } else {\n                    nextTeamIndex = newPick - 1;\n                }\n\n                const nextTeam = simulation.teams[nextTeamIndex];\n\n                return {\n                    ...prev,\n                    currentRound: newRound,\n                    currentPick: newPick,\n                    currentTeam: nextTeam,\n                    draftBoard: newDraftBoard,\n                    availablePlayers: newAvailablePlayers,\n                    timeRemaining: 60\n                };\n            });\n\n            // Check if draft is complete\n            if (simulationState.currentRound >= settings.rounds) {\n                setSimulationState(prev => ({ ...prev, isRunning: false }));\n                \n                // Generate final analytics\n                const analytics = draftSimulationEngine.generateAnalytics(simulation);\n                setSimulation(prev => prev ? { ...prev, analytics } : null);\n            }\n\n        } catch (error) {\n            console.error('Failed to simulate pick:', error);\n        }\n    }, [simulation, simulationState, settings]);\n\n    // Auto-advance simulation when running\n    useEffect(() => {\n        if (!simulationState.isRunning) return;\n\n        const interval = setInterval(() => {\n            setSimulationState(prev => {\n                if (prev.timeRemaining <= 1) {\n                    simulateNextPick();\n                    return { ...prev, timeRemaining: 60 };\n                }\n                return { ...prev, timeRemaining: prev.timeRemaining - 1 };\n            });\n        }, 1000 / settings.realtimeSpeed);\n\n        return () => clearInterval(interval);\n    }, [simulationState.isRunning, settings.realtimeSpeed, simulateNextPick]);\n\n    // Initialize on mount\n    useEffect(() => {\n        initializeSimulation();\n    }, [initializeSimulation]);\n\n    const formatTime = (seconds: number): string => {\n        return `${Math.floor(seconds / 60)}:${(seconds % 60).toString().padStart(2, '0')}`;\n    };\n\n    const getDraftPosition = (round: number, pick: number): number => {\n        if (settings.draftType === 'snake') {\n            if (round % 2 === 1) {\n                return (round - 1) * settings.teams + pick;\n            } else {\n                return (round - 1) * settings.teams + (settings.teams - pick + 1);\n            }\n        } else {\n            return (round - 1) * settings.teams + pick;\n        }\n    };\n\n    const selectedTeamData = simulation?.teams.find((t: any) => t.id === selectedTeam);\n\n    return (\n        <div className=\"space-y-6\">\n            <Widget title=\"🤖 AI Draft Simulation\" className=\"bg-gray-900/50\">\n                <div className=\"space-y-6\">\n                    {/* Control Panel */}\n                    <div className=\"flex items-center justify-between p-4 bg-gray-800/50 rounded-lg\">\n                        <div className=\"flex items-center space-x-4\">\n                            <div className=\"flex space-x-2\">\n                                {!simulation ? (\n                                    <button\n                                        onClick={initializeSimulation}\n                                        className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\"\n                                    >\n                                        <PlayIcon className=\"w-4 h-4\" />\n                                        <span>Initialize Draft</span>\n                                    </button>\n                                ) : (\n                                    <>\n                                        {simulationState.isRunning ? (\n                                            <button\n                                                onClick={pauseSimulation}\n                                                className=\"flex items-center space-x-2 px-4 py-2 bg-orange-600 hover:bg-orange-700 text-white rounded-lg transition-colors\"\n                                            >\n                                                <PauseIcon className=\"w-4 h-4\" />\n                                                <span>Pause</span>\n                                            </button>\n                                        ) : (\n                                            <button\n                                                onClick={startSimulation}\n                                                className=\"flex items-center space-x-2 px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors\"\n                                            >\n                                                <PlayIcon className=\"w-4 h-4\" />\n                                                <span>{simulationState.isPaused ? 'Resume' : 'Start'}</span>\n                                            </button>\n                                        )}\n                                        \n                                        <button\n                                            onClick={simulateNextPick}\n                                            disabled={simulationState.isRunning}\n                                            className=\"flex items-center space-x-2 px-4 py-2 bg-purple-600 hover:bg-purple-700 disabled:bg-gray-600 text-white rounded-lg transition-colors\"\n                                        >\n                                            <ZapIcon className=\"w-4 h-4\" />\n                                            <span>Next Pick</span>\n                                        </button>\n                                    </>\n                                )}\n                                \n                                <button\n                                    onClick={resetSimulation}\n                                    className=\"flex items-center space-x-2 px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors\"\n                                >\n                                    <RotateCcwIcon className=\"w-4 h-4\" />\n                                    <span>Reset</span>\n                                </button>\n                            </div>\n\n                            <button\n                                onClick={() => setShowSettings(!showSettings)}\n                                className=\"flex items-center space-x-2 px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition-colors\"\n                            >\n                                <SettingsIcon className=\"w-4 h-4\" />\n                                <span>Settings</span>\n                            </button>\n                        </div>\n\n                        {/* Draft Status */}\n                        {simulation && (\n                            <div className=\"flex items-center space-x-6 text-sm text-gray-300\">\n                                <div className=\"flex items-center space-x-2\">\n                                    <BarChart3Icon className=\"w-4 h-4\" />\n                                    <span>Round {simulationState.currentRound}/{settings.rounds}</span>\n                                </div>\n                                <div className=\"flex items-center space-x-2\">\n                                    <UsersIcon className=\"w-4 h-4\" />\n                                    <span>Pick {simulationState.currentPick}/{settings.teams}</span>\n                                </div>\n                                <div className=\"flex items-center space-x-2\">\n                                    <ClockIcon className=\"w-4 h-4\" />\n                                    <span>{formatTime(simulationState.timeRemaining)}</span>\n                                </div>\n                                {simulationState.currentTeam && (\n                                    <div className=\"flex items-center space-x-2\">\n                                        <span className=\"font-medium text-blue-400\">\n                                            {simulationState.currentTeam.name} OTC\n                                        </span>\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                    </div>\n\n                    {/* Settings Panel */}\n                    <AnimatePresence>\n                        {showSettings && (\n                            <motion.div\n                                initial={{ opacity: 0, height: 0 }}\n                                animate={{ opacity: 1, height: 'auto' }}\n                                exit={{ opacity: 0, height: 0 }}\n                                className=\"bg-gray-800/30 rounded-lg p-4\"\n                            >\n                                <DraftSimulationSettingsComponent \n                                    settings={settings}\n                                    onSettingsChange={setSettings}\n                                />\n                            </motion.div>\n                        )}\n                    </AnimatePresence>\n\n                    {/* Main Content */}\n                    {simulation && (\n                        <div className=\"grid lg:grid-cols-3 gap-6\">\n                            {/* Draft Board */}\n                            <div className=\"lg:col-span-2\">\n                                <DraftBoard \n                                    draftBoard={simulationState.draftBoard}\n                                    currentPick={getDraftPosition(simulationState.currentRound, simulationState.currentPick)}\n                                    settings={settings}\n                                />\n                            </div>\n\n                            {/* Team Panel */}\n                            <div className=\"space-y-4\">\n                                <TeamSelector\n                                    teams={simulation.teams}\n                                    selectedTeam={selectedTeam}\n                                    onTeamSelect={setSelectedTeam}\n                                />\n                                \n                                {selectedTeamData && (\n                                    <TeamRoster team={selectedTeamData} />\n                                )}\n\n                                {simulation.analytics.userRosterScore > 0 && (\n                                    <DraftAnalytics analytics={simulation.analytics} />\n                                )}\n                            </div>\n                        </div>\n                    )}\n\n                    {/* Features Overview */}\n                    <div className=\"bg-blue-900/20 rounded-lg p-4\">\n                        <h3 className=\"text-lg font-semibold text-white mb-4\">\n                            🚀 AI Draft Simulation Features\n                        </h3>\n                        <div className=\"grid md:grid-cols-2 gap-2 text-sm text-gray-300\">\n                            <div>• AI opponents with unique personalities</div>\n                            <div>• Multiple draft strategies (Zero RB, Hero RB, etc.)</div>\n                            <div>• Real-time draft simulation</div>\n                            <div>• Advanced player evaluation algorithms</div>\n                            <div>• Snake and linear draft formats</div>\n                            <div>• Customizable scoring systems</div>\n                            <div>• Draft analytics and insights</div>\n                            <div>• Team comparison and rankings</div>\n                            <div>• Pick timing and decision modeling</div>\n                            <div>• Injury and rookie considerations</div>\n                        </div>\n                    </div>\n                </div>\n            </Widget>\n        </div>\n    );\n};\n\n// Settings Component\ninterface DraftSimulationSettingsProps {\n    settings: SimulationSettings;\n    onSettingsChange: (settings: SimulationSettings) => void;\n}\n\nconst DraftSimulationSettingsComponent: React.FC<DraftSimulationSettingsProps> = ({\n    settings,\n    onSettingsChange\n}) => {\n    const updateSetting = <K extends keyof SimulationSettings>(\n        key: K,\n        value: SimulationSettings[K]\n    ) => {\n        onSettingsChange({ ...settings, [key]: value });\n    };\n\n    return (\n        <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold text-white\">Draft Settings</h3>\n            \n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                <div>\n                    <label htmlFor=\"draftType\" className=\"block text-sm font-medium text-gray-300 mb-1\">\n                        Draft Type\n                    </label>\n                    <select\n                        id=\"draftType\"\n                        value={settings.draftType}\n                        onChange={(e: any) => updateSetting('draftType', e.target.value as 'snake' | 'linear')}\n                        className=\"w-full px-3 py-2 bg-gray-700 text-white rounded border border-gray-600 focus:border-blue-500\"\n                    >\n                        <option value=\"snake\">Snake Draft</option>\n                        <option value=\"linear\">Linear Draft</option>\n                    </select>\n                </div>\n\n                <div>\n                    <label htmlFor=\"teams\" className=\"block text-sm font-medium text-gray-300 mb-1\">\n                        Teams\n                    </label>\n                    <select\n                        id=\"teams\"\n                        value={settings.teams}\n                        onChange={(e: any) => updateSetting('teams', Number(e.target.value))}\n                        className=\"w-full px-3 py-2 bg-gray-700 text-white rounded border border-gray-600 focus:border-blue-500\"\n                    >\n                        <option value={8}>8 Teams</option>\n                        <option value={10}>10 Teams</option>\n                        <option value={12}>12 Teams</option>\n                        <option value={14}>14 Teams</option>\n                    </select>\n                </div>\n\n                <div>\n                    <label htmlFor=\"userPosition\" className=\"block text-sm font-medium text-gray-300 mb-1\">\n                        Your Position\n                    </label>\n                    <select\n                        id=\"userPosition\"\n                        value={settings.userPosition}\n                        onChange={(e: any) => updateSetting('userPosition', Number(e.target.value))}\n                        className=\"w-full px-3 py-2 bg-gray-700 text-white rounded border border-gray-600 focus:border-blue-500\"\n                    >\n                        {Array.from({ length: settings.teams }, (_, i) => (\n                            <option key={i + 1} value={i + 1}>\n                                {i + 1}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <div>\n                    <label htmlFor=\"scoringType\" className=\"block text-sm font-medium text-gray-300 mb-1\">\n                        Scoring\n                    </label>\n                    <select\n                        id=\"scoringType\"\n                        value={settings.scoringType}\n                        onChange={(e: any) => updateSetting('scoringType', e.target.value as any)}\n                        className=\"w-full px-3 py-2 bg-gray-700 text-white rounded border border-gray-600 focus:border-blue-500\"\n                    >\n                        <option value=\"standard\">Standard</option>\n                        <option value=\"ppr\">PPR</option>\n                        <option value=\"half_ppr\">Half PPR</option>\n                        <option value=\"superflex\">Superflex</option>\n                    </select>\n                </div>\n\n                <div>\n                    <label htmlFor=\"aiDifficulty\" className=\"block text-sm font-medium text-gray-300 mb-1\">\n                        AI Difficulty\n                    </label>\n                    <select\n                        id=\"aiDifficulty\"\n                        value={settings.aiDifficulty}\n                        onChange={(e: any) => updateSetting('aiDifficulty', e.target.value as any)}\n                        className=\"w-full px-3 py-2 bg-gray-700 text-white rounded border border-gray-600 focus:border-blue-500\"\n                    >\n                        <option value=\"easy\">Easy</option>\n                        <option value=\"medium\">Medium</option>\n                        <option value=\"hard\">Hard</option>\n                        <option value=\"expert\">Expert</option>\n                    </select>\n                </div>\n\n                <div>\n                    <label htmlFor=\"realtimeSpeed\" className=\"block text-sm font-medium text-gray-300 mb-1\">\n                        Speed\n                    </label>\n                    <select\n                        id=\"realtimeSpeed\"\n                        value={settings.realtimeSpeed}\n                        onChange={(e: any) => updateSetting('realtimeSpeed', Number(e.target.value))}\n                        className=\"w-full px-3 py-2 bg-gray-700 text-white rounded border border-gray-600 focus:border-blue-500\"\n                    >\n                        <option value={1}>1x Speed</option>\n                        <option value={2}>2x Speed</option>\n                        <option value={4}>4x Speed</option>\n                        <option value={8}>8x Speed</option>\n                    </select>\n                </div>\n            </div>\n\n            <div className=\"flex space-x-4\">\n                <label className=\"flex items-center space-x-2\">\n                    <input\n                        type=\"checkbox\"\n                        checked={settings.includeRookies}\n                        onChange={(e: any) => updateSetting('includeRookies', e.target.checked)}\n                        className=\"accent-blue-500\"\n                    />\n                    <span className=\"text-sm text-gray-300\">Include Rookies</span>\n                </label>\n\n                <label className=\"flex items-center space-x-2\">\n                    <input\n                        type=\"checkbox\"\n                        checked={settings?.injuryUpdates}\n                        onChange={(e: any) => updateSetting('injuryUpdates', e.target.checked)}\n                        className=\"accent-blue-500\"\n                    />\n                    <span className=\"text-sm text-gray-300\">Injury Updates</span>\n                </label>\n            </div>\n        </div>\n    );\n};\n\n// Draft Board Component\ninterface DraftBoardProps {\n    draftBoard: DraftPick[];\n    currentPick: number;\n    settings: SimulationSettings;\n}\n\nconst DraftBoard: React.FC<DraftBoardProps> = ({ \n    draftBoard, \n    currentPick, \n    settings \n}) => {\n    return (\n        <Widget title=\"Draft Board\" className=\"bg-gray-900/50\">\n            <div className=\"space-y-2\">\n                {draftBoard.length === 0 ? (\n                    <div className=\"text-center py-8 text-gray-400\">\n                        Draft hasn't started yet\n                    </div>\n                ) : (\n                    <div className=\"space-y-1\">\n                        {draftBoard.slice(-10).map((pick, index) => (\n                            <motion.div\n                                key={pick.overallPick}\n                                initial={{ opacity: 0, x: -20 }}\n                                animate={{ opacity: 1, x: 0 }}\n                                className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\"\n                            >\n                                <div className=\"flex items-center space-x-3\">\n                                    <div className=\"text-sm font-bold text-gray-400\">\n                                        {pick.overallPick}\n                                    </div>\n                                    <div>\n                                        <div className=\"font-medium text-white\">\n                                            {pick.player?.name}\n                                        </div>\n                                        <div className=\"text-xs text-gray-400\">\n                                            {pick.player?.position} • {pick.player?.team}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"text-right\">\n                                    <div className=\"text-sm font-medium text-blue-400\">\n                                        {pick.teamName}\n                                    </div>\n                                    <div className=\"text-xs text-gray-400\">\n                                        R{pick.round}.{pick.pick}\n                                    </div>\n                                </div>\n                            </motion.div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </Widget>\n    );\n};\n\n// Team Selector Component\ninterface TeamSelectorProps {\n    teams: DraftTeam[];\n    selectedTeam: string | null;\n    onTeamSelect: (teamId: string) => void;\n}\n\nconst TeamSelector: React.FC<TeamSelectorProps> = ({\n    teams,\n    selectedTeam,\n    onTeamSelect\n}) => {\n    return (\n        <Widget title=\"Teams\" className=\"bg-gray-900/50\">\n            <div className=\"space-y-2\">\n                {teams.map((team) => (\n                    <button\n                        key={team.id}\n                        onClick={() => onTeamSelect(team.id)}\n                        className={`w-full text-left p-3 rounded-lg transition-colors ${\n                            selectedTeam === team.id\n                                ? 'bg-blue-600 text-white'\n                                : 'bg-gray-800/50 text-gray-300 hover:bg-gray-800'\n                        }`}\n                    >\n                        <div className=\"flex items-center justify-between\">\n                            <div>\n                                <div className=\"font-medium\">{team.name}</div>\n                                <div className=\"text-xs opacity-75\">\n                                    Pick {team.draftPosition} • {team.strategy.type}\n                                </div>\n                            </div>\n                            <div className=\"text-sm\">\n                                {team.roster.length} players\n                            </div>\n                        </div>\n                    </button>\n                ))}\n            </div>\n        </Widget>\n    );\n};\n\n// Team Roster Component\ninterface TeamRosterProps {\n    team: DraftTeam;\n}\n\nconst TeamRoster: React.FC<TeamRosterProps> = ({ team }) => {\n    return (\n        <Widget title={`${team.name} Roster`} className=\"bg-gray-900/50\">\n            <div className=\"space-y-2\">\n                {team.roster.length === 0 ? (\n                    <div className=\"text-center py-4 text-gray-400\">\n                        No players drafted yet\n                    </div>\n                ) : (\n                    team.roster.map((player, index) => (\n                        <div\n                            key={player.id}\n                            className=\"flex items-center justify-between p-2 bg-gray-800/50 rounded\"\n                        >\n                            <div>\n                                <div className=\"text-sm font-medium text-white\">\n                                    {player.name}\n                                </div>\n                                <div className=\"text-xs text-gray-400\">\n                                    {player.position} • {player.team}\n                                </div>\n                            </div>\n                            <div className=\"text-xs text-gray-400\">\n                                R{Math.floor(index / 12) + 1}\n                            </div>\n                        </div>\n                    ))\n                )}\n            </div>\n        </Widget>\n    );\n};\n\n// Draft Analytics Component\ninterface DraftAnalyticsProps {\n    analytics: any;\n}\n\nconst DraftAnalytics: React.FC<DraftAnalyticsProps> = ({ analytics }) => {\n    return (\n        <Widget title=\"Draft Analytics\" className=\"bg-gray-900/50\">\n            <div className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"bg-green-900/20 rounded-lg p-3 text-center\">\n                        <TrophyIcon className=\"w-6 h-6 mx-auto mb-1 text-green-400\" />\n                        <div className=\"text-lg font-bold text-white\">#{analytics.userRosterRank}</div>\n                        <div className=\"text-xs text-gray-400\">Team Rank</div>\n                    </div>\n                    <div className=\"bg-blue-900/20 rounded-lg p-3 text-center\">\n                        <BarChart3Icon className=\"w-6 h-6 mx-auto mb-1 text-blue-400\" />\n                        <div className=\"text-lg font-bold text-white\">{analytics.userRosterScore}</div>\n                        <div className=\"text-xs text-gray-400\">Team Score</div>\n                    </div>\n                </div>\n\n                {analytics.strengthsWeaknesses.strengths.length > 0 && (\n                    <div>\n                        <div className=\"text-sm font-medium text-green-400 mb-1\">Strengths</div>\n                        <div className=\"text-xs text-gray-300\">\n                            {analytics.strengthsWeaknesses.strengths.join(', ')}\n                        </div>\n                    </div>\n                )}\n\n                {analytics.strengthsWeaknesses.weaknesses.length > 0 && (\n                    <div>\n                        <div className=\"text-sm font-medium text-red-400 mb-1\">Weaknesses</div>\n                        <div className=\"text-xs text-gray-300\">\n                            {analytics.strengthsWeaknesses.weaknesses.join(', ')}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </Widget>\n    );\n};\n\nexport default DraftSimulationInterface;\n","/**\n * Draft Simulation Demo Component\n * Showcases the AI-powered draft simulation functionality\n */\n\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n    RocketIcon, \n    BrainIcon, \n    ZapIcon, \n    TargetIcon,\n    TrophyIcon,\n    StarIcon,\n    CheckCircleIcon\n} from 'lucide-react';\nimport { Widget } from '../ui/Widget';\nimport DraftSimulationInterface from './DraftSimulationInterface';\n\ninterface DemoFeature {\n    icon: React.ReactNode;\n    title: string;\n    description: string;\n    isHighlight?: boolean;\n}\n\nconst DraftSimulationDemo: React.FC = () => {\n    const [showDemo, setShowDemo] = useState(false);\n\n    const features: DemoFeature[] = [\n        {\n            icon: <BrainIcon className=\"w-6 h-6\" />,\n            title: \"AI Opponent Modeling\",\n            description: \"Each AI opponent has unique personalities (Scholar, Gambler, Safe Pick) with different decision-making patterns and draft strategies.\",\n            isHighlight: true\n        },\n        {\n            icon: <TargetIcon className=\"w-6 h-6\" />,\n            title: \"Advanced Player Evaluation\",\n            description: \"AI evaluates players based on position scarcity, team needs, strategy fit, and situational factors for realistic draft behavior.\"\n        },\n        {\n            icon: <ZapIcon className=\"w-6 h-6\" />,\n            title: \"Multiple Draft Strategies\",\n            description: \"Choose from Balanced, RB Heavy, WR Heavy, Zero RB, Hero RB, and Best Available strategies for diverse draft experiences.\"\n        },\n        {\n            icon: <TrophyIcon className=\"w-6 h-6\" />,\n            title: \"Real-time Analytics\",\n            description: \"Get instant feedback on team performance, strengths, weaknesses, and draft grade as the simulation progresses.\"\n        },\n        {\n            icon: <StarIcon className=\"w-6 h-6\" />,\n            title: \"Customizable Settings\",\n            description: \"Adjust team count, scoring system, AI difficulty, simulation speed, and other parameters for tailored experiences.\"\n        },\n        {\n            icon: <RocketIcon className=\"w-6 h-6\" />,\n            title: \"Post-Draft Analysis\",\n            description: \"Comprehensive team comparisons, value picks analysis, and strategic insights to improve future draft performance.\"\n        }\n    ];\n\n    const aiPersonalities = [\n        {\n            name: \"The Scholar\",\n            icon: \"🎓\",\n            description: \"Methodical researcher who analyzes every pick carefully\",\n            traits: [\"High research level\", \"Consistent decisions\", \"Strategy adherence\"],\n            decisionSpeed: \"Slow (8-12s)\",\n            style: \"Conservative, data-driven\"\n        },\n        {\n            name: \"The Gambler\", \n            icon: \"🎲\",\n            description: \"High-risk, high-reward player who takes bold chances\",\n            traits: [\"Aggressive picks\", \"Boom/bust players\", \"Unpredictable\"],\n            decisionSpeed: \"Fast (3-6s)\",\n            style: \"Aggressive, intuitive\"\n        },\n        {\n            name: \"The Safe Pick\",\n            icon: \"🛡️\", \n            description: \"Risk-averse manager focused on consistent performance\",\n            traits: [\"Floor over ceiling\", \"Proven veterans\", \"Safe strategies\"],\n            decisionSpeed: \"Medium (5-8s)\",\n            style: \"Conservative, reliable\"\n        }\n    ];\n\n    const draftStrategies = [\n        {\n            name: \"Balanced\",\n            description: \"Well-rounded approach filling all positions evenly\",\n            focus: \"Positional balance\",\n            earlyRounds: \"BPA with positional needs\"\n        },\n        {\n            name: \"RB Heavy\",\n            description: \"Early and frequent running back selections\",\n            focus: \"Running back depth\",\n            earlyRounds: \"Target top RBs first\"\n        },\n        {\n            name: \"Zero RB\",\n            description: \"Avoid RBs early, focus on WR/TE value\",\n            focus: \"WR/TE in early rounds\",\n            earlyRounds: \"Skip RBs for skill players\"\n        },\n        {\n            name: \"Hero RB\",\n            description: \"Draft one elite RB, then avoid position\",\n            focus: \"One top RB only\",\n            earlyRounds: \"Elite RB1, then other positions\"\n        }\n    ];\n\n    return (\n        <div className=\"space-y-6\">\n            {!showDemo ? (\n                <div className=\"space-y-8\">\n                    {/* Header */}\n                    <Widget title=\"🚀 AI Draft Simulation Engine\" className=\"bg-gradient-to-br from-purple-900/50 to-blue-900/50\">\n                        <div className=\"space-y-6\">\n                            <div className=\"text-center space-y-4\">\n                                <motion.div\n                                    initial={{ scale: 0.8, opacity: 0 }}\n                                    animate={{ scale: 1, opacity: 1 }}\n                                    className=\"inline-flex items-center space-x-3 px-6 py-3 bg-purple-600/20 rounded-full\"\n                                >\n                                    <RocketIcon className=\"w-8 h-8 text-purple-400\" />\n                                    <span className=\"text-2xl font-bold bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent\">\n                                        Advanced AI Mock Drafts\n                                    </span>\n                                </motion.div>\n\n                                <p className=\"text-lg text-gray-300 max-w-3xl mx-auto\">\n                                    Experience realistic draft simulations powered by AI opponents with unique personalities, \n                                    advanced player evaluation algorithms, and comprehensive analytics. Perfect your draft strategy \n                                    against intelligent competition before your real league draft.\n                                </p>\n\n                                <motion.button\n                                    onClick={() => setShowDemo(true)}\n                                    whileHover={{ scale: 1.05 }}\n                                    whileTap={{ scale: 0.95 }}\n                                    className=\"inline-flex items-center space-x-2 px-8 py-4 bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white font-semibold rounded-lg transition-all duration-200 shadow-lg\"\n                                >\n                                    <ZapIcon className=\"w-5 h-5\" />\n                                    <span>Launch Draft Simulation</span>\n                                </motion.button>\n                            </div>\n\n                            {/* Key Features */}\n                            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                                {features.map((feature, index) => (\n                                    <motion.div\n                                        key={feature.title}\n                                        initial={{ opacity: 0, y: 20 }}\n                                        animate={{ opacity: 1, y: 0 }}\n                                        transition={{ delay: index * 0.1 }}\n                                        className={`p-4 rounded-lg ${\n                                            feature.isHighlight \n                                                ? 'bg-gradient-to-br from-purple-800/30 to-blue-800/30 border border-purple-500/30' \n                                                : 'bg-gray-800/30'\n                                        }`}\n                                    >\n                                        <div className=\"flex items-start space-x-3\">\n                                            <div className={`flex-shrink-0 p-2 rounded-lg ${\n                                                feature.isHighlight ? 'bg-purple-600/20 text-purple-400' : 'bg-gray-700/50 text-gray-400'\n                                            }`}>\n                                                {feature.icon}\n                                            </div>\n                                            <div>\n                                                <h3 className=\"font-semibold text-white mb-1\">{feature.title}</h3>\n                                                <p className=\"text-sm text-gray-300\">{feature.description}</p>\n                                            </div>\n                                        </div>\n                                    </motion.div>\n                                ))}\n                            </div>\n                        </div>\n                    </Widget>\n\n                    {/* AI Personalities */}\n                    <Widget title=\"🤖 AI Opponent Personalities\" className=\"bg-gray-900/50\">\n                        <div className=\"grid md:grid-cols-3 gap-6\">\n                            {aiPersonalities.map((personality, index) => (\n                                <motion.div\n                                    key={personality.name}\n                                    initial={{ opacity: 0, scale: 0.9 }}\n                                    animate={{ opacity: 1, scale: 1 }}\n                                    transition={{ delay: index * 0.15 }}\n                                    className=\"bg-gray-800/50 rounded-lg p-4 space-y-3\"\n                                >\n                                    <div className=\"flex items-center space-x-3\">\n                                        <span className=\"text-2xl\">{personality.icon}</span>\n                                        <h3 className=\"text-lg font-semibold text-white\">{personality.name}</h3>\n                                    </div>\n                                    \n                                    <p className=\"text-sm text-gray-300\">{personality.description}</p>\n                                    \n                                    <div className=\"space-y-2\">\n                                        <div className=\"flex justify-between text-xs\">\n                                            <span className=\"text-gray-400\">Decision Speed:</span>\n                                            <span className=\"text-blue-400\">{personality.decisionSpeed}</span>\n                                        </div>\n                                        <div className=\"flex justify-between text-xs\">\n                                            <span className=\"text-gray-400\">Style:</span>\n                                            <span className=\"text-green-400\">{personality.style}</span>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"space-y-1\">\n                                        <div className=\"text-xs font-medium text-gray-400\">Key Traits:</div>\n                                        {personality.traits.map((trait) => (\n                                            <div key={trait} className=\"flex items-center space-x-1 text-xs text-gray-300\">\n                                                <CheckCircleIcon className=\"w-3 h-3 text-green-500\" />\n                                                <span>{trait}</span>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </motion.div>\n                            ))}\n                        </div>\n                    </Widget>\n\n                    {/* Draft Strategies */}\n                    <Widget title=\"📋 Draft Strategies\" className=\"bg-gray-900/50\">\n                        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                            {draftStrategies.map((strategy, index) => (\n                                <motion.div\n                                    key={strategy.name}\n                                    initial={{ opacity: 0, y: 20 }}\n                                    animate={{ opacity: 1, y: 0 }}\n                                    transition={{ delay: index * 0.1 }}\n                                    className=\"bg-gray-800/50 rounded-lg p-4 space-y-2\"\n                                >\n                                    <h3 className=\"font-semibold text-white\">{strategy.name}</h3>\n                                    <p className=\"text-sm text-gray-300\">{strategy.description}</p>\n                                    \n                                    <div className=\"space-y-1 pt-2 border-t border-gray-700\">\n                                        <div className=\"flex justify-between text-xs\">\n                                            <span className=\"text-gray-400\">Focus:</span>\n                                            <span className=\"text-blue-400\">{strategy.focus}</span>\n                                        </div>\n                                        <div className=\"text-xs text-gray-300\">\n                                            <span className=\"text-gray-400\">Early Rounds:</span> {strategy.earlyRounds}\n                                        </div>\n                                    </div>\n                                </motion.div>\n                            ))}\n                        </div>\n                    </Widget>\n\n                    {/* Technical Implementation */}\n                    <Widget title=\"⚙️ Technical Implementation\" className=\"bg-gray-900/50\">\n                        <div className=\"grid md:grid-cols-2 gap-6\">\n                            <div>\n                                <h3 className=\"text-lg font-semibold text-white mb-3\">AI Evaluation Engine</h3>\n                                <ul className=\"space-y-2 text-sm text-gray-300\">\n                                    <li>• Position scarcity calculations</li>\n                                    <li>• Team need analysis and roster construction</li>\n                                    <li>• Strategy compatibility scoring</li>\n                                    <li>• Situational factor weighting (injuries, bye weeks)</li>\n                                    <li>• Personality-driven decision making</li>\n                                    <li>• Dynamic player value adjustments</li>\n                                </ul>\n                            </div>\n\n                            <div>\n                                <h3 className=\"text-lg font-semibold text-white mb-3\">Simulation Features</h3>\n                                <ul className=\"space-y-2 text-sm text-gray-300\">\n                                    <li>• Snake and linear draft formats</li>\n                                    <li>• Variable speed control (1x - 8x)</li>\n                                    <li>• Real-time draft board updates</li>\n                                    <li>• Live analytics and team scoring</li>\n                                    <li>• Post-draft comprehensive analysis</li>\n                                    <li>• Export and share simulation results</li>\n                                </ul>\n                            </div>\n                        </div>\n\n                        <div className=\"mt-6 p-4 bg-blue-900/20 rounded-lg\">\n                            <div className=\"flex items-center space-x-2 mb-2\">\n                                <StarIcon className=\"w-5 h-5 text-yellow-400\" />\n                                <span className=\"font-semibold text-white\">Pro Tip</span>\n                            </div>\n                            <p className=\"text-sm text-gray-300\">\n                                Run multiple simulations with different settings to understand how draft position, \n                                strategy, and opponent behavior affect your optimal picks. Use the analytics to \n                                identify value opportunities and improve your real draft performance.\n                            </p>\n                        </div>\n                    </Widget>\n                </div>\n            ) : (\n                <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                        <h2 className=\"text-2xl font-bold text-white flex items-center space-x-2\">\n                            <RocketIcon className=\"w-6 h-6 text-purple-400\" />\n                            <span>AI Draft Simulation</span>\n                        </h2>\n                        <button\n                            onClick={() => setShowDemo(false)}\n                            className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition-colors\"\n                        >\n                            Back to Overview\n                        </button>\n                    </div>\n                    \n                    <DraftSimulationInterface />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default DraftSimulationDemo;\n","\n\nimport React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { useLeague } from '../hooks/useLeague';\nimport { Widget } from '../components/ui/Widget';\nimport Tabs from '../components/ui/Tabs';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport MyRankingsEditor from '../components/prep/MyRankingsEditor';\nimport MockDraftHistory from '../components/prep/MockDraftHistory';\nimport DraftSimulationDemo from '../components/draft/DraftSimulationDemo';\n\nconst DraftPrepCenterView: React.FC = () => {\n    const { dispatch } = useAppState();\n    const { league } = useLeague();\n    const [activeTab, setActiveTab] = React.useState('rankings');\n\n    if (!league) {\n        return (\n            <div className=\"p-8 text-center w-full h-full flex flex-col items-center justify-center\">\n                <p>Please select a league to prepare for your draft.</p>\n                 <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} className=\"mt-4 px-4 py-2 bg-cyan-500 rounded\">\n                    Back to Dashboard\n                </button>\n            </div>\n        );\n    }\n\n    const tabs = [\n        { id: 'rankings', label: 'My Rankings' },\n        { id: 'ai_simulation', label: 'AI Draft Simulation' },\n        { id: 'mock_history', label: 'Mock Draft History' },\n    ];\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-4 sm:p-6 lg:p-8 overflow-y-auto\">\n            <header className=\"flex-shrink-0 flex justify-between items-center mb-2\">\n                <div>\n                    <h1 className=\"font-display text-3xl sm:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        Draft Prep Center\n                    </h1>\n                    <p className=\"text-sm text-[var(--text-secondary)] tracking-widest\">{league.name}</p>\n                </div>\n                <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_HUB' })} className=\"px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20\">\n                    Back to League Hub\n                </button>\n            </header>\n            <div className=\"border-b border-[var(--panel-border)] mb-6\">\n                <Tabs items={tabs} activeTab={activeTab} onTabChange={setActiveTab} />\n            </div>\n            <main className=\"flex-grow\">\n                 <AnimatePresence mode=\"wait\">\n                    <motion.div\n                        key={activeTab}\n                        {...{\n                            initial: { opacity: 0, y: 20 },\n                            animate: { opacity: 1, y: 0 },\n                            exit: { opacity: 0, y: -20 },\n                            transition: { duration: 0.2 },\n                        }}\n                    >\n                        {activeTab === 'rankings' && <MyRankingsEditor leagueId={league.id} />}\n                        {activeTab === 'ai_simulation' && <DraftSimulationDemo />}\n                        {activeTab === 'mock_history' && <MockDraftHistory />}\n                    </motion.div>\n                </AnimatePresence>\n            </main>\n        </div>\n    );\n};\n\nexport default DraftPrepCenterView;\n"],"names":["__iconNode","Rocket","createLucideIcon","RotateCcw","positionOrder","SortableItem","player","rank","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","style","jsxDEV","DragHandleIcon","this","MyRankingsEditor","leagueId","state","dispatch","useAppState","activePosition","setActivePosition","React","rankedPlayers","setRankedPlayers","customRanks","playersForPosition","allPlayers","p","a","b","rankA","rankB","handleDragEnd","event","active","over","oldIndex","newIndex","newOrder","arrayMove","newCustomRanks","index","sensors","useSensors","useSensor","PointerSensor","pos","DndContext","closestCenter","SortableContext","verticalListSortingStrategy","MockDraftHistory","mockDrafts","l","league","AIPlayerEvaluator","__publicField","team","availablePlayers","currentRound","settings","baseValue","scarcityMultiplier","needMultiplier","strategyMultiplier","scoringType","positionBase","tierAdjustment","scoringAdjustment","position","positionPlayers","totalPlayers","scarcityRatio","currentRoster","strategy","round","multiplier","priorityIndex","value","personality","adjusted","deviation","randomFactor","str","hash","i","char","DraftSimulationEngine","teams","userTeam","simulation","playerEvaluations","selectedPlayer","overallPick","timeUsed","reasoning","pick","pe","allTeams","teamScores","userTeamScore","ts","userRank","personalities","strategies","evaluations","poolSize","topOptions","totalValue","sum","opt","random","option","speed","reasons","need","score","positionValues","variance","positionCounts","counts","strengths","weaknesses","count","ideal","draftOrder","averagePickTime","draftSimulationEngine","DraftSimulationInterface","setSimulation","useState","simulationState","setSimulationState","setSettings","showSettings","setShowSettings","selectedTeam","setSelectedTeam","initializeSimulation","useCallback","newSimulation","players","error","startSimulation","prev","pauseSimulation","resetSimulation","simulateNextPick","newDraftBoard","newAvailablePlayers","nextPickNumber","isNewRound","newRound","newPick","nextTeamIndex","nextTeam","analytics","useEffect","interval","formatTime","seconds","getDraftPosition","selectedTeamData","t","Widget","Fragment","PauseIcon","PlayIcon","ZapIcon","RotateCcwIcon","SettingsIcon","BarChart3Icon","UsersIcon","ClockIcon","AnimatePresence","motion","DraftSimulationSettingsComponent","DraftBoard","TeamSelector","TeamRoster","DraftAnalytics","onSettingsChange","updateSetting","key","e","_","draftBoard","currentPick","onTeamSelect","TrophyIcon","DraftSimulationDemo","showDemo","setShowDemo","features","BrainIcon","TargetIcon","StarIcon","RocketIcon","aiPersonalities","draftStrategies","feature","trait","CheckCircleIcon","DraftPrepCenterView","useLeague","activeTab","setActiveTab","tabs","Tabs"],"mappings":"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","x_google_ignoreList":[0,1]}