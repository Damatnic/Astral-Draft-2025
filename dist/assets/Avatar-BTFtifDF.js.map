{"version":3,"file":"Avatar-BTFtifDF.js","sources":["../../components/ui/LazyImage.tsx","../../components/ui/Avatar.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\ninterface LazyImageProps {\n  src: string;\n  alt: string;\n  className?: string;\n  placeholder?: string;\n  fallback?: string;\n  sizes?: string;\n  srcSet?: string;\n  loading?: 'lazy' | 'eager';\n  onLoad?: () => void;\n  onError?: () => void;\n}\n\n/**\n * Optimized lazy loading image component for mobile performance\n * Features:\n * - Intersection Observer for lazy loading\n * - WebP format preference with fallback\n * - Responsive image support with srcSet\n * - Loading placeholder and error handling\n * - Mobile-optimized loading strategy\n */\nexport const LazyImage: React.FC<LazyImageProps> = ({\n  src,\n  alt,\n  className = '',\n  placeholder,\n  fallback,\n  sizes,\n  srcSet,\n  loading = 'lazy',\n  onLoad,\n  onError\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n\n  // Intersection Observer for lazy loading\n  useEffect(() => {\n    if (loading === 'eager') {\n      setIsInView(true);\n      return;\n    }\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsInView(true);\n          observer.disconnect();\n        }\n      },\n      {\n        // Start loading when image is 100px away from viewport\n        rootMargin: '100px',\n        threshold: 0.1\n      }\n    );\n\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [loading]);\n\n  // Generate WebP version URL if possible\n  const getOptimizedSrc = (originalSrc: string): string => {\n    if (originalSrc.endsWith('.svg') || originalSrc.startsWith('data:')) {\n      return originalSrc; // Don't optimize SVGs or data URLs\n    }\n    \n    // For remote images, check if WebP version exists\n    if (originalSrc.startsWith('http')) {\n      return originalSrc; // External images - use as is\n    }\n    \n    // For local images, try to use WebP version\n    const webpSrc = originalSrc.replace(/\\.(jpg|jpeg|png)$/i, '.webp');\n    return webpSrc;\n  };\n\n  // Generate responsive srcSet if not provided\n  const getResponsiveSrcSet = (originalSrc: string): string | undefined => {\n    if (srcSet) return srcSet;\n    \n    if (originalSrc.endsWith('.svg') || originalSrc.startsWith('data:') || originalSrc.startsWith('http')) {\n      return undefined; // Don't generate srcSet for these\n    }\n\n    // Generate responsive variants for local images\n    const baseName = originalSrc.replace(/\\.(jpg|jpeg|png|webp)$/i, '');\n    const extensionMatch = /\\.(webp|jpg|jpeg|png)$/i.exec(originalSrc);\n    const extension = extensionMatch?.[1] || 'webp';\n    \n    return [\n      `${baseName}-320w.${extension} 320w`,\n      `${baseName}-640w.${extension} 640w`,\n      `${baseName}-1024w.${extension} 1024w`,\n      `${baseName}-1920w.${extension} 1920w`\n    ].join(', ');\n  };\n\n  const handleLoad = () => {\n    setIsLoaded(true);\n    setHasError(false);\n    onLoad?.();\n  };\n\n  const handleError = () => {\n    setHasError(true);\n    onError?.();\n  };\n\n  const optimizedSrc = getOptimizedSrc(src);\n  const responsiveSrcSet = getResponsiveSrcSet(src);\n  const defaultSizes = sizes || '(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw';\n\n  return (\n    <div \n      ref={imgRef}\n      className={`relative overflow-hidden ${className}`}\n      style={{ \n        backgroundColor: !isLoaded && !hasError ? '#f3f4f6' : 'transparent',\n        minHeight: '20px' // Prevent layout shift\n      }}\n    >\n      {/* Loading placeholder */}\n      {!isLoaded && !hasError && isInView && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100 animate-pulse\">\n          <div className=\"w-8 h-8 rounded-full border-2 border-gray-300 border-t-gray-600 animate-spin\" />\n        </div>\n      )}\n\n      {/* Placeholder before intersection */}\n      {!isInView && placeholder && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100\">\n          <span className=\"text-gray-400 text-sm\">{placeholder}</span>\n        </div>\n      )}\n\n      {/* Error fallback */}\n      {hasError && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100\">\n          {fallback ? (\n            <img \n              src={fallback} \n              alt={alt}\n              className=\"w-full h-full object-cover\"\n              onError={() => {\n                // Final fallback - show placeholder\n                console.warn(`Failed to load image and fallback: ${src}`);\n              }}\n            />\n          ) : (\n            <div className=\"text-gray-400 text-center\">\n              <div className=\"w-8 h-8 mx-auto mb-2 bg-gray-300 rounded\" />\n              <span className=\"text-xs\">Image unavailable</span>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Main image */}\n      {isInView && (\n        <picture>\n          {/* WebP source for modern browsers */}\n          {!src.endsWith('.svg') && !src.startsWith('data:') && (\n            <source \n              type=\"image/webp\" \n              srcSet={responsiveSrcSet?.replace(/\\.(jpg|jpeg|png)/g, '.webp')} \n              sizes={defaultSizes}\n            />\n          )}\n          \n          <img\n            src={hasError ? (fallback || src) : optimizedSrc}\n            alt={alt}\n            className={`w-full h-full object-cover transition-opacity duration-300 ${\n              isLoaded ? 'opacity-100' : 'opacity-0'\n            }`}\n            srcSet={responsiveSrcSet}\n            sizes={defaultSizes}\n            loading={loading}\n            decoding=\"async\"\n            onLoad={handleLoad}\n            onError={handleError}\n          />\n        </picture>\n      )}\n    </div>\n  );\n};\n\nexport default LazyImage;\n","\nimport React from 'react';\nimport LazyImage from './LazyImage';\n\ninterface AvatarProps {\n  avatar: string;\n  className?: string;\n  alt?: string;\n  generatedAvatarUrl?: string;\n}\n\nexport const Avatar: React.FC<AvatarProps> = ({ avatar, className, alt = 'Team avatar', generatedAvatarUrl }) => {\n  const isImageUrl = generatedAvatarUrl || (avatar && (avatar.startsWith('data:image') || avatar.startsWith('https')));\n\n  if (isImageUrl) {\n    return (\n      <LazyImage\n        src={generatedAvatarUrl || avatar}\n        alt={alt}\n        className={`object-cover bg-black/20 ${className}`}\n        fallback=\"https://api.dicebear.com/7.x/avataaars/svg?seed=default\"\n        loading=\"lazy\"\n      />\n    );\n  }\n\n  // It's an emoji\n  return (\n      <span className={`flex items-center justify-center bg-black/10 ${className}`}>\n          {avatar}\n      </span>\n  );\n};\n"],"names":["LazyImage","src","alt","className","placeholder","fallback","sizes","srcSet","loading","onLoad","onError","isLoaded","setIsLoaded","useState","hasError","setHasError","isInView","setIsInView","imgRef","useRef","useEffect","observer","entry","getOptimizedSrc","originalSrc","getResponsiveSrcSet","baseName","extension","handleLoad","handleError","optimizedSrc","responsiveSrcSet","defaultSizes","jsxDEV","this","Avatar","avatar","generatedAvatarUrl"],"mappings":"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"}