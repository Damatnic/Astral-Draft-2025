{"version":3,"file":"LeagueHubView-CvvokoOQ.js","sources":["../../components/icons/MaskIcon.tsx","../../components/hub/AnnouncementsWidget.tsx","../../components/hub/WeeklyPollWidget.tsx","../../components/hub/RivalryWidget.tsx","../../components/icons/SwordsIcon.tsx","../../components/modals/ProposeSideBetModal.tsx","../../components/hub/SideBetsWidget.tsx","../../views/LeagueHubView.tsx"],"sourcesContent":["\nimport React from 'react';\n\nexport const MaskIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <path d=\"M12 2a5 5 0 0 0-5 5v2\"/>\n        <path d=\"M12 2a5 5 0 0 1 5 5v2\"/>\n        <path d=\"M12 12h.01\"/>\n        <path d=\"M20 12c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8c.5 0 1 .1 1.5.2\"/>\n        <path d=\"M12 12a4 4 0 0 0-4-4\"/>\n        <path d=\"M12 12a4 4 0 0 1 4-4\"/>\n    </svg>\n);","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport { useLeague } from '../../hooks/useLeague';\nimport { Widget } from '../ui/Widget';\nimport { MegaphoneIcon } from '../icons/MegaphoneIcon';\nimport { formatRelativeTime } from '../../utils/time';\n\nconst AnnouncementsWidget: React.FC = () => {\n    const { state } = useAppState();\n    const { league } = useLeague();\n    \n    if (!league) return null;\n    \n    const announcement = (state.leagueAnnouncements[league.id] || [])[0];\n\n    if (!announcement) {\n        return (\n            <Widget title=\"Announcements\" icon={<MegaphoneIcon />}>\n                <div className=\"p-4 text-center text-sm text-gray-400\">\n                    No recent announcements from the commissioner.\n                </div>\n            </Widget>\n        );\n    }\n    \n    return (\n        <Widget title=\"Announcements\" icon={<MegaphoneIcon />}>\n             <div className=\"p-3\">\n                <p className=\"font-semibold text-sm\">{announcement.title}</p>\n                <p className=\"text-xs text-gray-300 mt-1 whitespace-pre-wrap\">{announcement.content}</p>\n                <p className=\"text-right text-xs text-gray-500 mt-2\">{formatRelativeTime(announcement.timestamp)}</p>\n             </div>\n        </Widget>\n    );\n};\n\nexport default AnnouncementsWidget;\n","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport { useLeague } from '../../hooks/useLeague';\nimport { Widget } from '../ui/Widget';\nimport { ClipboardListIcon } from '../icons/ClipboardListIcon';\n\nconst WeeklyPollWidget: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const { league } = useLeague();\n    \n    if (!league) return null;\n\n    const poll = (state.leaguePolls[league.id] || [])[0];\n    const myVote = poll?.options.find((opt: any) => opt.votes.includes(state.user.id))?.id;\n    const totalVotes = poll?.options.reduce((acc, opt) => acc + opt.votes.length, 0) || 0;\n\n    const handleVote = (optionId: string) => {\n        if (!poll) return;\n        dispatch({\n            type: 'SUBMIT_POLL_VOTE',\n            payload: { leagueId: league.id, pollId: poll.id, optionId },\n        });\n    };\n\n    if (!poll) {\n        return (\n            <Widget title=\"Weekly Poll\" icon={<ClipboardListIcon />}>\n                <div className=\"p-4 text-center text-sm text-gray-400\">\n                    No active poll. The commissioner can create one.\n                </div>\n            </Widget>\n        );\n    }\n\n    return (\n        <Widget title=\"Weekly Poll\" icon={<ClipboardListIcon />}>\n            <div className=\"p-3\">\n                <p className=\"font-semibold text-sm mb-2\">{poll.question}</p>\n                <div className=\"space-y-2\">\n                    {poll.options.map((option: any) => {\n                        const isMyVote = myVote === option.id;\n                        const voteCount = option.votes.length;\n                        const votePercentage = totalVotes > 0 ? (voteCount / totalVotes) * 100 : 0;\n\n                        return myVote ? (\n                            <div key={option.id} className={`p-2 rounded-md ${isMyVote ? 'bg-cyan-500/20' : 'bg-black/10'}`}>\n                                <div className=\"flex justify-between items-center text-xs font-bold\">\n                                    <span>{option.text}</span>\n                                    <span>{votePercentage.toFixed(0)}% ({voteCount})</span>\n                                </div>\n                                <div className=\"w-full bg-black/20 h-1.5 rounded-full mt-1\">\n                                    <div className=\"h-full bg-cyan-400 rounded-full\" style={{ width: `${votePercentage}%` }} />\n                                </div>\n                            </div>\n                        ) : (\n                            <button\n                                key={option.id}\n                                onClick={() => handleVote(option.id)}\n                                className=\"w-full text-left p-2 rounded-md bg-black/10 hover:bg-black/20 text-sm font-semibold\"\n                            >\n                                {option.text}\n                            </button>\n                        );\n                    })}\n                </div>\n            </div>\n        </Widget>\n    );\n};\n\nexport default WeeklyPollWidget;\n","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport { useLeague } from '../../hooks/useLeague';\nimport { Widget } from '../ui/Widget';\nimport { SwordIcon } from '../icons/SwordIcon';\nimport { detectTopRivalry } from '../../services/geminiService';\nimport { Avatar } from '../ui/Avatar';\nimport LoadingSpinner from '../ui/LoadingSpinner';\n\nconst RivalryWidget: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const { league } = useLeague();\n    const [isLoading, setIsLoading] = React.useState(false);\n\n    const rivalry = league?.topRivalry;\n\n    React.useEffect(() => {\n        if (league && !rivalry && (league?.status === 'IN_SEASON' || league?.status === 'PLAYOFFS' || league?.status === 'COMPLETE')) {\n            const fetchRivalry = async () => {\n                setIsLoading(true);\n                const result = await detectTopRivalry(league);\n                if (result) {\n                    dispatch({ type: 'SET_TOP_RIVALRY', payload: { leagueId: league.id, rivalry: result } });\n                }\n                setIsLoading(false);\n            };\n            fetchRivalry();\n        }\n    }, [league, rivalry, dispatch]);\n\n    if (!league || !(league?.status === 'IN_SEASON' || league?.status === 'PLAYOFFS' || league?.status === 'COMPLETE')) {\n        return null;\n    }\n\n    const teamA = rivalry ? league.teams.find((t: any) => t.id === rivalry.teamAId) : null;\n    const teamB = rivalry ? league.teams.find((t: any) => t.id === rivalry.teamBId) : null;\n\n    return (\n        <Widget title=\"Top Rivalry\" icon={<SwordIcon />}>\n            <div className=\"p-3\">\n                {isLoading ? <LoadingSpinner size=\"sm\" text=\"Detecting rivalries...\" /> :\n                 rivalry && teamA && teamB ? (\n                    <div>\n                        <div className=\"flex items-center justify-center gap-4 mb-2\">\n                             <div className=\"text-center\">\n                                <Avatar avatar={teamA.avatar} className=\"w-10 h-10 mx-auto text-2xl rounded-lg\" />\n                                <p className=\"text-xs font-bold mt-1\">{teamA.name}</p>\n                            </div>\n                            <span className=\"font-bold text-red-400 text-lg\">VS</span>\n                             <div className=\"text-center\">\n                                <Avatar avatar={teamB.avatar} className=\"w-10 h-10 mx-auto text-2xl rounded-lg\" />\n                                <p className=\"text-xs font-bold mt-1\">{teamB.name}</p>\n                            </div>\n                        </div>\n                        <p className=\"text-xs italic text-gray-300\">\"{rivalry.narrative}\"</p>\n                    </div>\n                ) : (\n                    <p className=\"text-center text-xs text-gray-400 py-2\">No significant rivalries detected yet.</p>\n                )}\n            </div>\n        </Widget>\n    );\n};\n\nexport default RivalryWidget;\n","\nimport React from 'react';\n\nexport const SwordsIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <path d=\"M14.5 17.5 3 6V3h3l11.5 11.5\"/>\n        <path d=\"m21 3-6 6\"/>\n        <path d=\"m3 21 6-6\"/>\n        <path d=\"M14.5 3h3v3l-11.5 11.5\"/>\n    </svg>\n);\n","\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { useAppState } from '../../contexts/AppContext';\nimport { useLeague } from '../../hooks/useLeague';\nimport Modal from '../ui/Modal';\nimport { SwordsIcon } from '../icons/SwordsIcon';\n\ninterface ProposeSideBetModalProps {\n    onClose: () => void;\n}\n\nconst ProposeSideBetModal: React.FC<ProposeSideBetModalProps> = ({ onClose }) => {\n    const { dispatch } = useAppState();\n    const { league, myTeam } = useLeague();\n    const [opponentId, setOpponentId] = React.useState<string>('');\n    const [terms, setTerms] = React.useState('');\n    const [stakes, setStakes] = React.useState('');\n\n    if (!league || !myTeam) return null;\n\n    const opponents = league.teams.filter((t: any) => t.id !== myTeam.id);\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!opponentId || !terms.trim() || !stakes.trim()) {\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: \"All fields are required.\", type: 'SYSTEM' } });\n            return;\n        }\n\n        dispatch({\n            type: 'PROPOSE_SIDE_BET',\n            payload: {\n                leagueId: league.id,\n                bet: {\n                    proposerId: myTeam.id,\n                    accepterId: Number(opponentId),\n                    terms,\n                    stakes,\n                }\n            }\n        });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Side bet proposed!', type: 'SYSTEM' } });\n        onClose();\n    };\n\n    const labelClasses = \"block text-sm font-medium text-gray-400 mb-1\";\n    const inputClasses = \"mobile-touch-target w-full bg-black/20 px-3 py-3 rounded-md border border-white/10\";\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.form\n                onSubmit={handleSubmit}\n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-lg\"\n                onClick={e => e.stopPropagation()}\n                {...{\n                    initial: { opacity: 0, scale: 0.95 },\n                    animate: { opacity: 1, scale: 1 },\n                }}\n            >\n                <header className=\"p-4 border-b border-[var(--panel-border)]\">\n                    <h2 className=\"text-xl font-bold font-display flex items-center gap-2\">\n                        <SwordsIcon /> Propose Side Bet\n                    </h2>\n                </header>\n                <main className=\"p-4 space-y-4\">\n                    <div>\n                        <label htmlFor=\"opponent-select\" className={labelClasses}>Opponent</label>\n                        <select\n                            id=\"opponent-select\"\n                            value={opponentId}\n                            onChange={e => setOpponentId(e.target.value)}\n                            className={inputClasses}\n                        >\n                            <option value=\"\" disabled>Select a manager</option>\n                            {opponents.map(t => <option key={t.id} value={t.id}>{t.name}</option>)}\n                        </select>\n                    </div>\n                     <div>\n                        <label htmlFor=\"bet-terms\" className={labelClasses}>Bet Terms</label>\n                        <input\n                            id=\"bet-terms\"\n                            type=\"text\"\n                            value={terms}\n                            onChange={e => setTerms(e.target.value)}\n                            className={inputClasses}\n                            placeholder=\"e.g., My QB outscores yours this week\"\n                        />\n                    </div>\n                     <div>\n                        <label htmlFor=\"bet-stakes\" className={labelClasses}>The Stakes</label>\n                        <input\n                            id=\"bet-stakes\"\n                            type=\"text\"\n                            value={stakes}\n                            onChange={e => setStakes(e.target.value)}\n                            className={inputClasses}\n                            placeholder=\"e.g., Loser buys pizza\"\n                        />\n                    </div>\n                </main>\n                <footer className=\"p-4 flex justify-end gap-2 border-t border-[var(--panel-border)]\">\n                    <button type=\"button\" onClick={onClose} className=\"px-4 py-2 text-sm font-bold bg-transparent border border-transparent hover:border-[var(--panel-border)] rounded-md\">Cancel</button>\n                    <button type=\"submit\" className=\"px-4 py-2 text-sm font-bold bg-cyan-500 text-black rounded-md\">Propose Bet</button>\n                </footer>\n            </motion.form>\n        </Modal>\n    );\n};\n\nexport default ProposeSideBetModal;\n","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport { useLeague } from '../../hooks/useLeague';\nimport { Widget } from '../ui/Widget';\nimport { SwordsIcon } from '../icons/SwordsIcon';\nimport type { SideBet } from '../../types';\nimport { AnimatePresence } from 'framer-motion';\nimport ProposeSideBetModal from '../modals/ProposeSideBetModal';\nimport { Avatar } from '../ui/Avatar';\n\nconst SideBetCard: React.FC<{ bet: SideBet; onRespond: (betId: string, response: 'ACCEPTED' | 'REJECTED') => void; onResolve: (betId: string, winnerId: number) => void; isMyBet: boolean; isMyTurnToRespond: boolean; }> = ({ bet, onRespond, onResolve, isMyBet, isMyTurnToRespond }) => {\n    const { league, myTeam } = useLeague();\n    if (!league || !myTeam) return null;\n\n    const proposer = league.teams.find((t: any) => t.id === bet.proposerId);\n    const accepter = league.teams.find((t: any) => t.id === bet.accepterId);\n\n    return (\n        <div className=\"p-2 bg-black/10 rounded-lg\">\n            <div className=\"flex items-center justify-between text-xs mb-1\">\n                <div className=\"flex items-center gap-1\">\n                    <Avatar avatar={proposer?.avatar || '?'} className=\"w-4 h-4 rounded-full\" /> {proposer?.name}\n                    <span className=\"text-red-400\">vs</span>\n                    <Avatar avatar={accepter?.avatar || '?'} className=\"w-4 h-4 rounded-full\" /> {accepter?.name}\n                </div>\n                <span className={`px-1.5 py-0.5 rounded-full text-[10px] font-bold ${bet?.status === 'PENDING' ? 'bg-yellow-500/20 text-yellow-300' : 'bg-green-500/20 text-green-300'}`}>{bet?.status}</span>\n            </div>\n            <p className=\"text-sm font-semibold\">\"{bet.terms}\"</p>\n            <p className=\"text-xs text-gray-400\">Stakes: <span className=\"italic\">{bet.stakes}</span></p>\n            {bet?.status === 'PENDING' && isMyTurnToRespond && (\n                 <div className=\"flex justify-end gap-2 mt-2\">\n                    <button onClick={() => onRespond(bet.id, 'REJECTED')} className=\"px-2 py-1 text-xs font-bold bg-red-500/20 text-red-300 rounded-md\">Reject</button>\n                    <button onClick={() => onRespond(bet.id, 'ACCEPTED')} className=\"px-2 py-1 text-xs font-bold bg-green-500/20 text-green-300 rounded-md\">Accept</button>\n                </div>\n            )}\n            {bet?.status === 'ACCEPTED' && isMyBet && (\n                 <div className=\"flex justify-end gap-2 mt-2\">\n                    <button onClick={() => onResolve(bet.id, bet.proposerId)} className=\"px-2 py-1 text-xs font-bold rounded-md bg-white/10\">I Lost</button>\n                    <button onClick={() => onResolve(bet.id, bet.accepterId)} className=\"px-2 py-1 text-xs font-bold rounded-md bg-white/10\">I Won</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst SideBetsWidget: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const { league, myTeam } = useLeague();\n    const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n    if (!league || !myTeam) return null;\n\n    const myBets = (league.sideBets || []).filter((b: any) => b.proposerId === myTeam.id || b.accepterId === myTeam.id);\n    \n    const handleRespond = (betId: string, response: 'ACCEPTED' | 'REJECTED') => {\n        dispatch({ type: 'RESPOND_TO_SIDE_BET', payload: { leagueId: league.id, betId, response } });\n    };\n\n    const handleResolve = (betId: string, winnerId: number) => {\n        dispatch({ type: 'RESOLVE_SIDE_BET', payload: { leagueId: league.id, betId, winnerId } });\n    };\n\n    return (\n        <>\n            <Widget title=\"Side Bets\" icon={<SwordsIcon />}>\n                <div className=\"p-3\">\n                    {myBets.length > 0 ? (\n                        <div className=\"space-y-2 max-h-48 overflow-y-auto pr-1\">\n                            {myBets.map((bet: any) => (\n                                <SideBetCard \n                                    key={bet.id}\n                                    bet={bet}\n                                    onRespond={handleRespond}\n                                    onResolve={handleResolve}\n                                    isMyBet={bet.proposerId === myTeam.id}\n                                    isMyTurnToRespond={bet.accepterId === myTeam.id && bet?.status === 'PENDING'}\n                                />\n                            ))}\n                        </div>\n                    ) : (\n                        <p className=\"text-center text-xs text-gray-400 py-4\">No side bets yet. Start some trouble!</p>\n                    )}\n                    <button \n                        onClick={() => setIsModalOpen(true)}\n                        className=\"w-full mt-2 py-1.5 text-xs font-bold bg-cyan-500/10 text-cyan-300 rounded-md hover:bg-cyan-500/20\"\n                    >\n                        Propose a Bet\n                    </button>\n                </div>\n            </Widget>\n            <AnimatePresence>\n                {isModalOpen && <ProposeSideBetModal onClose={() => setIsModalOpen(false)} />}\n            </AnimatePresence>\n        </>\n    );\n};\n\nexport default SideBetsWidget;\n","\nimport React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { Widget } from '../components/ui/Widget';\nimport ChatPanel from '../components/chat/ChatPanel';\nimport { UserIcon } from '../components/icons/UserIcon';\nimport { SettingsIcon } from '../components/icons/SettingsIcon';\nimport type { League, User } from '../types';\nimport { BookOpenIcon } from '../components/icons/BookOpenIcon';\nimport { MaskIcon } from '../components/icons/MaskIcon';\nimport { generateAiChatMessage, generateLeagueSlogan } from '../services/geminiService';\nimport { Avatar } from '../components/ui/Avatar';\nimport { GavelIcon } from '../components/icons/GavelIcon';\nimport { useLeague } from '../hooks/useLeague';\nimport { BrainCircuitIcon } from '../components/icons/BrainCircuitIcon';\nimport AnnouncementsWidget from '../components/hub/AnnouncementsWidget';\nimport WeeklyPollWidget from '../components/hub/WeeklyPollWidget';\nimport RivalryWidget from '../components/hub/RivalryWidget';\nimport { ChartBarIcon } from '../components/icons/ChartBarIcon';\nimport { AwardIcon } from '../components/icons/AwardIcon';\nimport { NewspaperIcon } from '../components/icons/NewspaperIcon';\nimport SideBetsWidget from '../components/hub/SideBetsWidget';\n\nconst LeagueHubContent: React.FC<{ league: League; user: User; dispatch: React.Dispatch<any> }> = ({ league, user, dispatch }) => {\n    const isCommissioner = user.id === league.commissionerId;\n    const isSeasonStarted = league.status === 'IN_SEASON' || league.status === 'PLAYOFFS';\n    const isDraftComplete = league.status === 'DRAFT_COMPLETE';\n    const isPreDraft = league.status === 'PRE_DRAFT';\n    const isHistoryAvailable = league.history && league.history.length > 0;\n    const [slogan, setSlogan] = React.useState<string | null>(null);\n\n    const prevWeekRef = React.useRef(league.currentWeek);\n    \n    React.useEffect(() => {\n        generateLeagueSlogan(league.name, league.teams.map(t => t.name)).then(setSlogan);\n    }, [league.name, league.teams]);\n\n    React.useEffect(() => {\n        if (league.currentWeek > prevWeekRef.current) {\n            const justCompletedWeek = league.currentWeek - 1;\n            const matchups = league.schedule.filter(m => m.week === justCompletedWeek);\n\n            matchups.forEach(matchup => {\n                const teamA = league.teams.find(t => t.id === matchup.teamA.teamId);\n                const teamB = league.teams.find(t => t.id === matchup.teamB.teamId);\n\n                if (teamA && teamB) {\n                    if (teamA.owner.persona) {\n                        generateAiChatMessage(teamA, teamB, matchup.teamA.score, matchup.teamB.score).then(text => {\n                            if (text) {\n                                dispatch({ type: 'ADD_CHAT_MESSAGE', payload: { leagueId: league.id, message: { user: teamA.owner, text } } });\n                            }\n                        });\n                    }\n                    if (teamB.owner.persona) {\n                        generateAiChatMessage(teamB, teamA, matchup.teamB.score, matchup.teamA.score).then(text => {\n                            if (text) {\n                                dispatch({ type: 'ADD_CHAT_MESSAGE', payload: { leagueId: league.id, message: { user: teamB.owner, text } } });\n                            }\n                        });\n                    }\n                }\n            });\n            prevWeekRef.current = league.currentWeek;\n        }\n    }, [league.currentWeek, league.schedule, league.teams, league.id, dispatch]);\n\n\n    const handleProcessWaivers = () => {\n        dispatch({ type: 'PROCESS_WAIVERS', payload: { leagueId: league.id } });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Waivers are being processed...', type: 'SYSTEM' } });\n    };\n\n    const handleAdvanceWeek = () => {\n        dispatch({ type: 'ADVANCE_WEEK', payload: { leagueId: league.id } });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `Advancing to Week ${league.currentWeek + 1}...`, type: 'SYSTEM' } });\n    };\n\n    const handleSetReady = (isReady: boolean) => {\n        dispatch({ type: 'SET_USER_READY', payload: { leagueId: league.id, userId: user.id, isReady } });\n    };\n\n    const allHumanPlayersReady = league.members.filter(m => !m.id.startsWith('ai_')).every(m => m.isReady);\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-4 sm:p-6 lg:p-8 overflow-y-auto\">\n             <header className=\"flex-shrink-0 flex justify-between items-center mb-6\">\n                <div>\n                    <h1 className=\"font-display text-3xl sm:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        {league.name}\n                    </h1>\n                     <p className=\"text-sm text-[var(--text-secondary)] tracking-widest\">{league.status.replace('_', ' ')}</p>\n                     {slogan && (\n                        <p className=\"text-sm text-cyan-300/80 tracking-widest font-semibold italic mt-1\">\"{slogan}\"</p>\n                    )}\n                </div>\n                <div className=\"flex items-center gap-2 flex-wrap justify-end\">\n                    {isCommissioner && (\n                        <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'COMMISSIONER_TOOLS' })} className=\"px-4 py-2 bg-red-500/10 text-red-300 rounded-lg text-sm hover:bg-red-500/20 flex items-center gap-2\">\n                           <GavelIcon /> Commissioner Tools\n                        </button>\n                    )}\n                    {isSeasonStarted && (\n                        <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_NEWSPAPER' })} className=\"px-4 py-2 bg-blue-400/10 text-blue-300 rounded-lg text-sm hover:bg-blue-400/20 flex items-center gap-2\">\n                            <NewspaperIcon /> League Newspaper\n                        </button>\n                    )}\n                    {isSeasonStarted && (\n                        <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_STATS' })} className=\"px-4 py-2 bg-blue-400/10 text-blue-300 rounded-lg text-sm hover:bg-blue-400/20 flex items-center gap-2\">\n                            <ChartBarIcon /> League Stats\n                        </button>\n                    )}\n                     <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'TROPHY_ROOM' })} className=\"px-4 py-2 bg-yellow-400/10 text-yellow-300 rounded-lg text-sm hover:bg-yellow-400/20 flex items-center gap-2\">\n                        <AwardIcon /> Trophy Room\n                    </button>\n                    {isHistoryAvailable && (\n                         <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_HISTORY' })} className=\"px-4 py-2 bg-yellow-400/10 text-yellow-300 rounded-lg text-sm hover:bg-yellow-400/20 flex items-center gap-2\">\n                            <BookOpenIcon /> League History\n                        </button>\n                    )}\n                     <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} className=\"px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20\">\n                        Back to Dashboard\n                    </button>\n                </div>\n            </header>\n\n            <main className=\"flex-grow grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"md:col-span-2 grid grid-cols-1 sm:grid-cols-2 gap-6\">\n                    <Widget title=\"League Members\" icon={<UserIcon />}>\n                        <div className=\"space-y-3 p-4\">\n                            {league.members.map(member => (\n                                <div key={member.id} className=\"flex items-center gap-3\">\n                                    <Avatar avatar={member.avatar} className=\"w-8 h-8 text-xl rounded-md\" />\n                                    <div className=\"flex-grow\">\n                                        <span className=\"font-semibold\">{member.name} {member.id === user.id && '(You)'}</span>\n                                        {member.persona && (\n                                            <div className=\"flex items-center gap-1 text-xs text-cyan-300/80\">\n                                                <MaskIcon className=\"w-3 h-3\"/>\n                                                <span>{member.persona}</span>\n                                            </div>\n                                        )}\n                                    </div>\n                                    {member.isReady ? (\n                                        <span className=\"text-xs bg-green-500/20 text-green-300 px-2 py-0.5 rounded-full\">Ready</span>\n                                    ) : (\n                                         <span className=\"text-xs bg-gray-500/20 text-gray-400 px-2 py-0.5 rounded-full\">Not Ready</span>\n                                    )}\n                                    {member.isCommissioner && <span className=\"text-xs bg-yellow-400/20 text-yellow-300 px-2 py-0.5 rounded-full\">Commish</span>}\n                                </div>\n                            ))}\n                        </div>\n                    </Widget>\n                    <div className=\"space-y-6\">\n                        <AnnouncementsWidget />\n                        <WeeklyPollWidget />\n                        <RivalryWidget />\n                        <SideBetsWidget />\n                        <Widget title=\"League Settings\" icon={<SettingsIcon />}>\n                             <div className=\"space-y-2 p-4 text-sm\">\n                                <p><strong>Format:</strong> {league.settings.draftFormat}</p>\n                                <p><strong>Teams:</strong> {league.settings.teamCount}</p>\n                                <p><strong>Scoring:</strong> {league.settings.scoring}</p>\n                                <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_RULES' })} className=\"mt-2 w-full text-center px-4 py-1.5 text-xs font-bold bg-cyan-500/10 text-cyan-300 rounded-md hover:bg-cyan-500/20\">\n                                    View All Rules\n                                </button>\n                             </div>\n                        </Widget>\n                    </div>\n                    <div className=\"sm:col-span-2 p-4 flex flex-col items-center justify-center text-center\">\n                        {league.status === 'PRE_DRAFT' && (\n                            <div className=\"flex gap-4\">\n                                 <button\n                                    onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DRAFT_PREP_CENTER' })}\n                                    className=\"px-8 py-4 bg-gradient-to-r from-blue-500 to-purple-600 text-white font-bold rounded-lg shadow-lg text-xl btn-primary flex items-center gap-3\"\n                                >\n                                    <BrainCircuitIcon /> Draft Prep Center\n                                </button>\n                               {isCommissioner ? (\n                                    <div className=\"flex flex-col gap-2 items-center\">\n                                        <button\n                                            onClick={() => dispatch({ type: 'START_DRAFT' })}\n                                            disabled={!allHumanPlayersReady}\n                                            className=\"px-8 py-4 bg-gradient-to-r from-green-500 to-cyan-500 text-white font-bold rounded-lg shadow-lg text-xl btn-primary disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none disabled:shadow-none\"\n                                        >\n                                            START DRAFT\n                                        </button>\n                                        <button\n                                            onClick={() => dispatch({ type: 'SET_ALL_USERS_READY', payload: { leagueId: league.id }})}\n                                            className=\"px-3 py-1 text-xs bg-white/10 rounded-md hover:bg-white/20\"\n                                        >\n                                            Mark All Users Ready\n                                        </button>\n                                    </div>\n                                ) : (\n                                     <button\n                                        onClick={() => handleSetReady(!user.isReady)}\n                                        className={`px-8 py-4 text-white font-bold rounded-lg shadow-lg text-xl btn-primary ${user.isReady ? 'bg-gradient-to-r from-red-500 to-orange-500' : 'bg-gradient-to-r from-green-500 to-cyan-500'}`}\n                                    >\n                                        {user.isReady ? \"I'm Not Ready\" : \"I'm Ready\"}\n                                    </button>\n                                )}\n                            </div>\n                        )}\n                        {league.status === 'DRAFTING' ? (\n                             <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DRAFT_ROOM' })} className=\"px-8 py-4 bg-gradient-to-r from-cyan-500 to-indigo-500 text-white font-bold rounded-lg shadow-lg text-xl btn-primary\">\n                                ENTER DRAFT\n                            </button>\n                        ) : isCommissioner && isDraftComplete ? (\n                             <button onClick={handleProcessWaivers} className=\"px-8 py-4 bg-gradient-to-r from-indigo-500 to-purple-500 text-white font-bold rounded-lg shadow-lg text-xl btn-primary\">\n                                START SEASON\n                            </button>\n                        ) : isCommissioner && isSeasonStarted ? (\n                            <button onClick={handleAdvanceWeek} className=\"px-8 py-4 bg-gradient-to-r from-red-500 to-orange-500 text-white font-bold rounded-lg shadow-lg text-xl btn-primary\">\n                                ADVANCE WEEK\n                            </button>\n                        ) : null}\n                    </div>\n                </div>\n                <div className=\"md:col-span-1\">\n                    <ChatPanel />\n                </div>\n            </main>\n        </div>\n    );\n};\n\nexport const LeagueHubView: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const { league } = useLeague();\n\n    return (\n        <div className=\"w-full h-full\">\n            {!league ? (\n                <div className=\"w-full h-full flex flex-col items-center justify-center\">\n                    <p className=\"text-lg\">Error: No active league found.</p>\n                     <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} className=\"mt-4 px-4 py-2 bg-cyan-500 rounded text-black font-bold\">\n                        Back to Dashboard\n                    </button>\n                </div>\n            ) : (\n                <LeagueHubContent league={league} user={state.user} dispatch={dispatch} />\n            )}\n        </div>\n    );\n};\n\nexport default LeagueHubView;\n"],"names":["MaskIcon","className","jsxDEV","this","AnnouncementsWidget","state","useAppState","league","useLeague","announcement","Widget","MegaphoneIcon","formatRelativeTime","WeeklyPollWidget","dispatch","poll","myVote","opt","totalVotes","acc","handleVote","optionId","ClipboardListIcon","option","isMyVote","voteCount","votePercentage","RivalryWidget","isLoading","setIsLoading","React","rivalry","result","detectTopRivalry","teamA","t","teamB","SwordIcon","LoadingSpinner","Avatar","SwordsIcon","ProposeSideBetModal","onClose","myTeam","opponentId","setOpponentId","terms","setTerms","stakes","setStakes","opponents","handleSubmit","e","labelClasses","inputClasses","Modal","motion","SideBetCard","bet","onRespond","onResolve","isMyBet","isMyTurnToRespond","proposer","accepter","SideBetsWidget","isModalOpen","setIsModalOpen","myBets","b","handleRespond","betId","response","handleResolve","winnerId","Fragment","AnimatePresence","LeagueHubContent","user","isCommissioner","isSeasonStarted","isDraftComplete","isHistoryAvailable","slogan","setSlogan","prevWeekRef","generateLeagueSlogan","justCompletedWeek","m","matchup","generateAiChatMessage","text","handleProcessWaivers","handleAdvanceWeek","handleSetReady","isReady","allHumanPlayersReady","GavelIcon","NewspaperIcon","ChartBarIcon","AwardIcon","BookOpenIcon","UserIcon","member","SettingsIcon","BrainCircuitIcon","ChatPanel","LeagueHubView"],"mappings":"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"}