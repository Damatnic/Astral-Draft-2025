{"version":3,"file":"TeamHubView-BiON4ke4.js","sources":["../../components/team/VisualRoster.tsx","../../components/team/ManageTradeBlockModal.tsx","../../components/icons/ScalesIcon.tsx","../../components/icons/PaperPlaneIcon.tsx","../../components/icons/EmptyTumbleweedIcon.tsx","../../components/team/TradeCenterWidget.tsx","../../components/team/ProposeTradeModal.tsx","../../components/team/LeagueTeamsList.tsx","../../components/icons/TargetIcon.tsx","../../components/icons/WandIcon.tsx","../../components/team/BriefingItemCard.tsx","../../components/team/DailyBriefingWidget.tsx","../../components/team/CurrentMatchupWidget.tsx","../../components/team/TeamChemistryWidget.tsx","../../components/team/SeasonOutlookWidget.tsx","../../components/icons/ImageIcon.tsx","../../components/team/EditHeaderModal.tsx","../../components/team/TrophyCaseWidget.tsx","../../components/team/InjuryReportWidget.tsx","../../components/team/AiCoManagerWidget.tsx","../../components/ui/SparklineChart.tsx","../../components/team/ChampionshipOddsWidget.tsx","../../components/modals/EditTeamBrandingModal.tsx","../../components/icons/MusicIcon.tsx","../../components/icons/ArchiveIcon.tsx","../../components/team/FuturePicksWidget.tsx","../../components/icons/TvIcon.tsx","../../components/icons/Share2Icon.tsx","../../components/team/TeamBrandingCard.tsx","../../components/modals/ShareTeamCardModal.tsx","../../components/icons/PawPrintIcon.tsx","../../components/team/MascotWidget.tsx","../../components/team/TradeWhispererWidget.tsx","../../components/modals/AssignAwardsModal.tsx","../../views/TeamHubView.tsx"],"sourcesContent":["import React from 'react';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors, DragEndEvent } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, sortableKeyboardCoordinates, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\nimport type { Team, Player } from '../../types';\nimport { useAppState } from '../../contexts/AppContext';\n\n// Component for a single draggable player\nconst SortablePlayerCard = ({ player }: { player: Player }) => {\n    const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id: player.id });\n    \n    const style = {\n        transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\n        transition,\n        zIndex: isDragging ? 10 : 'auto',\n        boxShadow: isDragging ? '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)' : 'none',\n    };\n\n    return (\n        <div ref={setNodeRef} style={style} {...attributes} {...listeners} className=\"p-2 bg-white/5 rounded-lg flex items-center gap-2 touch-none cursor-grab active:cursor-grabbing\">\n            <div className=\"w-8 h-8 flex items-center justify-center bg-black/20 rounded-md font-bold text-cyan-400 text-xs\">{player.position}</div>\n            <div>\n                <p className=\"font-bold text-white text-sm\">{player.name}</p>\n                <p className=\"text-xs text-gray-400\">{player.team}</p>\n            </div>\n        </div>\n    );\n};\n\n// Main VisualRoster component\nconst VisualRoster: React.FC<{ team: Team }> = ({ team }) => {\n    const { dispatch, state } = useAppState();\n    const activeLeague = state.leagues.find((l: any) => l.id === state.activeLeagueId);\n    \n    // Split roster into starters and bench, managed locally for instant feedback\n    const [starters, setStarters] = React.useState<Player[]>(team.roster.slice(0, 9));\n    const [bench, setBench] = React.useState<Player[]>(team.roster.slice(9));\n\n    // Update local state if team roster changes from props\n    React.useEffect(() => {\n        setStarters(team.roster.slice(0, 9));\n        setBench(team.roster.slice(9));\n    }, [team.roster]);\n\n    const sensors = useSensors(\n        useSensor(PointerSensor),\n        useSensor(KeyboardSensor, { coordinateGetter: sortableKeyboardCoordinates })\n    );\n\n    const findContainer = (id: number) => {\n        if (starters.some((p: any) => p.id === id)) return 'starters';\n        if (bench.some((p: any) => p.id === id)) return 'bench';\n        return null;\n    }\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { active, over } = event;\n\n        if (!over || active.id === over.id) {\n            return;\n        }\n\n        const activeContainer = findContainer(active.id as number);\n        const overContainer = findContainer(over.id as number);\n        \n        if (!activeContainer || !overContainer) return;\n\n        let newStarters = [...starters];\n        let newBench = [...bench];\n\n        if (activeContainer === overContainer) {\n            // Reordering within the same list\n            if (activeContainer === 'starters') {\n                const oldIndex = starters.findIndex((p: any) => p.id === active.id);\n                const newIndex = starters.findIndex((p: any) => p.id === over.id);\n                newStarters = arrayMove(starters, oldIndex, newIndex);\n            } else {\n                const oldIndex = bench.findIndex((p: any) => p.id === active.id);\n                const newIndex = bench.findIndex((p: any) => p.id === over.id);\n                newBench = arrayMove(bench, oldIndex, newIndex);\n            }\n        } else {\n            // Moving between lists\n            let movingPlayer: Player;\n             if (activeContainer === 'starters') {\n                // Move from starters to bench\n                const activeIndex = starters.findIndex((p: any) => p.id === active.id);\n                movingPlayer = starters[activeIndex];\n                newStarters.splice(activeIndex, 1);\n                const overIndex = bench.findIndex((p: any) => p.id === over.id);\n                newBench.splice(overIndex, 0, movingPlayer);\n            } else {\n                // Move from bench to starters\n                if (starters.length >= 9) {\n                    dispatch({ type: 'ADD_NOTIFICATION', payload: { message: \"Starting lineup is full (9 players).\", type: 'SYSTEM' } });\n                    return;\n                }\n                const activeIndex = bench.findIndex((p: any) => p.id === active.id);\n                movingPlayer = bench[activeIndex];\n                newBench.splice(activeIndex, 1);\n                const overIndex = starters.findIndex((p: any) => p.id === over.id);\n                newStarters.splice(overIndex, 0, movingPlayer);\n            }\n        }\n        \n        // Update local state for immediate feedback\n        setStarters(newStarters);\n        setBench(newBench);\n        \n        // Dispatch the final list of starter IDs to update global state\n        if (activeLeague) {\n            dispatch({\n                type: 'SET_LINEUP',\n                payload: {\n                    leagueId: activeLeague.id,\n                    teamId: team.id,\n                    playerIds: newStarters.map((p: any) => p.id)\n                }\n            });\n             dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Lineup updated!', type: 'SYSTEM' } });\n        }\n    };\n\n    return (\n        <DndContext sensors={sensors} collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n            <div className=\"p-4 space-y-6\">\n                <div>\n                    <h3 className=\"font-bold text-lg text-cyan-300 mb-2\">Starters ({starters.length}/9)</h3>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 p-2 bg-black/10 rounded-lg min-h-[10rem] border border-transparent\">\n                        <SortableContext items={starters.map(p => p.id)} strategy={rectSortingStrategy}>\n                            {starters.map(player => <SortablePlayerCard key={player.id} player={player} />)}\n                        </SortableContext>\n                        {starters.length === 0 && <p className=\"text-sm text-gray-500 col-span-full text-center p-8\">Drag players here to start them.</p>}\n                    </div>\n                </div>\n                <div>\n                    <h3 className=\"font-bold text-lg text-cyan-300 mb-2\">Bench ({bench.length})</h3>\n                     <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 p-2 bg-black/10 rounded-lg min-h-[10rem] border border-transparent\">\n                        <SortableContext items={bench.map(p => p.id)} strategy={rectSortingStrategy}>\n                           {bench.map(player => <SortablePlayerCard key={player.id} player={player} />)}\n                        </SortableContext>\n                        {bench.length === 0 && <p className=\"text-sm text-gray-500 col-span-full text-center p-8\">Your bench is empty.</p>}\n                    </div>\n                </div>\n            </div>\n        </DndContext>\n    );\n};\n\nexport default VisualRoster;","\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport type { Team } from '../../types';\nimport Modal from '../ui/Modal';\nimport { CloseIcon } from '../icons/CloseIcon';\n\ninterface ManageTradeBlockModalProps {\n    team: Team;\n    leagueId: string;\n    dispatch: React.Dispatch<any>;\n    onClose: () => void;\n}\n\nconst ManageTradeBlockModal: React.FC<ManageTradeBlockModalProps> = ({ team, leagueId, dispatch, onClose }) => {\n    const originalBlockedIds = React.useMemo(() => new Set(team.tradeBlock || []), [team.tradeBlock]);\n    const [selectedIds, setSelectedIds] = React.useState<Set<number>>(originalBlockedIds);\n\n    const handleTogglePlayer = (playerId: number) => {\n        setSelectedIds(prev => {\n            const newSet = new Set(prev);\n            if (newSet.has(playerId)) {\n                newSet.delete(playerId);\n            } else {\n                newSet.add(playerId);\n            }\n            return newSet;\n        });\n    };\n\n    const handleSaveChanges = () => {\n        // Find players to add\n        selectedIds.forEach((id: any) => {\n            if (!originalBlockedIds.has(id)) {\n                dispatch({ type: 'ADD_TO_TRADE_BLOCK', payload: { leagueId, teamId: team.id, playerId: id } });\n            }\n        });\n        // Find players to remove\n        originalBlockedIds.forEach((id: any) => {\n            if (!selectedIds.has(id)) {\n                dispatch({ type: 'REMOVE_FROM_TRADE_BLOCK', payload: { leagueId, teamId: team.id, playerId: id } });\n            }\n        });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Trade block updated!', type: 'SYSTEM' } });\n        onClose();\n    };\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.div\n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-md max-h-[80vh] flex flex-col\"\n                role=\"dialog\"\n                aria-modal=\"true\"\n                aria-labelledby=\"trade-block-title\"\n                onClick={(e: any) => e.stopPropagation()}\n                {...{\n                    initial: { opacity: 0, y: -20, scale: 0.95 },\n                    animate: { opacity: 1, y: 0, scale: 1 },\n                    exit: { opacity: 0, y: 20, scale: 0.95 },\n                }}\n            >\n                <header className=\"p-4 border-b border-[var(--panel-border)] flex justify-between items-center\">\n                    <h2 id=\"trade-block-title\" className=\"text-xl font-bold font-display\">Manage Trade Block</h2>\n                    <button onClick={onClose} className=\"p-1 rounded-full hover:bg-white/10\">\n                        <CloseIcon />\n                    </button>\n                </header>\n\n                <main className=\"p-4 overflow-y-auto space-y-2\">\n                    <p className=\"text-xs text-gray-400 pb-2\">Select players from your roster to make them available for trades.</p>\n                    {team.roster.map((player: any) => (\n                        <label key={player.id} className=\"flex items-center gap-3 p-2 bg-black/10 rounded-md cursor-pointer hover:bg-black/20\">\n                            <input \n                                type=\"checkbox\"\n                                checked={selectedIds.has(player.id)}\n                                onChange={() => handleTogglePlayer(player.id)}\n                                className=\"h-5 w-5 rounded bg-gray-700 border-gray-600 text-cyan-500 focus:ring-cyan-600\"\n                            />\n                            <div>\n                                <p className=\"font-bold\">{player.name}</p>\n                                <p className=\"text-xs text-gray-400\">{player.position} - {player.team}</p>\n                            </div>\n                        </label>\n                    ))}\n                </main>\n\n                <footer className=\"p-4 flex justify-end gap-4 border-t border-[var(--panel-border)]\">\n                    <button type=\"button\" onClick={onClose} className=\"mobile-touch-target px-4 py-3 bg-transparent border border-[var(--panel-border)] text-[var(--text-secondary)] font-bold rounded-lg hover:bg-white/10\">Cancel</button>\n                    <button onClick={handleSaveChanges} className=\"mobile-touch-target px-6 py-3 bg-gradient-to-r from-green-500 to-cyan-500 text-white font-bold rounded-lg\">Save Changes</button>\n                </footer>\n            </motion.div>\n        </Modal>\n    );\n};\nexport default ManageTradeBlockModal;","import React from 'react';\n\nexport const ScalesIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <path d=\"m16 16 3-8 3 8c-2 1-4 1-6 0\"/>\n        <path d=\"m2 16 3-8 3 8c-2 1-4 1-6 0\"/>\n        <path d=\"M7 21h10\"/>\n        <path d=\"M12 3v18\"/>\n        <path d=\"M3 7h18\"/>\n    </svg>\n);\n","\nimport React from 'react';\n\nexport const PaperPlaneIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"w-full h-full\"}>\n        <path d=\"m3 3 3 9-3 9 19-9Z\"/>\n        <path d=\"M6 12h16\"/>\n    </svg>\n);\n","\nimport React from 'react';\n\nexport const EmptyTumbleweedIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"w-full h-full\"}>\n        <path d=\"M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2Z\"/>\n        <path d=\"M12 12a10 10 0 0 0-4.4 8.1\"/>\n        <path d=\"M12 12a10 10 0 0 1 4.4 8.1\"/>\n        <path d=\"M12 12a10 10 0 0 0 4.4-8.1\"/>\n        <path d=\"M12 12a10 10 0 0 1-4.4-8.1\"/>\n        <path d=\"M2 12a10 10 0 0 1 8.1-4.4\"/>\n        <path d=\"M22 12a10 10 0 0 0-8.1-4.4\"/>\n        <path d=\"M2 12a10 10 0 0 0 8.1 4.4\"/>\n        <path d=\"M22 12a10 10 0 0 1-8.1 4.4\"/>\n    </svg>\n);\n","\n\n\n\nimport React from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport type { League, Team, Player } from '../../types';\nimport { players } from '../../data/players';\nimport { Widget } from '../ui/Widget';\nimport ManageTradeBlockModal from './ManageTradeBlockModal';\nimport { CloseIcon } from '../icons/CloseIcon';\nimport { ScalesIcon } from '../icons/ScalesIcon';\nimport Tabs from '../ui/Tabs';\nimport TradeOfferCard from './TradeOfferCard';\nimport useSound from '../../hooks/useSound';\nimport EmptyState from '../ui/EmptyState';\nimport { InboxIcon } from '../icons/InboxIcon';\nimport { PaperPlaneIcon } from '../icons/PaperPlaneIcon';\nimport { EmptyTumbleweedIcon } from '../icons/EmptyTumbleweedIcon';\n\nconst TradeCenterWidget: React.FC<{ league: League; team: Team; dispatch: React.Dispatch<any> }> = ({ league, team, dispatch }) => {\n    const [isBlockModalOpen, setIsBlockModalOpen] = React.useState(false);\n    const [activeTab, setActiveTab] = React.useState('incoming');\n    \n    const incomingOffers = league.tradeOffers.filter((o: any) => o.toTeamId === team.id && o?.status === 'PENDING');\n    const outgoingOffers = league.tradeOffers.filter((o: any) => o.fromTeamId === team.id);\n    const completedOffers = league.tradeOffers.filter((o: any) => o?.status !== 'PENDING' && (o.toTeamId === team.id || o.fromTeamId === team.id));\n\n    const playTradeSound = useSound('tradeOffer', 0.5);\n    const prevIncomingOffersCount = React.useRef(incomingOffers.length);\n    \n    React.useEffect(() => {\n        if (incomingOffers.length > prevIncomingOffersCount.current) {\n            playTradeSound();\n        }\n        prevIncomingOffersCount.current = incomingOffers.length;\n    }, [incomingOffers.length, playTradeSound]);\n\n\n    const myBlockedPlayers = React.useMemo(() => {\n        const playerMap = new Map(players.map((p: any) => [p.id, p]));\n        return (team.tradeBlock || []).map((id: any) => playerMap.get(id)).filter(Boolean) as Player[];\n    }, [team.tradeBlock]);\n\n    const handleRemoveFromBlock = (playerId: number) => {\n        dispatch({ type: 'REMOVE_FROM_TRADE_BLOCK', payload: { leagueId: league.id, teamId: team.id, playerId } });\n    };\n\n    const tabItems = [\n        { id: 'incoming', label: `Incoming (${incomingOffers.length})` },\n        { id: 'outgoing', label: 'Outgoing' },\n        { id: 'block', label: 'Trade Block' },\n    ];\n    \n    const renderContent = () => {\n        switch (activeTab) {\n            case 'incoming':\n                return incomingOffers.length > 0 ? (\n                    <div className=\"space-y-2\">\n                        {incomingOffers.map(offer => <TradeOfferCard key={offer.id} offer={offer} league={league} myTeamId={team.id} dispatch={dispatch} />)}\n                    </div>\n                ) : <EmptyState illustration={<InboxIcon />} message=\"No pending incoming offers.\" />;\n            case 'outgoing':\n                 return outgoingOffers.length > 0 ? (\n                    <div className=\"space-y-2\">\n                        {outgoingOffers.map(offer => <TradeOfferCard key={offer.id} offer={offer} league={league} myTeamId={team.id} dispatch={dispatch} />)}\n                    </div>\n                ) : <EmptyState illustration={<PaperPlaneIcon />} message=\"You haven't sent any offers.\" />;\n            case 'block':\n                return (\n                    <div>\n                        {myBlockedPlayers.length > 0 ? (\n                            <div className=\"space-y-1\">\n                                {myBlockedPlayers.map((p: any) => (\n                                    <div key={p.id} className=\"flex items-center justify-between text-xs bg-black/10 p-1.5 rounded-md\">\n                                        <span>{p.name} <span className=\"text-gray-400\">({p.position})</span></span>\n                                        <button onClick={() => handleRemoveFromBlock(p.id)} className=\"mobile-touch-target text-gray-500 hover:text-red-400 p-3 rounded-full\" aria-label=\"Remove from block\"><CloseIcon className=\"w-3 h-3\"/></button>\n                                    </div>\n                                ))}\n                            </div>\n                        ) : (\n                            <EmptyState illustration={<EmptyTumbleweedIcon />} message=\"You have no players on the block.\" />\n                        )}\n                        <button onClick={() => setIsBlockModalOpen(true)} className=\"w-full mt-2 py-1.5 text-xs font-bold bg-cyan-500/10 text-cyan-300 rounded-md hover:bg-cyan-500/20\">\n                            Manage My Block\n                        </button>\n                    </div>\n                );\n            default:\n                return null;\n        }\n    }\n\n\n    return (\n        <>\n            <Widget title=\"Trade Center\" icon={<ScalesIcon />}>\n                <div className=\"px-3 border-b border-[var(--panel-border)]\">\n                    <Tabs items={tabItems} activeTab={activeTab} onTabChange={setActiveTab} />\n                </div>\n                <div className=\"p-3\">\n                    <AnimatePresence mode=\"wait\">\n                        <motion.div\n                            key={activeTab}\n                            {...{\n                                initial: { opacity: 0, y: 10 },\n                                animate: { opacity: 1, y: 0 },\n                                exit: { opacity: 0, y: -10 },\n                                transition: { duration: 0.2 },\n                            }}\n                        >\n                           {renderContent()}\n                        </motion.div>\n                    </AnimatePresence>\n                </div>\n            </Widget>\n            <AnimatePresence>\n                {isBlockModalOpen && <ManageTradeBlockModal team={team} leagueId={league.id} dispatch={dispatch} onClose={() => setIsBlockModalOpen(false)} />}\n            </AnimatePresence>\n        </>\n    );\n};\nexport default TradeCenterWidget;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport type { Team, Player, TradeAnalysis, DraftPickAsset, TradeSuggestion } from '../../types';\nimport { players } from '../../data/players';\nimport Modal from '../ui/Modal';\nimport { ArrowRightLeftIcon } from '../icons/ArrowRightLeftIcon';\nimport { SparklesIcon } from '../icons/SparklesIcon';\nimport { analyzeTrade } from '../../services/geminiService';\n\ninterface ProposeTradeModalProps {\n    myTeam: Team;\n    otherTeam: Team;\n    leagueId: string;\n    dispatch: React.Dispatch<any>;\n    onClose: () => void;\n    initialOffer?: Omit<TradeSuggestion, 'toTeamId' | 'rationale'>;\n}\n\nconst AssetSelectItem: React.FC<{ label: string; subtext: string; isSelected: boolean; onToggle: () => void; }> = ({ label, subtext, isSelected, onToggle }) => (\n    <div\n        onClick={onToggle}\n        className={`flex items-center gap-3 p-2 rounded-md cursor-pointer transition-colors ${\n            isSelected ? 'bg-cyan-500/30 ring-2 ring-cyan-400' : 'bg-black/10 hover:bg-black/20'\n        }`}\n    >\n        <div className={`w-2 h-8 rounded-full ${isSelected ? 'bg-cyan-400' : 'bg-gray-600'}`}></div>\n        <div>\n            <p className=\"font-bold text-sm\">{label}</p>\n            <p className=\"text-xs text-gray-400\">{subtext}</p>\n        </div>\n    </div>\n);\n\n\nconst ProposeTradeModal: React.FC<ProposeTradeModalProps> = ({ myTeam, otherTeam, leagueId, dispatch, onClose, initialOffer }) => {\n    const [playersToSend, setPlayersToSend] = React.useState<Set<number>>(new Set(initialOffer?.playersToSend));\n    const [playersToReceive, setPlayersToReceive] = React.useState<Set<number>>(new Set(initialOffer?.playersToReceive));\n    const [picksToSend, setPicksToSend] = React.useState<Set<string>>(new Set()); // key: \"season-round\"\n    const [picksToReceive, setPicksToReceive] = React.useState<Set<string>>(new Set());\n    const [analysis, setAnalysis] = React.useState<TradeAnalysis | null>(null);\n    const [isAnalyzing, setIsAnalyzing] = React.useState(false);\n\n    const toggleAsset = (id: string | number, list: 'sendPlayer' | 'receivePlayer' | 'sendPick' | 'receivePick') => {\n        let state: Set<any>, setState: React.Dispatch<React.SetStateAction<Set<any>>>;\n        switch(list) {\n            case 'sendPlayer': [state, setState] = [playersToSend, setPlayersToSend]; break;\n            case 'receivePlayer': [state, setState] = [playersToReceive, setPlayersToReceive]; break;\n            case 'sendPick': [state, setState] = [picksToSend, setPicksToSend]; break;\n            case 'receivePick': [state, setState] = [picksToReceive, setPicksToReceive]; break;\n        }\n        const newSet = new Set(state);\n        if (newSet.has(id)) newSet.delete(id);\n        else newSet.add(id);\n        setState(newSet);\n        setAnalysis(null); // Reset analysis when trade changes\n    };\n    \n    const stringToPick = (key: string): DraftPickAsset => {\n        const [season, round] = key.split('-');\n        return { season: parseInt(season), round: parseInt(round) };\n    };\n\n    const handleAnalyze = async () => {\n        if ([playersToSend, playersToReceive, picksToSend, picksToReceive].every((s: any) => s.size === 0)) return;\n        setIsAnalyzing(true);\n        setAnalysis(null);\n        \n        const toSendP = players.filter((p: any) => playersToSend.has(p.id));\n        const toReceiveP = players.filter((p: any) => playersToReceive.has(p.id));\n        const toSendDK = Array.from(picksToSend).map(stringToPick);\n        const toReceiveDK = Array.from(picksToReceive).map(stringToPick);\n        \n        const result = await analyzeTrade(myTeam.name, otherTeam.name, toSendP, toReceiveP, toSendDK, toReceiveDK);\n        setAnalysis(result);\n        setIsAnalyzing(false);\n    };\n\n    const handleSendOffer = () => {\n        if ([playersToSend, playersToReceive, picksToSend, picksToReceive].every((s: any) => s.size === 0)) return;\n        dispatch({\n            type: 'PROPOSE_TRADE',\n            payload: {\n                leagueId,\n                offer: {\n                    fromTeamId: myTeam.id,\n                    toTeamId: otherTeam.id,\n                    playersOffered: Array.from(playersToSend),\n                    playersRequested: Array.from(playersToReceive),\n                    draftPicksOffered: Array.from(picksToSend).map(stringToPick),\n                    draftPicksRequested: Array.from(picksToReceive).map(stringToPick),\n                    tradeAnalysis: analysis,\n                }\n            }\n        });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `Trade offer sent to ${otherTeam.name}!`, type: 'TRADE' }});\n        onClose();\n    };\n    \n    const getWinnerStyling = () => {\n        if (!analysis || !analysis.winner) return { text: '', color: 'text-gray-400' };\n        switch(analysis.winner) {\n            case 'TEAM_A': return { text: `${myTeam.name} wins`, color: 'text-green-400' };\n            case 'TEAM_B': return { text: `${otherTeam.name} wins`, color: 'text-red-400' };\n            case 'EVEN': return { text: 'Fair Trade', color: 'text-yellow-400' };\n            default: return { text: '', color: 'text-gray-400' };\n        }\n    };\n\n    const winnerStyle = getWinnerStyling();\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.div\n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-5xl max-h-[90vh] flex flex-col\"\n                {...{\n                    initial: { opacity: 0, scale: 0.95 },\n                    animate: { opacity: 1, scale: 1 },\n                    exit: { opacity: 0, scale: 0.95 },\n                }}\n            >\n                <header className=\"p-4 border-b border-[var(--panel-border)]\">\n                    <h2 className=\"text-xl font-bold font-display text-center\">Propose Trade to {otherTeam.name}</h2>\n                </header>\n\n                <main className=\"flex-grow p-4 grid grid-cols-1 md:grid-cols-[1fr_auto_1fr] gap-4 overflow-y-auto\">\n                    {/* My Team */}\n                    <div className=\"flex flex-col gap-4\">\n                        <div className=\"flex flex-col\">\n                            <h3 className=\"font-semibold text-center mb-2\">{myTeam.name} Gives:</h3>\n                            <div className=\"bg-black/10 p-2 rounded-lg space-y-2 flex-grow h-48 overflow-y-auto\">\n                                {myTeam.roster.map(p => <AssetSelectItem key={p.id} label={p.name} subtext={`${p.position} - ${p.team}`} isSelected={playersToSend.has(p.id)} onToggle={() => toggleAsset(p.id, 'sendPlayer')} />)}\n                            </div>\n                        </div>\n                         <div className=\"flex flex-col\">\n                            <h3 className=\"font-semibold text-center mb-2\">Draft Picks:</h3>\n                            <div className=\"bg-black/10 p-2 rounded-lg space-y-2 flex-grow h-32 overflow-y-auto\">\n                                {(myTeam.futureDraftPicks || []).map(p => <AssetSelectItem key={`${p.season}-${p.round}`} label={`${p.season} Round ${p.round}`} subtext=\"Draft Pick\" isSelected={picksToSend.has(`${p.season}-${p.round}`)} onToggle={() => toggleAsset(`${p.season}-${p.round}`, 'sendPick')} />)}\n                            </div>\n                        </div>\n                    </div>\n                    {/* Separator */}\n                    <div className=\"flex items-center justify-center\">\n                        <ArrowRightLeftIcon className=\"w-8 h-8 text-cyan-400\" />\n                    </div>\n                    {/* Other Team */}\n                    <div className=\"flex flex-col gap-4\">\n                        <div className=\"flex flex-col\">\n                            <h3 className=\"font-semibold text-center mb-2\">{otherTeam.name} Gives:</h3>\n                            <div className=\"bg-black/10 p-2 rounded-lg space-y-2 flex-grow h-48 overflow-y-auto\">\n                               {otherTeam.roster.map(p => <AssetSelectItem key={p.id} label={p.name} subtext={`${p.position} - ${p.team}`} isSelected={playersToReceive.has(p.id)} onToggle={() => toggleAsset(p.id, 'receivePlayer')} />)}\n                            </div>\n                        </div>\n                         <div className=\"flex flex-col\">\n                            <h3 className=\"font-semibold text-center mb-2\">Draft Picks:</h3>\n                            <div className=\"bg-black/10 p-2 rounded-lg space-y-2 flex-grow h-32 overflow-y-auto\">\n                                {(otherTeam.futureDraftPicks || []).map(p => <AssetSelectItem key={`${p.season}-${p.round}`} label={`${p.season} Round ${p.round}`} subtext=\"Draft Pick\" isSelected={picksToReceive.has(`${p.season}-${p.round}`)} onToggle={() => toggleAsset(`${p.season}-${p.round}`, 'receivePick')} />)}\n                            </div>\n                        </div>\n                    </div>\n                </main>\n                \n                 {(analysis || isAnalyzing) && (\n                    <div className=\"p-4 border-t border-[var(--panel-border)]\">\n                         <h3 className=\"font-bold text-center text-cyan-300 mb-2\">Oracle's Analysis</h3>\n                         {isAnalyzing ? (\n                             <div className=\"h-20 flex items-center justify-center text-sm text-gray-400\">Consulting the cosmos...</div>\n                         ) : analysis && (\n                            <div className=\"text-center\">\n                                <p className={`font-bold text-lg ${winnerStyle.color}`}>{winnerStyle.text}</p>\n                                <p className=\"text-xs text-gray-300 italic mt-1\">\"{analysis.summary}\"</p>\n                            </div>\n                         )}\n                    </div>\n                 )}\n\n\n                <footer className=\"p-4 flex justify-between items-center gap-4 border-t border-[var(--panel-border)]\">\n                    <button type=\"button\" onClick={onClose} className=\"mobile-touch-target px-4 py-3 bg-transparent border border-[var(--panel-border)] text-[var(--text-secondary)] font-bold rounded-lg hover:bg-white/10\">Cancel</button>\n                    <div className=\"flex gap-2\">\n                        <button onClick={handleAnalyze} disabled={isAnalyzing} className=\"mobile-touch-target flex items-center gap-2 px-4 py-3 bg-transparent border border-cyan-400/50 text-cyan-300 font-bold rounded-lg hover:bg-cyan-400/20 disabled:opacity-50\">\n                            {isAnalyzing ? <div className=\"w-5 h-5 border-2 border-t-transparent border-white rounded-full animate-spin\"></div> : <SparklesIcon />}\n                            Analyze\n                        </button>\n                        <button onClick={handleSendOffer} className=\"mobile-touch-target px-6 py-3 bg-gradient-to-r from-green-500 to-cyan-500 text-white font-bold rounded-lg\">Send Offer</button>\n                    </div>\n                </footer>\n            </motion.div>\n        </Modal>\n    );\n};\n\nexport default ProposeTradeModal;","\n\nimport React from 'react';\nimport { AnimatePresence } from 'framer-motion';\nimport type { League, Team } from '../../types';\nimport { Widget } from '../ui/Widget';\nimport ProposeTradeModal from './ProposeTradeModal';\nimport { ArrowRightLeftIcon } from '../icons/ArrowRightLeftIcon';\nimport Tooltip from '../ui/Tooltip';\n\ninterface LeagueTeamsListProps {\n    league: League;\n    myTeamId: number;\n    dispatch: React.Dispatch<any>;\n}\n\nconst LeagueTeamsList: React.FC<LeagueTeamsListProps> = ({ league, myTeamId, dispatch }) => {\n    const [isModalOpen, setIsModalOpen] = React.useState(false);\n    const [selectedOpponent, setSelectedOpponent] = React.useState<Team | null>(null);\n\n    const myTeam = league.teams.find((t: any) => t.id === myTeamId)!;\n    const opponents = league.teams.filter((t: any) => t.id !== myTeamId);\n\n    const isTradeDeadlinePassed = league.currentWeek > league.settings.tradeDeadline;\n\n    const handleProposeTrade = (opponent: Team) => {\n        setSelectedOpponent(opponent);\n        setIsModalOpen(true);\n    };\n\n    const handleCloseModal = () => {\n        setIsModalOpen(false);\n        setSelectedOpponent(null);\n    };\n\n    return (\n        <>\n            <Widget title=\"League Teams\" icon={<ArrowRightLeftIcon />}>\n                <div className=\"p-3 space-y-2\">\n                    {opponents.map((team: any) => (\n                        <div key={team.id} className=\"flex items-center justify-between p-2 bg-black/10 rounded-md\">\n                            <div className=\"flex items-center gap-3\">\n                                <span className=\"text-xl\">{team.avatar}</span>\n                                <div>\n                                    <p className=\"font-semibold text-sm\">{team.name}</p>\n                                    <p className=\"text-xs text-gray-400\">{team.owner.name}</p>\n                                </div>\n                            </div>\n                            <Tooltip text={isTradeDeadlinePassed ? `The trade deadline (Week ${league.settings.tradeDeadline}) has passed.` : `Propose trade to ${team.name}`}>\n                                <button \n                                    onClick={() => handleProposeTrade(team)}\n                                    disabled={isTradeDeadlinePassed}\n                                    className=\"px-2.5 py-1.5 text-xs font-bold bg-cyan-500/10 text-cyan-300 rounded-md hover:bg-cyan-500/20 disabled:opacity-50 disabled:cursor-not-allowed\"\n                                >\n                                    Propose Trade\n                                </button>\n                            </Tooltip>\n                        </div>\n                    ))}\n                </div>\n            </Widget>\n            <AnimatePresence>\n                {isModalOpen && selectedOpponent && (\n                    <ProposeTradeModal\n                        myTeam={myTeam}\n                        otherTeam={selectedOpponent}\n                        leagueId={league.id}\n                        dispatch={dispatch}\n                        onClose={handleCloseModal}\n                    />\n                )}\n            </AnimatePresence>\n        </>\n    );\n};\n\nexport default LeagueTeamsList;","\nimport React from 'react';\n\nexport const TargetIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <circle cx=\"12\" cy=\"12\" r=\"10\" />\n        <circle cx=\"12\" cy=\"12\" r=\"6\" />\n        <circle cx=\"12\" cy=\"12\" r=\"2\" />\n    </svg>\n);","\nimport React from 'react';\n\nexport const WandIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-4 w-4\"}>\n        <path d=\"M15 4V2\" />\n        <path d=\"M15 16v-2\" />\n        <path d=\"M8 9h2\" />\n        <path d=\"M20 9h2\" />\n        <path d=\"M17.8 11.8 19 13\" />\n        <path d=\"M15 9a3 3 0 0 0-3-3\" />\n        <path d=\"M12 9H9\" />\n        <path d=\"M12 12a3 3 0 0 0-3-3\" />\n        <path d=\"M6.2 6.2 5 5\" />\n        <path d=\"M12 12v3\" />\n        <path d=\"m3.4 17.6 1.4-1.4\" />\n        <path d=\"m19 5-8 8\" />\n    </svg>\n);\n","\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport type { DailyBriefingItem, Player } from '../../types';\nimport { players } from '../../data/players';\nimport { TargetIcon } from '../icons/TargetIcon';\nimport { LightbulbIcon } from '../icons/LightbulbIcon';\nimport { AlertTriangleIcon } from '../icons/AlertTriangleIcon';\nimport { SparklesIcon } from '../icons/SparklesIcon';\nimport { ArrowRightLeftIcon } from '../icons/ArrowRightLeftIcon';\nimport { WandIcon } from '../icons/WandIcon';\nimport { PlusCircleIcon } from '../icons/PlusCircleIcon';\nimport { FireIcon } from '../icons/FireIcon';\n\ninterface BriefingItemCardProps {\n    item: DailyBriefingItem;\n    dispatch: React.Dispatch<any>;\n    onGetAdvice?: (playerIds: number[]) => void;\n    onClaimPlayer?: (player: Player) => void;\n}\n\nconst itemConfig = {\n    MATCHUP_PREVIEW: { icon: <TargetIcon />, color: 'text-blue-400' },\n    WAIVER_GEM: { icon: <LightbulbIcon />, color: 'text-green-400' },\n    ROSTER_WARNING: { icon: <AlertTriangleIcon />, color: 'text-red-400' },\n    PLAYER_SPOTLIGHT: { icon: <SparklesIcon />, color: 'text-yellow-400' },\n    TRADE_TIP: { icon: <ArrowRightLeftIcon />, color: 'text-purple-400' },\n    ON_THE_HOT_SEAT: { icon: <FireIcon />, color: 'text-orange-400' },\n};\n\nconst BriefingItemCard: React.FC<BriefingItemCardProps> = ({ item, dispatch, onGetAdvice, onClaimPlayer }) => {\n    const config = itemConfig[item.type] || { icon: <SparklesIcon />, color: 'text-gray-400' };\n\n    const handleCardClick = () => {\n        if (item.type === 'WAIVER_GEM') {\n            dispatch({ type: 'SET_VIEW', payload: 'WAIVER_WIRE' });\n        } else if (item.type === 'MATCHUP_PREVIEW') {\n            dispatch({ type: 'SET_VIEW', payload: 'MATCHUP' });\n        } else if (item.type === 'TRADE_TIP') {\n            // Future: Navigate to trade center or a specific trade proposal view\n        }\n    };\n\n    const canGetAdvice = (item.type === 'ROSTER_WARNING' || item.type === 'ON_THE_HOT_SEAT') && item.relatedPlayerIds && item.relatedPlayerIds.length > 0 && onGetAdvice;\n    const waiverGemPlayer = item.type === 'WAIVER_GEM' && item.playerName ? players.find((p: any) => p.name === item.playerName) : null;\n    const canClaimPlayer = waiverGemPlayer && onClaimPlayer;\n\n    const actionButton = () => {\n        if (canGetAdvice) {\n            return (\n                <button\n                    onClick={(e: any) => {\n                        e.stopPropagation();\n                        onGetAdvice(item.relatedPlayerIds!);\n                    }}\n                    className=\"mt-2 flex items-center gap-1.5 px-2 py-1 bg-cyan-500/10 text-cyan-300 text-xs font-bold rounded-md hover:bg-cyan-500/20\"\n                >\n                    <WandIcon />\n                    Get Lineup Advice\n                </button>\n            );\n        }\n        if (canClaimPlayer) {\n             return (\n                <button\n                    onClick={(e: any) => {\n                        e.stopPropagation();\n                        onClaimPlayer(waiverGemPlayer);\n                    }}\n                    className=\"mt-2 flex items-center gap-1.5 px-2 py-1 bg-green-500/10 text-green-300 text-xs font-bold rounded-md hover:bg-green-500/20\"\n                >\n                    <PlusCircleIcon />\n                    Claim Player\n                </button>\n            );\n        }\n        return null;\n    }\n    \n    return (\n        <motion.div\n            onClick={handleCardClick}\n            className=\"flex items-start gap-3 p-2 bg-black/10 rounded-lg cursor-pointer hover:bg-black/20\"\n            {...{\n                layout: true,\n                initial: { opacity: 0, y: 10 },\n                animate: { opacity: 1, y: 0 },\n                exit: { opacity: 0 },\n                transition: { type: 'spring', stiffness: 300, damping: 30 },\n            }}\n        >\n            <div className={`mt-0.5 ${config.color}`}>\n                {config.icon}\n            </div>\n            <div className=\"flex-1\">\n                <h4 className=\"font-bold text-sm text-white\">{item.title}</h4>\n                <p className=\"text-xs text-gray-300\">{item.summary}</p>\n                {actionButton()}\n            </div>\n        </motion.div>\n    );\n};\n\nexport default BriefingItemCard;","\n\nimport React from 'react';\nimport type { Team, League, DailyBriefingItem, AiLineupSuggestion, Player } from '../../types';\nimport { Widget } from '../ui/Widget';\nimport { SparklesIcon } from '../icons/SparklesIcon';\nimport { generateDailyBriefing, getLineupSolution } from '../../services/geminiService';\nimport BriefingItemCard from './BriefingItemCard';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { players } from '../../data/players';\nimport PlaceClaimModal from './PlaceClaimModal';\nimport LoadingSpinner from '../ui/LoadingSpinner';\nimport { Avatar } from '../ui/Avatar';\n\ninterface DailyBriefingWidgetProps {\n    myTeam: Team;\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nconst LineupSuggestion: React.FC<{ suggestion: AiLineupSuggestion, onAccept: () => void, onDismiss: () => void }> = ({ suggestion, onAccept, onDismiss }) => {\n    const suggestedPlayers = suggestion.recommendedStarters.map((id: any) => players.find((p: any) => p.id === id)).filter(Boolean) as Player[];\n\n    return (\n        <motion.div \n            className=\"bg-cyan-900/50 border-t-2 border-cyan-400 p-3 overflow-hidden\"\n            {...{\n                initial: { opacity: 0, height: 0 },\n                animate: { opacity: 1, height: 'auto' },\n                exit: { opacity: 0, height: 0 },\n            }}\n        >\n            <h5 className=\"font-bold text-sm text-cyan-300\">Oracle's Suggested Lineup</h5>\n            <p className=\"text-xs italic text-gray-400 mt-1 mb-2\">\"{suggestion.reasoning}\"</p>\n            <div className=\"flex flex-wrap gap-1 text-xs mb-3\">\n                {suggestedPlayers.map((p: any) => (\n                    <div key={p.id} className=\"bg-black/20 px-1.5 py-0.5 rounded-full flex items-center gap-1\">\n                        <Avatar avatar={p.astralIntelligence?.spiritAnimal?.split(',')[0] || '🏈'} className=\"w-4 h-4 text-xs rounded-full\" />\n                        <span>{p.name}</span>\n                    </div>\n                ))}\n            </div>\n            <div className=\"flex justify-end gap-2\">\n                <button onClick={onDismiss} className=\"px-2 py-0.5 text-xs font-bold rounded-md bg-transparent text-gray-400 hover:bg-white/10\">Dismiss</button>\n                <button onClick={onAccept} className=\"px-2 py-0.5 text-xs font-bold rounded-md bg-green-500 text-white hover:bg-green-400\">Set My Lineup</button>\n            </div>\n        </motion.div>\n    );\n};\n\n\nexport const DailyBriefingWidget: React.FC<DailyBriefingWidgetProps> = ({ myTeam, league, dispatch }) => {\n    const [briefing, setBriefing] = React.useState<DailyBriefingItem[] | null>(null);\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [isAdviceLoading, setIsAdviceLoading] = React.useState(false);\n    const [lineupSuggestion, setLineupSuggestion] = React.useState<AiLineupSuggestion | null>(null);\n    const [claimModalPlayer, setClaimModalPlayer] = React.useState<Player | null>(null);\n\n    React.useEffect(() => {\n        const fetchBriefing = async () => {\n            setIsLoading(true);\n            try {\n                const data = await generateDailyBriefing(league, myTeam);\n                setBriefing(data);\n            } catch (e) {\n                console.error(e);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        // Only run for current week in season\n        if (league?.status === 'IN_SEASON' || league?.status === 'PLAYOFFS') {\n            fetchBriefing();\n        } else {\n            setIsLoading(false);\n        }\n    }, [league.id, league.currentWeek, myTeam.id]);\n\n    const handleGetAdvice = async (playerIds: number[]) => {\n        setIsAdviceLoading(true);\n        setLineupSuggestion(null);\n        try {\n            const suggestion = await getLineupSolution(myTeam, league, playerIds[0]);\n            setLineupSuggestion(suggestion);\n        } catch (e) {\n            console.error(e);\n            dispatch({ type: 'ADD_NOTIFICATION', payload: \"Could not get lineup advice.\" });\n        } finally {\n            setIsAdviceLoading(false);\n        }\n    };\n\n    const handleAcceptLineup = () => {\n        if (!lineupSuggestion) return;\n        dispatch({\n            type: 'SET_LINEUP',\n            payload: {\n                leagueId: league.id,\n                teamId: myTeam.id,\n                playerIds: lineupSuggestion.recommendedStarters,\n            }\n        });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: \"Oracle's lineup has been set!\", type: 'SYSTEM' } });\n        setLineupSuggestion(null);\n    };\n    \n    const handleClaimPlayer = (player: Player) => {\n        setClaimModalPlayer(player);\n    };\n\n    const renderContent = () => {\n        if (isLoading) {\n            return <LoadingSpinner size=\"sm\" text=\"Consulting the Oracle...\" />;\n        }\n        if (!briefing || briefing.length === 0) {\n            return <p className=\"text-center text-xs text-gray-400 py-4\">The Oracle is quiet today. No new briefings.</p>;\n        }\n        return (\n            <div className=\"space-y-2\">\n                {briefing.map((item, index) => (\n                    <BriefingItemCard key={index} item={item} dispatch={dispatch} onGetAdvice={handleGetAdvice} onClaimPlayer={handleClaimPlayer} />\n                ))}\n            </div>\n        );\n    }\n    \n    return (\n        <Widget title=\"Daily Briefing\" icon={<SparklesIcon />}>\n            <div className=\"p-3\">\n                {renderContent()}\n            </div>\n             {isAdviceLoading && <LoadingSpinner size=\"sm\" text=\"Optimizing lineup...\" />}\n            <AnimatePresence>\n                {lineupSuggestion && (\n                    <LineupSuggestion\n                        suggestion={lineupSuggestion}\n                        onAccept={handleAcceptLineup}\n                        onDismiss={() => setLineupSuggestion(null)}\n                    />\n                )}\n            </AnimatePresence>\n             <AnimatePresence>\n                {claimModalPlayer && (\n                    <PlaceClaimModal\n                        playerToAdd={claimModalPlayer}\n                        myTeam={myTeam}\n                        leagueId={league.id}\n                        dispatch={dispatch}\n                        onClose={() => setClaimModalPlayer(null)}\n                    />\n                )}\n            </AnimatePresence>\n        </Widget>\n    );\n};","\nimport React from 'react';\nimport type { Team, League } from '../../types';\nimport { Widget } from '../ui/Widget';\nimport { TargetIcon } from '../icons/TargetIcon';\nimport { Avatar } from '../ui/Avatar';\n\ninterface CurrentMatchupWidgetProps {\n    myTeam: Team;\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nconst CurrentMatchupWidget: React.FC<CurrentMatchupWidgetProps> = ({ myTeam, league, dispatch }) => {\n    const nextMatchup = league.schedule.find((m: any) => \n        m.week === league.currentWeek && \n        (m.teamA.teamId === myTeam.id || m.teamB.teamId === myTeam.id)\n    );\n\n    if (!nextMatchup) {\n        return (\n            <Widget title=\"Upcoming Matchup\" icon={<TargetIcon />}>\n                <div className=\"p-4 text-center text-sm text-gray-400\">\n                    You have a bye this week.\n                </div>\n            </Widget>\n        );\n    }\n\n    const opponentId = nextMatchup.teamA.teamId === myTeam.id ? nextMatchup.teamB.teamId : nextMatchup.teamA.teamId;\n    const opponent = league.teams.find((t: any) => t.id === opponentId);\n\n    if (!opponent) {\n        return null;\n    }\n\n    return (\n        <Widget title={`Week ${league.currentWeek} Matchup`} icon={<TargetIcon />}>\n            <div className=\"p-4 flex flex-col items-center justify-center text-center\">\n                <p className=\"text-xs text-gray-400 mb-2\">You are facing:</p>\n                <Avatar avatar={opponent.avatar} className=\"w-16 h-16 text-4xl rounded-lg\" />\n                <p className=\"font-bold text-lg mt-2\">{opponent.name}</p>\n                <p className=\"text-sm text-gray-400\">({opponent.record.wins}-{opponent.record.losses}-{opponent.record.ties})</p>\n                <button \n                    onClick={() => dispatch({ type: 'SET_VIEW', payload: 'MATCHUP' })}\n                    className=\"mt-3 w-full px-4 py-1.5 text-xs font-bold bg-cyan-500/10 text-cyan-300 rounded-md hover:bg-cyan-500/20\"\n                >\n                    View Full Matchup\n                </button>\n            </div>\n        </Widget>\n    );\n};\n\nexport default CurrentMatchupWidget;\n","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport { Widget } from '../ui/Widget';\nimport { SparklesIcon } from '../icons/SparklesIcon';\nimport { generateTeamChemistryReport } from '../../services/geminiService';\nimport type { League, Team } from '../../types';\n\ninterface TeamChemistryWidgetProps {\n    myTeam: Team;\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nconst TeamChemistryWidget: React.FC<TeamChemistryWidgetProps> = ({ myTeam, league, dispatch }) => {\n    const [isLoading, setIsLoading] = React.useState(false);\n    const report = myTeam.chemistryReport;\n\n    const handleFetchReport = async () => {\n        if(isLoading) return;\n        setIsLoading(true);\n        try {\n            const fetchedReport = await generateTeamChemistryReport(myTeam);\n            if(fetchedReport) {\n                dispatch({ type: 'SET_TEAM_CHEMISTRY', payload: { leagueId: league.id, teamId: myTeam.id, report: fetchedReport } });\n            }\n        } catch (e) {\n            console.error(\"Error fetching chemistry report\", e);\n            dispatch({ type: 'ADD_NOTIFICATION', payload: 'Could not fetch chemistry report.' });\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <Widget title=\"Team Chemistry\" icon={<SparklesIcon />}>\n            <div className=\"p-4\">\n                {report ? (\n                     <p className=\"text-sm text-gray-300 italic\">\"{report}\"</p>\n                ) : (\n                    <p className=\"text-center text-sm text-gray-400\">The Oracle can analyze your roster for strategic balance and player synergy.</p>\n                )}\n               \n                <button\n                    onClick={handleFetchReport}\n                    disabled={isLoading}\n                    className=\"w-full mt-3 flex items-center justify-center gap-2 px-4 py-1.5 bg-transparent border border-cyan-400/50 text-cyan-300 font-bold text-xs rounded-md hover:bg-cyan-400/20 disabled:opacity-50\"\n                >\n                    {isLoading ? (\n                        <>\n                            <div className=\"w-4 h-4 border-2 border-t-transparent border-white rounded-full animate-spin\"></div>\n                            <span>Analyzing...</span>\n                        </>\n                    ) : (\n                        <>\n                            <SparklesIcon />\n                            <span>{report ? 'Re-analyze Chemistry' : 'Analyze My Team'}</span>\n                        </>\n                    )}\n                </button>\n            </div>\n        </Widget>\n    );\n};\n\nexport default TeamChemistryWidget;\n","\nimport React from 'react';\nimport { Widget } from '../ui/Widget';\nimport { TelescopeIcon } from '../icons/TelescopeIcon';\nimport { generateSeasonOutlook } from '../../services/geminiService';\nimport type { League, Team } from '../../types';\nimport LoadingSpinner from '../ui/LoadingSpinner';\n\ninterface SeasonOutlookWidgetProps {\n    myTeam: Team;\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nconst SeasonOutlookWidget: React.FC<SeasonOutlookWidgetProps> = ({ myTeam, league, dispatch }) => {\n    const [isLoading, setIsLoading] = React.useState(false);\n    const outlook = myTeam.seasonOutlook;\n\n    React.useEffect(() => {\n        const fetchOutlook = async () => {\n            if (!outlook) {\n                setIsLoading(true);\n                try {\n                    const fetchedOutlook = await generateSeasonOutlook(myTeam);\n                    if (fetchedOutlook) {\n                        dispatch({ type: 'SET_SEASON_OUTLOOK', payload: { leagueId: league.id, teamId: myTeam.id, outlook: fetchedOutlook } });\n                    }\n                } catch (e) {\n                    console.error(\"Error fetching season outlook\", e);\n                } finally {\n                    setIsLoading(false);\n                }\n            }\n        };\n\n        if (league?.status !== 'PRE_DRAFT' && league?.status !== 'DRAFTING') {\n            fetchOutlook();\n        }\n    }, [league?.status, myTeam, league.id, dispatch, outlook]);\n\n\n    return (\n        <Widget title=\"Season Outlook\" icon={<TelescopeIcon />}>\n            <div className=\"p-4\">\n                {isLoading ? (\n                    <LoadingSpinner size=\"sm\" text=\"Peering into the future...\" />\n                ) : outlook ? (\n                    <div className=\"space-y-2 text-sm text-center\">\n                        <p className=\"italic text-gray-300\">\"{outlook.prediction}\"</p>\n                        <p className=\"text-xs text-gray-400 pt-2 border-t border-white/10\">\n                            <strong className=\"text-yellow-300\">Key Player:</strong> {outlook.keyPlayer}\n                        </p>\n                    </div>\n                ) : (\n                    <p className=\"text-center text-sm text-gray-400\">\n                        The Oracle will reveal your season's fate after the draft is complete.\n                    </p>\n                )}\n            </div>\n        </Widget>\n    );\n};\n\nexport default SeasonOutlookWidget;\n","\nimport React from 'react';\n\nexport const ImageIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-4 w-4\"}>\n        <rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" ry=\"2\"/>\n        <circle cx=\"9\" cy=\"9\" r=\"2\"/>\n        <path d=\"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\"/>\n    </svg>\n);\n","\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport Modal from '../ui/Modal';\nimport { ImageIcon } from '../icons/ImageIcon';\n\ninterface EditHeaderModalProps {\n    leagueId: string;\n    teamId: number;\n    currentHeader?: string;\n    dispatch: React.Dispatch<any>;\n    onClose: () => void;\n}\n\nconst EditHeaderModal: React.FC<EditHeaderModalProps> = ({ leagueId, teamId, currentHeader, dispatch, onClose }) => {\n    const [imageUrl, setImageUrl] = React.useState(currentHeader || '');\n\n    const handleSave = () => {\n        dispatch({ type: 'UPDATE_TEAM_HEADER', payload: { leagueId, teamId, imageUrl } });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: 'Team header updated!' });\n        onClose();\n    };\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.div\n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-md\"\n                {...{\n                    initial: { opacity: 0, scale: 0.95 },\n                    animate: { opacity: 1, scale: 1 },\n                }}\n            >\n                <header className=\"p-4 border-b border-[var(--panel-border)]\">\n                    <h2 className=\"text-xl font-bold font-display flex items-center gap-2\">\n                        <ImageIcon />\n                        Edit Team Header\n                    </h2>\n                </header>\n                <main className=\"p-4 space-y-2\">\n                    <label htmlFor=\"header-url\" className=\"text-sm font-semibold text-gray-300\">Image URL</label>\n                    <input\n                        id=\"header-url\"\n                        type=\"text\"\n                        value={imageUrl}\n                        onChange={(e: any) => setImageUrl(e.target.value)}\n                        placeholder=\"https://example.com/my-banner.png\"\n                        className=\"w-full bg-black/20 p-2 rounded-md border border-white/10 focus:ring-2 focus:ring-cyan-400 focus:outline-none\"\n                    />\n                     <p className=\"text-xs text-gray-400\">\n                        Paste a direct link to an image. For best results, use a wide, banner-style image.\n                    </p>\n                </main>\n                <footer className=\"p-4 flex justify-end gap-2 border-t border-[var(--panel-border)]\">\n                    <button onClick={onClose} className=\"px-4 py-2 text-sm font-bold bg-transparent border border-transparent hover:border-[var(--panel-border)] rounded-md\">Cancel</button>\n                    <button onClick={handleSave} className=\"px-4 py-2 text-sm font-bold bg-cyan-500 text-black rounded-md\">Save Header</button>\n                </footer>\n            </motion.div>\n        </Modal>\n    );\n};\n\nexport default EditHeaderModal;","\nimport React from 'react';\nimport type { Team, League } from '../../types';\nimport { Widget } from '../ui/Widget';\nimport { TrophyIcon } from '../icons/TrophyIcon';\n\ninterface TrophyCaseWidgetProps {\n    team: Team;\n    league: League;\n}\n\nconst TrophyCaseWidget: React.FC<TrophyCaseWidgetProps> = ({ team, league }) => {\n    const awards = team.awards || [];\n\n    return (\n        <Widget title=\"Trophy Case\" icon={<TrophyIcon />}>\n            <div className=\"p-3\">\n                {awards.length === 0 ? (\n                    <p className=\"text-center text-xs text-gray-400 py-4\">No awards yet. Go win some matchups!</p>\n                ) : (\n                    <div className=\"space-y-2\">\n                        {awards.map((award, index) => (\n                            <div key={index} className=\"flex items-center gap-3 p-2 bg-black/10 rounded-md\">\n                                <div className=\"text-yellow-400\"><TrophyIcon /></div>\n                                <div>\n                                    <p className=\"font-semibold text-sm\">{award.title}</p>\n                                    <p className=\"text-xs text-gray-400\">Week {award.week}</p>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </Widget>\n    );\n};\n\nexport default TrophyCaseWidget;\n","\nimport React from 'react';\nimport type { Team, Player } from '../../types';\nimport { Widget } from '../ui/Widget';\nimport { InjuryIcon } from '../icons/InjuryIcon';\nimport { useAppState } from '../../contexts/AppContext';\n\ninterface InjuryReportWidgetProps {\n    myTeam: Team;\n}\n\nconst InjuryReportWidget: React.FC<InjuryReportWidgetProps> = ({ myTeam }) => {\n    const { dispatch } = useAppState();\n\n    const injuredPlayers = myTeam.roster.filter((p: any) => \n        p?.injuryHistory && p?.injuryHistory.length > 0 && p?.injuryHistory[0].status !== 'Active'\n    );\n\n    const handlePlayerClick = (player: Player) => {\n        dispatch({ type: 'SET_PLAYER_DETAIL', payload: { player, initialTab: 'fantasy' } });\n    };\n\n    return (\n        <Widget title=\"Injury Report\" icon={<InjuryIcon />}>\n            <div className=\"p-3\">\n                {injuredPlayers.length === 0 ? (\n                    <p className=\"text-center text-xs text-gray-400 py-4\">Your roster is fully healthy!</p>\n                ) : (\n                    <div className=\"space-y-2\">\n                        {injuredPlayers.map((player: any) => (\n                            <button \n                                key={player.id} \n                                onClick={() => handlePlayerClick(player)}\n                                className=\"w-full flex items-center justify-between p-2 bg-black/10 rounded-md hover:bg-black/20 text-left\"\n                            >\n                                <div>\n                                    <p className=\"font-semibold text-sm\">{player.name}</p>\n                                    <p className=\"text-xs text-gray-400\">{player?.injuryHistory![0].injury}</p>\n                                </div>\n                                <span className={`px-2 py-0.5 rounded-full text-xs font-semibold ${\n                                    player?.injuryHistory![0].status === 'Out' ? 'bg-red-500/20 text-red-300' : 'bg-yellow-500/20 text-yellow-300'\n                                }`}>\n                                    {player?.injuryHistory![0].status}\n                                </span>\n                            </button>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </Widget>\n    );\n};\n\nexport default InjuryReportWidget;","\n\nimport React from 'react';\nimport type { Team, League, AiLineupSuggestion } from '../../types';\nimport { Widget } from '../ui/Widget';\nimport { BrainCircuitIcon } from '../icons/BrainCircuitIcon';\nimport { getAiOptimalLineup } from '../../services/geminiService';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport LoadingSpinner from '../ui/LoadingSpinner';\n\ninterface AiCoManagerWidgetProps {\n    team: Team;\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nconst AiCoManagerWidget: React.FC<AiCoManagerWidgetProps> = ({ team, league, dispatch }) => {\n    const [isLoading, setIsLoading] = React.useState(false);\n    const [suggestion, setSuggestion] = React.useState<AiLineupSuggestion | null>(null);\n\n    const handleGetLineup = async () => {\n        setIsLoading(true);\n        setSuggestion(null);\n        try {\n            const result = await getAiOptimalLineup(team, league);\n            setSuggestion(result);\n        } catch (e) {\n            console.error(e);\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: \"Could not get a lineup suggestion.\", type: 'SYSTEM' } });\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleAcceptLineup = () => {\n        if (!suggestion) return;\n        dispatch({\n            type: 'SET_LINEUP',\n            payload: { leagueId: league.id, teamId: team.id, playerIds: suggestion.recommendedStarters }\n        });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Optimal lineup has been set!', type: 'SYSTEM' }});\n        setSuggestion(null);\n    };\n\n    return (\n        <Widget title=\"AI Co-Manager\" icon={<BrainCircuitIcon />}>\n            <div className=\"p-3\">\n                <AnimatePresence mode=\"wait\">\n                    {isLoading ? (\n                        <motion.div key=\"loading\" {...{ initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 } }}>\n                            <LoadingSpinner size=\"sm\" text=\"Optimizing your lineup...\" />\n                        </motion.div>\n                    ) : suggestion ? (\n                        <motion.div\n                            key=\"suggestion\"\n                            {...{\n                                initial: { opacity: 0, y: 10 },\n                                animate: { opacity: 1, y: 0 },\n                            }}\n                        >\n                            <p className=\"text-xs text-cyan-300 font-bold\">Oracle's Recommendation:</p>\n                            <p className=\"text-xs italic text-gray-300 my-1\">\"{suggestion.reasoning}\"</p>\n                            <div className=\"flex gap-2 mt-2\">\n                                <button onClick={() => setSuggestion(null)} className=\"flex-1 px-2 py-1 text-xs font-bold rounded-md bg-transparent text-gray-400 hover:bg-white/10\">Dismiss</button>\n                                <button onClick={handleAcceptLineup} className=\"flex-1 px-2 py-1 text-xs font-bold rounded-md bg-green-500 text-white hover:bg-green-400\">Set Lineup</button>\n                            </div>\n                        </motion.div>\n                    ) : (\n                         <motion.div key=\"default\" {...{ initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 } }}>\n                            <p className=\"text-center text-xs text-gray-400 mb-2\">Let the Oracle recommend your best starting lineup for this week.</p>\n                            <button onClick={handleGetLineup} className=\"w-full py-1.5 text-xs font-bold bg-cyan-500/10 text-cyan-300 rounded-md hover:bg-cyan-500/20\">\n                                Get Optimal Lineup\n                            </button>\n                         </motion.div>\n                    )}\n                </AnimatePresence>\n            </div>\n        </Widget>\n    );\n};\n\nexport default AiCoManagerWidget;\n","\nimport React from 'react';\n\ninterface SparklineChartProps {\n    data: number[];\n    width?: number;\n    height?: number;\n    strokeColor?: string;\n    strokeWidth?: number;\n}\n\nconst SparklineChart: React.FC<SparklineChartProps> = ({\n    data,\n    width = 100,\n    height = 30,\n    strokeColor = '#06b6d4', // cyan-500\n    strokeWidth = 2,\n}) => {\n    if (data.length < 2) return null;\n\n    const min = Math.min(...data);\n    const max = Math.max(...data);\n    const range = max - min;\n\n    const points = data\n        .map((d, i) => {\n            const x = (i / (data.length - 1)) * width;\n            const y = height - ((d - min) / (range || 1)) * height;\n            return `${x},${y}`;\n        })\n        .join(' ');\n\n    return (\n        <svg\n            viewBox={`0 0 ${width} ${height}`}\n            width=\"100%\"\n            height=\"100%\"\n            preserveAspectRatio=\"none\"\n        >\n            <polyline\n                points={points}\n                fill=\"none\"\n                stroke={strokeColor}\n                strokeWidth={strokeWidth}\n                strokeLinejoin=\"round\"\n                strokeLinecap=\"round\"\n            />\n        </svg>\n    );\n};\n\nexport default SparklineChart;","\nimport React from 'react';\nimport { Widget } from '../ui/Widget';\nimport { TrophyIcon } from '../icons/TrophyIcon';\nimport SparklineChart from '../ui/SparklineChart';\nimport type { Team, League } from '../../types';\n\ninterface ChampionshipOddsWidgetProps {\n    team: Team;\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nconst ChampionshipOddsWidget: React.FC<ChampionshipOddsWidgetProps> = ({ team, league, dispatch }) => {\n    const history = team.championshipProbHistory || [];\n    const currentProb = history.length > 0 ? history[history.length - 1].probability : 0;\n    const dataPoints = history.map((h: any) => h.probability);\n\n    return (\n        <Widget title=\"Championship Odds\" icon={<TrophyIcon />}>\n            <div className=\"p-3\">\n                <div className=\"text-center\">\n                    <p className=\"font-display text-4xl font-bold text-yellow-300\">{currentProb.toFixed(2)}%</p>\n                    <p className=\"text-xs text-gray-400\">Current probability to win the league</p>\n                </div>\n                {dataPoints.length > 1 && (\n                    <div className=\"h-16 mt-2\">\n                        <SparklineChart data={dataPoints} />\n                    </div>\n                )}\n                <button\n                    onClick={() => dispatch({ type: 'SET_VIEW', payload: 'CHAMPIONSHIP_ODDS' })}\n                    className=\"w-full mt-2 py-1.5 text-xs font-bold bg-cyan-500/10 text-cyan-300 rounded-md hover:bg-cyan-500/20\"\n                >\n                    View Full Analytics\n                </button>\n            </div>\n        </Widget>\n    );\n};\n\nexport default ChampionshipOddsWidget;","import React from 'react';\nimport { motion } from 'framer-motion';\n\ninterface EditTeamBrandingModalProps {\n    team: any;\n    leagueId: string;\n    dispatch: (action: any) => void;\n    onClose: () => void;\n}\n\nconst EditTeamBrandingModal: React.FC<EditTeamBrandingModalProps> = ({\n    team,\n    leagueId,\n    dispatch,\n    onClose\n}) => {\n    const [teamName, setTeamName] = React.useState(team.name || '');\n    const [teamLogo, setTeamLogo] = React.useState(team.logo || '');\n    const [primaryColor, setPrimaryColor] = React.useState(team.primaryColor || '#3B82F6');\n    const [secondaryColor, setSecondaryColor] = React.useState(team.secondaryColor || '#1E40AF');\n    const [motto, setMotto] = React.useState(team.motto || '');\n    const [loading, setLoading] = React.useState(false);\n\n    const predefinedColors = [\n        '#EF4444', '#F97316', '#F59E0B', '#EAB308',\n        '#84CC16', '#22C55E', '#10B981', '#14B8A6',\n        '#06B6D4', '#0EA5E9', '#3B82F6', '#6366F1',\n        '#8B5CF6', '#A855F7', '#D946EF', '#EC4899'\n    ];\n\n    const logoOptions = [\n        '🦅', '🦁', '🐻', '🐺', '🦈', '🐅', '🦏', '🐎',\n        '⚡', '🔥', '❄️', '🌟', '💎', '👑', '⚔️', '🛡️'\n    ];\n\n    const handleSave = async () => {\n        setLoading(true);\n        \n        try {\n            // Simulate API call\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            dispatch({\n                type: 'UPDATE_TEAM_BRANDING',\n                payload: {\n                    teamId: team.id,\n                    leagueId,\n                    branding: {\n                        name: teamName,\n                        logo: teamLogo,\n                        primaryColor,\n                        secondaryColor,\n                        motto\n                    }\n                }\n            });\n            \n            onClose();\n        } catch (error) {\n            console.error('Failed to update team branding:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\n            <motion.div\n                initial={{ opacity: 0, scale: 0.95 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.95 }}\n                className=\"bg-gray-800 rounded-lg w-full max-w-2xl max-h-[90vh] overflow-y-auto\"\n            >\n                <div className=\"flex items-center justify-between p-6 border-b border-gray-700\">\n                    <h2 className=\"text-xl font-bold text-white\">Edit Team Branding</h2>\n                    <button\n                        onClick={onClose}\n                        className=\"p-2 text-gray-400 hover:text-white transition-colors\"\n                        aria-label=\"Close modal\"\n                    >\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                    </button>\n                </div>\n\n                <div className=\"p-6 space-y-6\">\n                    {/* Team Name */}\n                    <div>\n                        <label htmlFor=\"team-name\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                            Team Name\n                        </label>\n                        <input\n                            id=\"team-name\"\n                            type=\"text\"\n                            value={teamName}\n                            onChange={(e: any) => setTeamName(e.target.value)}\n                            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                            placeholder=\"Enter team name\"\n                        />\n                    </div>\n\n                    {/* Team Logo */}\n                    <div>\n                        <label htmlFor=\"team-logo\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                            Team Logo\n                        </label>\n                        <div className=\"grid grid-cols-8 gap-2 mb-3\">\n                            {logoOptions.map((emoji) => (\n                                <button\n                                    key={emoji}\n                                    onClick={() => setTeamLogo(emoji)}\n                                    className={`p-3 text-2xl rounded-lg border-2 transition-all ${\n                                        teamLogo === emoji\n                                            ? 'border-blue-500 bg-blue-500/20'\n                                            : 'border-gray-600 hover:border-gray-500'\n                                    }`}\n                                    aria-label={`Select ${emoji} as team logo`}\n                                >\n                                    {emoji}\n                                </button>\n                            ))}\n                        </div>\n                        <input\n                            id=\"team-logo\"\n                            type=\"text\"\n                            value={teamLogo}\n                            onChange={(e: any) => setTeamLogo(e.target.value)}\n                            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                            placeholder=\"Or enter custom emoji/text\"\n                        />\n                    </div>\n\n                    {/* Color Scheme */}\n                    <div>\n                        <label htmlFor=\"primary-color\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                            Primary Color\n                        </label>\n                        <div className=\"grid grid-cols-8 gap-2 mb-3\">\n                            {predefinedColors.map((color) => (\n                                <button\n                                    key={color}\n                                    onClick={() => setPrimaryColor(color)}\n                                    className={`w-8 h-8 rounded-lg border-2 ${\n                                        primaryColor === color\n                                            ? 'border-white scale-110'\n                                            : 'border-gray-600 hover:scale-105'\n                                    }`}\n                                    style={{ backgroundColor: color }}\n                                    aria-label={`Select ${color} as primary color`}\n                                />\n                            ))}\n                        </div>\n                        <input\n                            id=\"primary-color\"\n                            type=\"color\"\n                            value={primaryColor}\n                            onChange={(e: any) => setPrimaryColor(e.target.value)}\n                            className=\"w-full h-10 bg-gray-700 border border-gray-600 rounded-lg\"\n                        />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"secondary-color\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                            Secondary Color\n                        </label>\n                        <div className=\"grid grid-cols-8 gap-2 mb-3\">\n                            {predefinedColors.map((color) => (\n                                <button\n                                    key={color}\n                                    onClick={() => setSecondaryColor(color)}\n                                    className={`w-8 h-8 rounded-lg border-2 ${\n                                        secondaryColor === color\n                                            ? 'border-white scale-110'\n                                            : 'border-gray-600 hover:scale-105'\n                                    }`}\n                                    style={{ backgroundColor: color }}\n                                    aria-label={`Select ${color} as secondary color`}\n                                />\n                            ))}\n                        </div>\n                        <input\n                            id=\"secondary-color\"\n                            type=\"color\"\n                            value={secondaryColor}\n                            onChange={(e: any) => setSecondaryColor(e.target.value)}\n                            className=\"w-full h-10 bg-gray-700 border border-gray-600 rounded-lg\"\n                        />\n                    </div>\n\n                    {/* Team Motto */}\n                    <div>\n                        <label htmlFor=\"team-motto\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                            Team Motto\n                        </label>\n                        <input\n                            id=\"team-motto\"\n                            type=\"text\"\n                            value={motto}\n                            onChange={(e: any) => setMotto(e.target.value)}\n                            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                            placeholder=\"Enter team motto\"\n                            maxLength={50}\n                        />\n                        <div className=\"text-xs text-gray-400 mt-1\">\n                            {motto.length}/50 characters\n                        </div>\n                    </div>\n\n                    {/* Preview */}\n                    <div>\n                        <div className=\"block text-sm font-medium text-gray-300 mb-2\">\n                            Preview\n                        </div>\n                        <div \n                            className=\"p-4 rounded-lg border border-gray-600\"\n                            style={{ \n                                background: `linear-gradient(135deg, ${primaryColor}20, ${secondaryColor}20)`,\n                                borderColor: primaryColor\n                            }}\n                        >\n                            <div className=\"flex items-center space-x-3\">\n                                <div \n                                    className=\"w-12 h-12 rounded-lg flex items-center justify-center text-2xl\"\n                                    style={{ backgroundColor: primaryColor + '40' }}\n                                >\n                                    {teamLogo}\n                                </div>\n                                <div>\n                                    <div className=\"font-bold text-white\">\n                                        {teamName || 'Team Name'}\n                                    </div>\n                                    <div className=\"text-sm text-gray-300\">\n                                        {motto || 'Team motto'}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"flex justify-end space-x-3 p-6 border-t border-gray-700\">\n                    <button\n                        onClick={onClose}\n                        disabled={loading}\n                        className=\"px-4 py-2 text-gray-400 hover:text-white transition-colors disabled:opacity-50\"\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        onClick={handleSave}\n                        disabled={loading || !teamName.trim()}\n                        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 flex items-center space-x-2\"\n                    >\n                        {loading && (\n                            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                        )}\n                        <span>Save Changes</span>\n                    </button>\n                </div>\n            </motion.div>\n        </div>\n    );\n};\n\nexport default EditTeamBrandingModal;\n","import React from 'react';\n\ninterface MusicIconProps {\n  className?: string;\n}\n\nexport const MusicIcon: React.FC<MusicIconProps> = ({ className = \"w-5 h-5\" }) => {\n  return (\n    <svg \n      className={className} \n      fill=\"none\" \n      stroke=\"currentColor\" \n      viewBox=\"0 0 24 24\" \n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\" \n        strokeWidth={2} \n        d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\" \n      />\n    </svg>\n  );\n};\n","\nimport React from 'react';\n\nexport const ArchiveIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <rect x=\"2\" y=\"4\" width=\"20\" height=\"5\" rx=\"2\" />\n        <path d=\"M4 9v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9\" />\n        <path d=\"M10 13h4\" />\n    </svg>\n);\n","\nimport React from 'react';\nimport type { Team, DraftPickAsset } from '../../types';\nimport { Widget } from '../ui/Widget';\nimport { ArchiveIcon } from '../icons/ArchiveIcon';\n\ninterface FuturePicksWidgetProps {\n    team: Team;\n}\n\nconst FuturePicksWidget: React.FC<FuturePicksWidgetProps> = ({ team }) => {\n    const picksBySeason = (team.futureDraftPicks || []).reduce((acc, pick) => {\n        if (!acc[pick.season]) {\n            acc[pick.season] = [];\n        }\n        acc[pick.season].push(pick.round);\n        acc[pick.season].sort((a, b) => a - b);\n        return acc;\n    }, {} as Record<number, number[]>);\n\n    return (\n        <Widget title=\"Future Draft Picks\" icon={<ArchiveIcon />}>\n            <div className=\"p-3 space-y-3\">\n                {Object.keys(picksBySeason).length > 0 ? Object.entries(picksBySeason).map(([season, rounds]) => (\n                    <div key={season}>\n                        <h4 className=\"font-bold text-sm text-cyan-300 mb-1\">{season} Draft</h4>\n                        <div className=\"flex flex-wrap gap-1\">\n                            {rounds.map((round: any) => (\n                                <span key={round} className=\"text-xs bg-black/20 px-2 py-1 rounded-full font-mono\">\n                                    R{round}\n                                </span>\n                            ))}\n                        </div>\n                    </div>\n                )) : (\n                    <p className=\"text-center text-xs text-gray-400 py-4\">No future draft picks available.</p>\n                )}\n            </div>\n        </Widget>\n    );\n};\n\nexport default FuturePicksWidget;\n","\nimport React from 'react';\n\nexport const TvIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <rect width=\"20\" height=\"15\" x=\"2\" y=\"7\" rx=\"2\" ry=\"2\"/>\n        <polyline points=\"17 2 12 7 7 2\"/>\n    </svg>\n);\n","\nimport React from 'react';\n\nexport const Share2Icon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <circle cx=\"18\" cy=\"5\" r=\"3\" />\n        <circle cx=\"6\" cy=\"12\" r=\"3\" />\n        <circle cx=\"18\" cy=\"19\" r=\"3\" />\n        <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\" />\n        <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\" />\n    </svg>\n);","\nimport React from 'react';\nimport type { Team } from '../../types';\nimport { Avatar } from '../ui/Avatar';\n\ninterface TeamBrandingCardProps {\n    team: Team;\n    slogan: string;\n}\n\nconst TeamBrandingCard: React.FC<TeamBrandingCardProps> = ({ team, slogan }) => {\n    const { name, avatar, record } = team;\n    return (\n        <div className=\"w-full max-w-sm aspect-[2/1] bg-gradient-to-br from-gray-800 to-gray-900 rounded-xl p-4 flex flex-col justify-between shadow-lg border border-cyan-400/30 relative overflow-hidden\">\n            {/* Background Glow */}\n            <div className=\"absolute -top-1/2 -left-1/2 w-[200%] h-[200%] bg-gradient-radial from-cyan-500/10 via-transparent to-transparent animate-pulse\"></div>\n            \n            <div className=\"flex justify-between items-start\">\n                <div className=\"flex-1\">\n                    <h3 className=\"font-display text-2xl font-bold text-white leading-tight\">{name}</h3>\n                    <p className=\"font-mono text-sm text-gray-400\">{record.wins}-{record.losses}-{record.ties}</p>\n                </div>\n                 <Avatar avatar={avatar} className=\"w-16 h-16 text-4xl rounded-lg flex-shrink-0\" />\n            </div>\n            <div className=\"text-center\">\n                 <p className=\"font-display text-lg italic text-cyan-200\">\"{slogan}\"</p>\n            </div>\n            <div className=\"flex justify-between items-center text-xs text-gray-500\">\n                <span className=\"font-display font-bold\">ASTRAL DRAFT</span>\n                <span>{new Date().getFullYear()} Season</span>\n            </div>\n        </div>\n    );\n};\n\nexport default TeamBrandingCard;","\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport type { Team } from '../../types';\nimport Modal from '../ui/Modal';\nimport { useAppState } from '../../contexts/AppContext';\nimport { generateTeamSlogan } from '../../services/geminiService';\nimport TeamBrandingCard from '../team/TeamBrandingCard';\nimport useCopyToClipboard from '../../hooks/useCopyToClipboard';\nimport { ClipboardIcon } from '../icons/ClipboardIcon';\nimport { CheckIcon } from '../icons/CheckIcon';\nimport { Share2Icon } from '../icons/Share2Icon';\nimport LoadingSpinner from '../ui/LoadingSpinner';\n\ninterface ShareTeamCardModalProps {\n    team: Team;\n    onClose: () => void;\n}\n\nconst ShareTeamCardModal: React.FC<ShareTeamCardModalProps> = ({ team, onClose }) => {\n    const { state, dispatch } = useAppState();\n    const [slogan, setSlogan] = React.useState<string | null>(team.motto || state.teamSlogans[team.id] || null);\n    const [isLoadingSlogan, setIsLoadingSlogan] = React.useState(!slogan);\n    const [isCopied, setIsCopied] = React.useState(false);\n    const cardRef = React.useRef<HTMLDivElement>(null);\n    const { copy } = useCopyToClipboard();\n\n    React.useEffect(() => {\n        if (!slogan) {\n            setIsLoadingSlogan(true);\n            generateTeamSlogan(team).then(generatedSlogan => {\n                if (generatedSlogan) {\n                    setSlogan(generatedSlogan);\n                    dispatch({ type: 'SET_TEAM_SLOGAN', payload: { teamId: team.id, slogan: generatedSlogan } });\n                }\n                setIsLoadingSlogan(false);\n            });\n        }\n    }, [slogan, team, dispatch]);\n\n    const handleCopy = () => {\n        const textToCopy = `${team.name} - ${slogan}\\nRecord: ${team.record.wins}-${team.record.losses}-${team.record.ties}`;\n        copy(textToCopy);\n        setIsCopied(true);\n        setTimeout(() => setIsCopied(false), 2000);\n    };\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.div\n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-md\"\n                onClick={e => e.stopPropagation()}\n                {...{\n                    initial: { opacity: 0, scale: 0.95 },\n                    animate: { opacity: 1, scale: 1 },\n                }}\n            >\n                <header className=\"p-4 border-b border-[var(--panel-border)]\">\n                    <h2 className=\"text-xl font-bold font-display flex items-center gap-2\">\n                        <Share2Icon /> Share Team Card\n                    </h2>\n                </header>\n                <main className=\"p-4 flex flex-col items-center justify-center\">\n                    {isLoadingSlogan ? (\n                        <div className=\"w-full max-w-sm aspect-[2/1] flex items-center justify-center\">\n                            <LoadingSpinner text=\"Generating slogan...\" />\n                        </div>\n                    ) : (\n                        <div ref={cardRef}>\n                            <TeamBrandingCard team={team} slogan={slogan || 'Your Epic Slogan Here'} />\n                        </div>\n                    )}\n                </main>\n                <footer className=\"p-4 flex justify-center gap-4 border-t border-[var(--panel-border)]\">\n                    <button onClick={handleCopy} className=\"flex items-center gap-2 px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20\">\n                        {isCopied ? <CheckIcon /> : <ClipboardIcon />} {isCopied ? 'Copied!' : 'Copy Info'}\n                    </button>\n                </footer>\n            </motion.div>\n        </Modal>\n    );\n};\n\nexport default ShareTeamCardModal;\n","\nimport React from 'react';\n\nexport const PawPrintIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <circle cx=\"11\" cy=\"4\" r=\"2\" />\n        <circle cx=\"18\" cy=\"8\" r=\"2\" />\n        <circle cx=\"15\" cy=\"16\" r=\"4\" />\n        <path d=\"M9 10a5 5 0 0 1 5 5v3.5a3.5 3.5 0 0 1-7 0V15a5 5 0 0 1 5-5z\" />\n    </svg>\n);\n","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport { Widget } from '../ui/Widget';\nimport { PawPrintIcon } from '../icons/PawPrintIcon';\nimport { generateTeamMascot } from '../../services/geminiService';\nimport type { League, Team } from '../../types';\nimport LoadingSpinner from '../ui/LoadingSpinner';\nimport LazyImage from '../ui/LazyImage';\n\ninterface MascotWidgetProps {\n    team: Team;\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nexport const MascotWidget: React.FC<MascotWidgetProps> = ({ team, league, dispatch }) => {\n    const [isLoading, setIsLoading] = React.useState(false);\n    const mascotUrl = team.mascotUrl;\n\n    const handleGenerate = async () => {\n        setIsLoading(true);\n        try {\n            const newMascotUrl = await generateTeamMascot(team);\n            if (newMascotUrl) {\n                dispatch({\n                    type: 'SET_TEAM_MASCOT',\n                    payload: { leagueId: league.id, teamId: team.id, mascotUrl: newMascotUrl }\n                });\n                dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Mascot generated!', type: 'SYSTEM' }});\n            } else {\n                 dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Could not generate a mascot.', type: 'SYSTEM' }});\n            }\n        } catch (e) {\n            console.error(e);\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'An error occurred while generating the mascot.', type: 'SYSTEM' }});\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <Widget title=\"Team Mascot\" icon={<PawPrintIcon />}>\n            <div className=\"p-4 flex items-center justify-center\">\n                {isLoading ? (\n                    <LoadingSpinner size=\"sm\" text=\"The Oracle is sketching...\" />\n                ) : mascotUrl ? (\n                    <LazyImage \n                      src={mascotUrl} \n                      alt={`${team.name} Mascot`} \n                      className=\"w-32 h-32 rounded-lg object-cover\"\n                      loading=\"lazy\"\n                    />\n                ) : (\n                    <div className=\"text-center\">\n                        <p className=\"text-xs text-gray-400 mb-2\">Your team doesn't have a mascot yet. Let the Oracle create one for you!</p>\n                        <button\n                            onClick={handleGenerate}\n                            className=\"px-4 py-1.5 text-xs font-bold bg-cyan-500/10 text-cyan-300 rounded-md hover:bg-cyan-500/20\"\n                        >\n                            Generate AI Mascot\n                        </button>\n                    </div>\n                )}\n            </div>\n        </Widget>\n    );\n};\n","\nimport React from 'react';\nimport { useLeague } from '../../hooks/useLeague';\nimport { Widget } from '../ui/Widget';\nimport { MessageCircleIcon } from '../icons/MessageCircleIcon';\nimport { proactivelySuggestTrade } from '../../services/geminiService';\nimport type { TradeSuggestion } from '../../types';\nimport LoadingSpinner from '../ui/LoadingSpinner';\nimport { AnimatePresence, motion } from 'framer-motion';\n\ninterface TradeWhispererWidgetProps {\n    onPropose: (suggestion: TradeSuggestion) => void;\n}\n\nconst TradeWhispererWidget: React.FC<TradeWhispererWidgetProps> = ({ onPropose }) => {\n    const { league, myTeam } = useLeague();\n    const [isLoading, setIsLoading] = React.useState(false);\n    const [suggestion, setSuggestion] = React.useState<TradeSuggestion | null>(null);\n\n    const handleFindTrade = async () => {\n        if (!myTeam || !league) return;\n        setIsLoading(true);\n        setSuggestion(null);\n        try {\n            const result = await proactivelySuggestTrade(myTeam, league);\n            setSuggestion(result);\n        } catch (e) {\n            console.error(e);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n    \n    const opponent = league?.teams.find((t: any) => t.id === suggestion?.toTeamId);\n\n    return (\n        <Widget title=\"AI Trade Whisperer\" icon={<MessageCircleIcon />}>\n            <div className=\"p-3\">\n                <AnimatePresence mode=\"wait\">\n                    {isLoading ? (\n                        <motion.div key=\"loading\" {...{ initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 } }}>\n                            <LoadingSpinner size=\"sm\" text=\"Scanning the league for opportunities...\" />\n                        </motion.div>\n                    ) : suggestion && opponent ? (\n                        <motion.div\n                            key=\"suggestion\"\n                            {...{\n                                initial: { opacity: 0, y: 10 },\n                                animate: { opacity: 1, y: 0 },\n                            }}\n                        >\n                            <p className=\"text-xs italic text-gray-300 mb-2\">\"{suggestion.rationale}\"</p>\n                            <div className=\"text-center text-xs font-bold text-gray-400 mb-2\">Trade with {opponent.name}</div>\n                            \n                            <div className=\"flex justify-end gap-2 mt-2\">\n                                <button onClick={() => setSuggestion(null)} className=\"flex-1 px-2 py-1 text-xs font-bold rounded-md bg-transparent text-gray-400 hover:bg-white/10\">Dismiss</button>\n                                <button onClick={() => onPropose(suggestion)} className=\"flex-1 px-2 py-1 text-xs font-bold rounded-md bg-green-500 text-white hover:bg-green-400\">Propose This Trade</button>\n                            </div>\n                        </motion.div>\n                    ) : (\n                         <motion.div key=\"default\" {...{ initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 } }}>\n                            <p className=\"text-center text-xs text-gray-400 mb-2\">Let the Oracle find a mutually beneficial trade to improve your roster.</p>\n                            <button onClick={handleFindTrade} className=\"w-full py-1.5 text-xs font-bold bg-cyan-500/10 text-cyan-300 rounded-md hover:bg-cyan-500/20\">\n                                Find a Trade\n                            </button>\n                         </motion.div>\n                    )}\n                </AnimatePresence>\n            </div>\n        </Widget>\n    );\n};\n\nexport default TradeWhispererWidget;\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport type { Team, League, PlayerAwardType, Player } from '../../types';\nimport Modal from '../ui/Modal';\nimport { AwardIcon } from '../icons/AwardIcon';\n\ninterface AssignAwardsModalProps {\n    team: Team;\n    league: League;\n    dispatch: React.Dispatch<any>;\n    onClose: () => void;\n}\n\nconst awardTypes: { type: PlayerAwardType, label: string, description: string }[] = [\n    { type: 'MVP', label: 'Team MVP', description: 'The most valuable player on your squad.' },\n    { type: 'DRAFT_GEM', label: 'Draft Gem', description: 'The player who provided the most value relative to their draft position.' },\n    { type: 'WAIVER_HERO', label: 'Waiver Wire Hero', description: 'The best player you picked up from the waiver wire.' },\n    { type: 'BIGGEST_BUST', label: 'Biggest Bust', description: 'The player who most disappointed relative to their expectations.' },\n];\n\nconst AssignAwardsModal: React.FC<AssignAwardsModalProps> = ({ team, league, dispatch, onClose }) => {\n    const [selectedAwards, setSelectedAwards] = React.useState<Record<PlayerAwardType, number | null>>(() => {\n        const initialState: Record<PlayerAwardType, number | null> = {\n            MVP: null, DRAFT_GEM: null, WAIVER_HERO: null, BIGGEST_BUST: null\n        };\n        const currentSeason = new Date().getFullYear();\n        (league.playerAwards || []).forEach((award: any) => {\n            if (award.awardedByTeamId === team.id && award.season === currentSeason) {\n                initialState[award.awardType] = award.playerId;\n            }\n        });\n        return initialState;\n    });\n\n    const handleSelect = (awardType: PlayerAwardType, playerId: string) => {\n        setSelectedAwards(prev => ({\n            ...prev,\n            [awardType]: playerId ? Number(playerId) : null\n        }));\n    };\n\n    const handleSave = () => {\n        const awardsPayload = Object.entries(selectedAwards).map(([awardType, playerId]) => ({\n            awardType: awardType as PlayerAwardType,\n            playerId,\n        }));\n        \n        dispatch({\n            type: 'ASSIGN_PLAYER_AWARDS',\n            payload: { leagueId: league.id, teamId: team.id, awards: awardsPayload }\n        });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Player awards have been saved!', type: 'SYSTEM' } });\n        onClose();\n    };\n\n    const labelClasses = \"block text-sm font-medium text-cyan-300\";\n    const selectClasses = \"w-full bg-black/20 p-2 rounded-md border border-white/10\";\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.div\n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-lg\"\n                onClick={e => e.stopPropagation()}\n                {...{\n                    initial: { opacity: 0, scale: 0.95 },\n                    animate: { opacity: 1, scale: 1 },\n                }}\n            >\n                <header className=\"p-4 border-b border-[var(--panel-border)]\">\n                    <h2 className=\"text-xl font-bold font-display flex items-center gap-2\">\n                        <AwardIcon /> Assign End of Season Awards\n                    </h2>\n                </header>\n                <main className=\"p-4 space-y-4 max-h-[60vh] overflow-y-auto\">\n                    {awardTypes.map(({ type, label, description }) => (\n                        <div key={type}>\n                            <label htmlFor={`award-${type}`} className={labelClasses}>{label}</label>\n                            <p className=\"text-xs text-gray-400 mb-1\">{description}</p>\n                            <select\n                                id={`award-${type}`}\n                                value={selectedAwards[type] || ''}\n                                onChange={e => handleSelect(type, e.target.value)}\n                                className={selectClasses}\n                            >\n                                <option value=\"\">-- Select a Player --</option>\n                                {team.roster.map((player: any) => (\n                                    <option key={player.id} value={player.id}>\n                                        {player.name} ({player.position})\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                    ))}\n                </main>\n                <footer className=\"p-4 flex justify-end gap-2 border-t border-[var(--panel-border)]\">\n                    <button onClick={onClose} className=\"px-4 py-2 text-sm font-bold bg-transparent border border-transparent hover:border-[var(--panel-border)] rounded-md\">Cancel</button>\n                    <button onClick={handleSave} className=\"px-4 py-2 text-sm font-bold bg-cyan-500 text-black rounded-md\">Save Awards</button>\n                </footer>\n            </motion.div>\n        </Modal>\n    );\n};\n\nexport default AssignAwardsModal;","\nimport React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { Widget } from '../components/ui/Widget';\nimport VisualRoster from '../components/team/VisualRoster';\nimport type { League, Team, TradeSuggestion } from '../types';\nimport TradeCenterWidget from '../components/team/TradeCenterWidget';\nimport LeagueTeamsList from '../components/team/LeagueTeamsList';\nimport { DailyBriefingWidget } from '../components/team/DailyBriefingWidget';\nimport CurrentMatchupWidget from '../components/team/CurrentMatchupWidget';\nimport TeamChemistryWidget from '../components/team/TeamChemistryWidget';\nimport SeasonOutlookWidget from '../components/team/SeasonOutlookWidget';\nimport { AnimatePresence } from 'framer-motion';\nimport EditHeaderModal from '../components/team/EditHeaderModal';\nimport { ImageIcon } from '../components/icons/ImageIcon';\nimport TrophyCaseWidget from '../components/team/TrophyCaseWidget';\nimport { useLeague } from '../hooks/useLeague';\nimport InjuryReportWidget from '../components/team/InjuryReportWidget';\nimport AiCoManagerWidget from '../components/team/AiCoManagerWidget';\nimport ChampionshipOddsWidget from '../components/team/ChampionshipOddsWidget';\nimport EditTeamBrandingModal from '../components/modals/EditTeamBrandingModal';\nimport { MusicIcon } from '../components/icons/MusicIcon';\nimport FuturePicksWidget from '../components/team/FuturePicksWidget';\nimport { TvIcon } from '../components/icons/TvIcon';\nimport { Share2Icon } from '../components/icons/Share2Icon';\nimport ShareTeamCardModal from '../components/modals/ShareTeamCardModal';\nimport { MascotWidget } from '../components/team/MascotWidget';\nimport TradeWhispererWidget from '../components/team/TradeWhispererWidget';\nimport { AwardIcon } from '../components/icons/AwardIcon';\nimport AssignAwardsModal from '../components/modals/AssignAwardsModal';\nimport { UsersIcon } from '../components/icons/UsersIcon';\nimport ProposeTradeModal from '../components/team/ProposeTradeModal';\nimport { useResponsiveBreakpoint } from '../utils/mobileOptimizationUtils';\n\nconst TeamHubContent: React.FC<{ league: League; team: Team; dispatch: React.Dispatch<any> }> = ({ league, team, dispatch }) => {\n    const { isMobile } = useResponsiveBreakpoint();\n    const isWaiversActive = league.status === 'DRAFT_COMPLETE' || league.status === 'IN_SEASON' || league.status === 'PLAYOFFS';\n    const isSeasonStarted = league.status === 'IN_SEASON' || league.status === 'PLAYOFFS' || league.status === 'COMPLETE';\n    const isDraftComplete = league.status !== 'PRE_DRAFT' && league.status !== 'DRAFTING';\n    const isPlayoffs = league.status === 'PLAYOFFS' || league.status === 'COMPLETE';\n    const isInSeason = league.status === 'IN_SEASON' || league.status === 'PLAYOFFS';\n    const isSeasonComplete = league.status === 'COMPLETE';\n    const isKeeperLeague = (league.settings.keeperCount || 0) > 0;\n    const isPreDraft = league.status === 'PRE_DRAFT';\n    const isFullAiEnabled = league.settings.aiAssistanceLevel === 'FULL';\n\n\n    const [isEditHeaderModalOpen, setIsEditHeaderModalOpen] = React.useState(false);\n    const [isBrandingModalOpen, setIsBrandingModalOpen] = React.useState(false);\n    const [isShareModalOpen, setIsShareModalOpen] = React.useState(false);\n    const [isAwardsModalOpen, setIsAwardsModalOpen] = React.useState(false);\n    const [isProposeTradeModalOpen, setIsProposeTradeModalOpen] = React.useState(false);\n    const [tradeSuggestion, setTradeSuggestion] = React.useState<TradeSuggestion | null>(null);\n    const [tradeOpponent, setTradeOpponent] = React.useState<Team | null>(null);\n    const audioRef = React.useRef<HTMLAudioElement>(null);\n    \n    const headerStyle = team.headerImage ? { backgroundImage: `url(${team.headerImage})` } : {};\n    \n    const playThemeSong = () => {\n        if (audioRef.current) {\n            audioRef.current.play().catch(e => console.error(\"Error playing audio:\", e));\n        }\n    };\n    \n    const handleProposeFromWhisperer = (suggestion: TradeSuggestion) => {\n        const opponent = league.teams.find(t => t.id === suggestion.toTeamId);\n        if (opponent) {\n            setTradeSuggestion(suggestion);\n            setTradeOpponent(opponent);\n            setIsProposeTradeModalOpen(true);\n        }\n    };\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-4 sm:p-6 lg:p-8 overflow-y-auto\">\n            <header \n                className={`flex-shrink-0 flex flex-col justify-between mb-6 p-4 rounded-xl relative bg-cover bg-center bg-no-repeat bg-gradient-to-t from-black/50 to-transparent`}\n                style={headerStyle}\n            >\n                <div className=\"bg-black/40 p-2 rounded-lg mb-4\">\n                    <h1 className=\"font-display text-2xl sm:text-3xl lg:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        {team.name}\n                    </h1>\n                     {team.motto && <p className=\"text-sm italic text-cyan-200/80 mt-1\">\"{team.motto}\"</p>}\n                    <p className=\"text-sm text-[var(--text-secondary)] tracking-widest\">TEAM HUB • WEEK {league.currentWeek > 16 ? 'Post-Season' : league.currentWeek}</p>\n                </div>\n                 <button onClick={() => setIsEditHeaderModalOpen(true)} \n                         className=\"absolute top-2 right-2 flex items-center gap-1 text-xs px-2 py-1 bg-black/50 hover:bg-black/70 rounded-md min-h-[44px] min-w-[44px] justify-center\">\n                    <ImageIcon /> {!isMobile && 'Edit Header'}\n                </button>\n                <div className={`${isMobile ? 'grid grid-cols-2 sm:grid-cols-3 gap-2' : 'flex gap-2 flex-wrap justify-end'}`}>\n                    {isKeeperLeague && isPreDraft && (\n                         <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'KEEPER_SELECTION' })} \n                                 className=\"px-4 py-2 bg-yellow-500/80 text-white rounded-lg text-sm hover:bg-yellow-500 backdrop-blur-sm flex items-center gap-2 min-h-[44px] justify-center\">\n                            <UsersIcon /> {!isMobile && 'Select Keepers'}\n                        </button>\n                    )}\n                    <button onClick={() => setIsBrandingModalOpen(true)} \n                            className=\"px-4 py-2 bg-black/50 rounded-lg text-sm hover:bg-black/70 backdrop-blur-sm min-h-[44px]\">\n                        {isMobile ? 'Brand' : 'Edit Branding'}\n                    </button>\n                    <button onClick={() => setIsShareModalOpen(true)} \n                            className=\"px-4 py-2 bg-black/50 rounded-lg text-sm hover:bg-black/70 backdrop-blur-sm flex items-center gap-2 min-h-[44px] justify-center\">\n                        <Share2Icon /> {!isMobile && 'Share Team Card'}\n                    </button>\n                     {team.themeSongUrl && \n                        <button onClick={playThemeSong} \n                                className=\"px-4 py-2 bg-black/50 rounded-lg text-sm hover:bg-black/70 backdrop-blur-sm flex items-center gap-2 min-h-[44px] justify-center\">\n                            <MusicIcon /> {!isMobile && 'Play Anthem'}\n                        </button>\n                     }\n                     {isInSeason && (\n                        <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'GAMEDAY_HOST' })} \n                                className=\"px-4 py-2 bg-red-500/80 text-white rounded-lg text-sm hover:bg-red-500 backdrop-blur-sm flex items-center gap-2 min-h-[44px] justify-center\">\n                           <TvIcon /> {!isMobile && 'Gameday Host'}\n                        </button>\n                     )}\n                     {isSeasonComplete && (\n                         <button onClick={() => setIsAwardsModalOpen(true)} \n                                 className=\"px-4 py-2 bg-yellow-500/80 text-white rounded-lg text-sm hover:bg-yellow-500 backdrop-blur-sm flex items-center gap-2 min-h-[44px] justify-center\">\n                            <AwardIcon /> {!isMobile && 'Assign Season Awards'}\n                        </button>\n                     )}\n                     {league.status === 'COMPLETE' && (\n                         <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'SEASON_STORY' })} \n                                 className=\"px-4 py-2 bg-purple-500/80 text-white rounded-lg text-sm hover:bg-purple-500 backdrop-blur-sm min-h-[44px]\">\n                            {isMobile ? 'Story' : 'View My Season Story'}\n                        </button>\n                     )}\n                     {isWaiversActive && (\n                         <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'WAIVER_WIRE' })} \n                                 className=\"px-4 py-2 bg-black/50 rounded-lg text-sm hover:bg-black/70 backdrop-blur-sm min-h-[44px]\">\n                            {isMobile ? 'Waivers' : 'Waiver Wire'}\n                        </button>\n                    )}\n                    {isSeasonStarted && (\n                        <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'WEEKLY_REPORT' })} \n                                className=\"px-4 py-2 bg-black/50 rounded-lg text-sm hover:bg-black/70 backdrop-blur-sm min-h-[44px]\">\n                            {isMobile ? 'Report' : 'Weekly Report'}\n                        </button>\n                    )}\n                     {isSeasonStarted && (\n                        <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'PERFORMANCE_TRENDS' })} \n                                className=\"px-4 py-2 bg-black/50 rounded-lg text-sm hover:bg-black/70 backdrop-blur-sm min-h-[44px]\">\n                            Performance\n                        </button>\n                     )}\n                    {isSeasonStarted && (\n                        <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'POWER_RANKINGS' })} \n                                className=\"px-4 py-2 bg-black/50 rounded-lg text-sm hover:bg-black/70 backdrop-blur-sm min-h-[44px]\">\n                            {isMobile ? 'Rankings' : 'Power Rankings'}\n                        </button>\n                    )}\n                    {isPlayoffs && (\n                         <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'PLAYOFF_BRACKET' })} \n                                 className=\"px-4 py-2 bg-black/50 rounded-lg text-sm hover:bg-black/70 backdrop-blur-sm min-h-[44px]\">\n                            {isMobile ? 'Playoffs' : 'Playoff Bracket'}\n                        </button>\n                    )}\n                    <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'ANALYTICS_HUB' })} \n                            className=\"px-4 py-2 bg-black/50 rounded-lg text-sm hover:bg-black/70 backdrop-blur-sm min-h-[44px]\">\n                        Analytics\n                    </button>\n                    <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_STANDINGS' })} \n                            className=\"px-4 py-2 bg-black/50 rounded-lg text-sm hover:bg-black/70 backdrop-blur-sm min-h-[44px]\">\n                        Standings\n                    </button>\n                    <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} \n                            className=\"px-4 py-2 bg-black/50 rounded-lg text-sm hover:bg-black/70 backdrop-blur-sm min-h-[44px]\">\n                        Dashboard\n                    </button>\n                </div>\n            </header>\n            <main className={`flex-grow grid ${isMobile ? 'grid-cols-1 gap-4' : 'grid-cols-1 lg:grid-cols-5'} gap-6`}>\n                <div className={isMobile ? '' : 'lg:col-span-3'}>\n                    <Widget title=\"My Roster\">\n                        <VisualRoster team={team} />\n                    </Widget>\n                </div>\n                <div className={`${isMobile ? 'space-y-4' : 'lg:col-span-2 space-y-6'}`}>\n                    {isInSeason && <CurrentMatchupWidget myTeam={team} league={league} dispatch={dispatch} />}\n                    {isFullAiEnabled && <TradeWhispererWidget onPropose={handleProposeFromWhisperer} />}\n                    {isFullAiEnabled && isInSeason && <ChampionshipOddsWidget team={team} league={league} dispatch={dispatch} />}\n                    {isFullAiEnabled && isDraftComplete && <SeasonOutlookWidget league={league} myTeam={team} dispatch={dispatch} />}\n                    <MascotWidget team={team} league={league} dispatch={dispatch} />\n                    {isFullAiEnabled && isInSeason && <DailyBriefingWidget league={league} myTeam={team} dispatch={dispatch} />}\n                    {isFullAiEnabled && isInSeason && <AiCoManagerWidget team={team} league={league} dispatch={dispatch} />}\n                    {isInSeason && <InjuryReportWidget myTeam={team} />}\n                    {isFullAiEnabled && <TeamChemistryWidget league={league} myTeam={team} dispatch={dispatch} />}\n                    <FuturePicksWidget team={team} />\n                    <TrophyCaseWidget team={team} league={league} />\n                    <LeagueTeamsList league={league} myTeamId={team.id} dispatch={dispatch} />\n                    <TradeCenterWidget league={league} team={team} dispatch={dispatch} />\n                </div>\n            </main>\n            <AnimatePresence>\n                {isEditHeaderModalOpen && (\n                    <EditHeaderModal\n                        leagueId={league.id}\n                        teamId={team.id}\n                        currentHeader={team.headerImage}\n                        dispatch={dispatch}\n                        onClose={() => setIsEditHeaderModalOpen(false)}\n                    />\n                )}\n                 {isBrandingModalOpen && (\n                    <EditTeamBrandingModal\n                        team={team}\n                        leagueId={league.id}\n                        dispatch={dispatch}\n                        onClose={() => setIsBrandingModalOpen(false)}\n                    />\n                )}\n                 {isShareModalOpen && (\n                    <ShareTeamCardModal\n                        team={team}\n                        onClose={() => setIsShareModalOpen(false)}\n                    />\n                )}\n                {isAwardsModalOpen && (\n                    <AssignAwardsModal\n                        team={team}\n                        league={league}\n                        dispatch={dispatch}\n                        onClose={() => setIsAwardsModalOpen(false)}\n                    />\n                )}\n                {isProposeTradeModalOpen && tradeOpponent && (\n                    <ProposeTradeModal\n                        myTeam={team}\n                        otherTeam={tradeOpponent}\n                        leagueId={league.id}\n                        dispatch={dispatch}\n                        onClose={() => setIsProposeTradeModalOpen(false)}\n                        initialOffer={tradeSuggestion || undefined}\n                    />\n                )}\n            </AnimatePresence>\n            {team.themeSongUrl && <audio ref={audioRef} src={team.themeSongUrl} />}\n        </div>\n    );\n};\n\n\nconst TeamHubView: React.FC = () => {\n    const { dispatch } = useAppState();\n    const { league, myTeam } = useLeague();\n\n    return (\n        <div className=\"w-full h-full\">\n            {(!myTeam || !league) ? (\n                <div className=\"w-full h-full flex items-center justify-center\">\n                    <p>Team or League not found.</p>\n                    <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} className=\"ml-4 px-4 py-2 bg-cyan-500 rounded\">\n                        Back to Dashboard\n                    </button>\n                </div>\n            ) : (\n                <TeamHubContent league={league} team={myTeam} dispatch={dispatch} />\n            )}\n        </div>\n    );\n};\n\nexport default TeamHubView;\n"],"names":["SortablePlayerCard","player","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","style","jsxDEV","this","VisualRoster","team","dispatch","state","useAppState","activeLeague","l","starters","setStarters","React","bench","setBench","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","sortableKeyboardCoordinates","findContainer","id","p","handleDragEnd","event","active","over","activeContainer","overContainer","newStarters","newBench","oldIndex","newIndex","arrayMove","movingPlayer","activeIndex","overIndex","DndContext","closestCenter","SortableContext","rectSortingStrategy","ManageTradeBlockModal","leagueId","onClose","originalBlockedIds","selectedIds","setSelectedIds","handleTogglePlayer","playerId","prev","newSet","handleSaveChanges","Modal","motion","e","CloseIcon","ScalesIcon","className","PaperPlaneIcon","EmptyTumbleweedIcon","TradeCenterWidget","league","isBlockModalOpen","setIsBlockModalOpen","activeTab","setActiveTab","incomingOffers","o","outgoingOffers","playTradeSound","useSound","prevIncomingOffersCount","myBlockedPlayers","playerMap","players","handleRemoveFromBlock","tabItems","renderContent","TradeOfferCard","offer","EmptyState","InboxIcon","Fragment","Widget","Tabs","AnimatePresence","AssetSelectItem","label","subtext","isSelected","onToggle","ProposeTradeModal","myTeam","otherTeam","initialOffer","playersToSend","setPlayersToSend","playersToReceive","setPlayersToReceive","picksToSend","setPicksToSend","picksToReceive","setPicksToReceive","analysis","setAnalysis","isAnalyzing","setIsAnalyzing","toggleAsset","list","setState","stringToPick","key","season","round","handleAnalyze","s","toSendP","toReceiveP","result","analyzeTrade","handleSendOffer","winnerStyle","ArrowRightLeftIcon","SparklesIcon","LeagueTeamsList","myTeamId","isModalOpen","setIsModalOpen","selectedOpponent","setSelectedOpponent","t","opponents","isTradeDeadlinePassed","handleProposeTrade","opponent","handleCloseModal","Tooltip","TargetIcon","WandIcon","itemConfig","LightbulbIcon","AlertTriangleIcon","FireIcon","BriefingItemCard","item","onGetAdvice","onClaimPlayer","config","handleCardClick","canGetAdvice","waiverGemPlayer","canClaimPlayer","actionButton","PlusCircleIcon","LineupSuggestion","suggestion","onAccept","onDismiss","suggestedPlayers","Avatar","DailyBriefingWidget","briefing","setBriefing","isLoading","setIsLoading","isAdviceLoading","setIsAdviceLoading","lineupSuggestion","setLineupSuggestion","claimModalPlayer","setClaimModalPlayer","fetchBriefing","data","generateDailyBriefing","handleGetAdvice","playerIds","getLineupSolution","handleAcceptLineup","handleClaimPlayer","LoadingSpinner","index","PlaceClaimModal","CurrentMatchupWidget","nextMatchup","m","opponentId","TeamChemistryWidget","report","handleFetchReport","fetchedReport","generateTeamChemistryReport","SeasonOutlookWidget","outlook","fetchOutlook","fetchedOutlook","generateSeasonOutlook","TelescopeIcon","ImageIcon","EditHeaderModal","teamId","currentHeader","imageUrl","setImageUrl","handleSave","TrophyCaseWidget","awards","TrophyIcon","award","InjuryReportWidget","injuredPlayers","handlePlayerClick","InjuryIcon","AiCoManagerWidget","setSuggestion","handleGetLineup","getAiOptimalLineup","BrainCircuitIcon","SparklineChart","width","height","strokeColor","strokeWidth","min","range","points","d","i","x","y","ChampionshipOddsWidget","history","currentProb","dataPoints","h","EditTeamBrandingModal","teamName","setTeamName","teamLogo","setTeamLogo","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","motto","setMotto","loading","setLoading","predefinedColors","logoOptions","resolve","error","emoji","color","MusicIcon","ArchiveIcon","FuturePicksWidget","picksBySeason","acc","pick","a","b","rounds","TvIcon","Share2Icon","TeamBrandingCard","slogan","name","avatar","record","ShareTeamCardModal","setSlogan","isLoadingSlogan","setIsLoadingSlogan","isCopied","setIsCopied","cardRef","copy","useCopyToClipboard","generateTeamSlogan","generatedSlogan","handleCopy","textToCopy","CheckIcon","ClipboardIcon","PawPrintIcon","MascotWidget","mascotUrl","handleGenerate","newMascotUrl","generateTeamMascot","LazyImage","TradeWhispererWidget","onPropose","useLeague","handleFindTrade","proactivelySuggestTrade","MessageCircleIcon","awardTypes","AssignAwardsModal","selectedAwards","setSelectedAwards","initialState","currentSeason","handleSelect","awardType","awardsPayload","labelClasses","selectClasses","AwardIcon","type","description","TeamHubContent","isMobile","useResponsiveBreakpoint","isWaiversActive","isSeasonStarted","isDraftComplete","isPlayoffs","isInSeason","isSeasonComplete","isKeeperLeague","isPreDraft","isFullAiEnabled","isEditHeaderModalOpen","setIsEditHeaderModalOpen","isBrandingModalOpen","setIsBrandingModalOpen","isShareModalOpen","setIsShareModalOpen","isAwardsModalOpen","setIsAwardsModalOpen","isProposeTradeModalOpen","setIsProposeTradeModalOpen","tradeSuggestion","setTradeSuggestion","tradeOpponent","setTradeOpponent","audioRef","headerStyle","playThemeSong","handleProposeFromWhisperer","UsersIcon","TeamHubView"],"mappings":"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"}