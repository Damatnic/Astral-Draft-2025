var g=Object.defineProperty;var P=(d,e,t)=>e in d?g(d,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):d[e]=t;var r=(d,e,t)=>P(d,typeof e!="symbol"?e+"":e,t);import{u as v,R as y}from"./index-COBmtdYu.js";import{p as u}from"./productionSportsDataService-DQpmh5u2.js";class A{constructor(){r(this,"wsConnection",{socket:null,isConnected:!1,reconnectAttempts:0,subscriptions:new Set});r(this,"gameDataCache",new Map);r(this,"playerDataCache",new Map);r(this,"eventListeners",new Map);r(this,"intervals",{});r(this,"GAME_POLLING_INTERVAL",1e4);r(this,"PLAYER_POLLING_INTERVAL",3e4);r(this,"ODDS_POLLING_INTERVAL",12e4);r(this,"MAX_RECONNECT_ATTEMPTS",5);r(this,"RECONNECT_DELAY",5e3);this.initializeConnection()}initializeConnection(){this.wsConnection.isConnected=!0,this.wsConnection.reconnectAttempts=0,this.startPolling()}startPolling(){this.intervals.games=setInterval(()=>{this.pollLiveGames()},this.GAME_POLLING_INTERVAL),this.intervals.players=setInterval(()=>{this.pollPlayerUpdates()},this.PLAYER_POLLING_INTERVAL),this.intervals.odds=setInterval(()=>{this.pollOddsUpdates()},this.ODDS_POLLING_INTERVAL)}async pollLiveGames(){try{const e=await u.getLiveScores();for(const t of e){const s=this.gameDataCache.get(t.id);if(!s||this.hasGameChanged(s.game,t)){const i=this.generateGameEvents(s?.game,t),n=await this.getPlayerUpdatesForGame(t.id),a={game:t,events:i,playerUpdates:n,lastUpdated:Date.now()};this.gameDataCache.set(t.id,a),i.forEach(o=>{this.emit("game_event",o)}),i.some(o=>o.type==="SCORE_UPDATE")&&this.emit("score_update",{gameId:t.id,homeScore:t.homeScore,awayScore:t.awayScore,timestamp:Date.now()})}}}catch(e){console.error("❌ Error polling live games:",e)}}async pollPlayerUpdates(){try{const e=await u.getPlayerUpdates();for(const t of e){const s=this.playerDataCache.get(t.id);if(!s||this.hasPlayerChanged(s,t)){const i={playerId:t.id,name:t.name,team:t.team,position:t.position,gameId:this.findPlayerGameId(t.id),stats:{passingYards:t.stats.passingYards,passingTouchdowns:t.stats.passingTouchdowns,rushingYards:t.stats.rushingYards,rushingTouchdowns:t.stats.rushingTouchdowns,receivingYards:t.stats.receivingYards,receivingTouchdowns:t.stats.receivingTouchdowns,receptions:t.stats.receptions,fantasyPoints:t.stats.fantasyPoints||0},injuryStatus:t.injuryStatus||"healthy",lastUpdated:Date.now()};this.playerDataCache.set(t.id,i),s&&s.injuryStatus!==i.injuryStatus&&this.emit("player_injury",{playerId:t.id,name:t.name,team:t.team,oldStatus:s.injuryStatus,newStatus:i.injuryStatus,timestamp:Date.now()}),this.emit("player_update",i)}}}catch(e){console.error("❌ Error polling player updates:",e)}}async pollOddsUpdates(){try{const e=await u.getCurrentWeekGames();for(const t of e)t.odds&&this.emit("odds_update",{gameId:t.id,odds:t.odds,timestamp:Date.now()})}catch(e){console.error("❌ Error polling odds updates:",e)}}hasGameChanged(e,t){return e?e.homeScore!==t.homeScore||e.awayScore!==t.awayScore||e.status!==t.status:!0}hasPlayerChanged(e,t){return e.injuryStatus!==(t.injuryStatus||"healthy")||e.stats.fantasyPoints!==(t.stats.fantasyPoints||0)}generateGameEvents(e,t){const s=[];return e?((e.homeScore!==t.homeScore||e.awayScore!==t.awayScore)&&s.push({id:`${t.id}_score_${Date.now()}`,type:"SCORE_UPDATE",gameId:t.id,timestamp:Date.now(),data:{homeScore:t.homeScore,awayScore:t.awayScore,description:`Score Update: ${t.awayTeam.abbreviation} ${t.awayScore} - ${t.homeTeam.abbreviation} ${t.homeScore}`,impact:"positive"}}),e.status!==t.status&&t.status==="completed"&&s.push({id:`${t.id}_end_${Date.now()}`,type:"GAME_END",gameId:t.id,timestamp:Date.now(),data:{homeScore:t.homeScore,awayScore:t.awayScore,description:`Final: ${t.awayTeam.abbreviation} ${t.awayScore} - ${t.homeTeam.abbreviation} ${t.homeScore}`,impact:"neutral"}})):t.status==="live"&&s.push({id:`${t.id}_start_${Date.now()}`,type:"GAME_START",gameId:t.id,timestamp:Date.now(),data:{description:`${t.awayTeam.name} @ ${t.homeTeam.name} has started`,impact:"neutral"}}),s}findPlayerGameId(e){return`game_week_${this.getCurrentWeek()}_${e.substring(0,8)}`}async getPlayerUpdatesForGame(e){try{return(await u.getPlayerUpdates()).filter(s=>this.findPlayerGameId(s.id)===e).map(s=>({playerId:s.id,name:s.name,team:s.team,position:s.position,gameId:e,stats:{passingYards:s.stats.passingYards,passingTouchdowns:s.stats.passingTouchdowns,rushingYards:s.stats.rushingYards,rushingTouchdowns:s.stats.rushingTouchdowns,receivingYards:s.stats.receivingYards,receivingTouchdowns:s.stats.receivingTouchdowns,receptions:s.stats.receptions,fantasyPoints:s.stats.fantasyPoints||0},injuryStatus:s.injuryStatus||"healthy",lastUpdated:Date.now()}))}catch(t){return console.error("❌ Error getting player updates for game:",t),[]}}getCurrentWeek(){const e=new Date,t=new Date(e.getFullYear(),8,1),s=Math.floor((e.getTime()-t.getTime())/(10080*60*1e3));return Math.min(Math.max(s+1,1),18)}subscribe(e,t){this.eventListeners.has(e)||this.eventListeners.set(e,new Set);const s=this.eventListeners.get(e);s&&s.add(t)}unsubscribe(e,t){const s=this.eventListeners.get(e);s&&s.delete(t)}emit(e,t){const s=this.eventListeners.get(e);s&&s.forEach(i=>{try{i(t)}catch(n){console.error(`❌ Error in event listener for ${e}:`,n)}})}getLiveGameData(e){return this.gameDataCache.get(e)||null}getAllLiveGames(){return Array.from(this.gameDataCache.values())}getPlayerUpdate(e){return this.playerDataCache.get(e)||null}async forceRefresh(){await Promise.all([this.pollLiveGames(),this.pollPlayerUpdates(),this.pollOddsUpdates()])}start(){this.wsConnection.isConnected||this.initializeConnection()}stop(){Object.values(this.intervals).forEach(e=>{clearInterval(e)}),this.intervals={},this.wsConnection.socket&&(this.wsConnection.socket.close(),this.wsConnection.socket=null),this.wsConnection.isConnected=!1}getConnectionStatus(){return{isConnected:this.wsConnection.isConnected,reconnectAttempts:this.wsConnection.reconnectAttempts,subscriptions:this.wsConnection.subscriptions.size}}}const c=new A;class E{constructor(){r(this,"isActive",!1);r(this,"predictionUpdates",new Map);r(this,"intelligenceUpdates",[]);r(this,"metrics",{totalPredictions:0,activePredictions:0,averageConfidence:0,confidenceChanges:0,dataPointsProcessed:0,lastUpdated:Date.now(),realtimeAccuracy:0,trendsDetected:0});r(this,"listeners",new Map);r(this,"currentPredictions",new Map);this.setupEventListeners()}setupEventListeners(){c.subscribe("game_event",e=>{this.handleGameEvent(e)}),c.subscribe("score_update",e=>{this.handleScoreUpdate(e)}),c.subscribe("player_update",e=>{this.handlePlayerUpdate(e)}),c.subscribe("player_injury",e=>{this.handlePlayerInjury(e)}),c.subscribe("odds_update",e=>{this.handleOddsUpdate(e)})}async handleGameEvent(e){try{const t=await this.findAffectedPredictions(e.gameId);for(const s of t){const i=this.calculateConfidenceAdjustment(e,s);if(Math.abs(i)>.01){const n=s.confidence,a=Math.max(.6,Math.min(.95,n+i));s.confidence=a,this.currentPredictions.set(s.id,s);const o={predictionId:s.id,oldConfidence:n,newConfidence:a,reason:this.getConfidenceChangeReason(e,i),dataSource:"live_game_event",timestamp:Date.now(),impact:i>0?"positive":"negative"};this.recordPredictionUpdate(o);const l={type:"confidence_change",severity:Math.abs(i)>.05?"high":"medium",title:"Live Data Impact",message:`${e.data.description} affecting prediction confidence`,affectedPredictions:[s.id],data:{event:e,confidenceAdjustment:i},timestamp:Date.now()};this.addIntelligenceUpdate(l)}}this.updateMetrics(),this.emit("predictions_updated",{affectedPredictions:t.map(s=>s.id)})}catch(t){console.error("❌ Error handling game event:",t)}}async handleScoreUpdate(e){try{const t=await this.findAffectedPredictions(e.gameId);for(const s of t)if(s.type==="GAME_OUTCOME"||s.type==="PLAYER_PERFORMANCE"){const i=this.calculateScoreBasedConfidenceAdjustment(e,s);if(Math.abs(i)>.02){const n=s.confidence,a=Math.max(.6,Math.min(.95,n+i));s.confidence=a,this.currentPredictions.set(s.id,s);const o={predictionId:s.id,oldConfidence:n,newConfidence:a,reason:`Score update: ${e.homeScore}-${e.awayScore}`,dataSource:"live_score_update",timestamp:Date.now(),impact:i>0?"positive":"negative"};this.recordPredictionUpdate(o)}}this.updateMetrics(),this.emit("score_updated",e)}catch(t){console.error("❌ Error handling score update:",t)}}async handlePlayerUpdate(e){try{const t=await this.findPlayerAffectedPredictions(e.playerId);for(const s of t){const i=this.calculatePlayerBasedConfidenceAdjustment(e,s);if(Math.abs(i)>.01){const n=s.confidence,a=Math.max(.6,Math.min(.95,n+i));s.confidence=a,this.currentPredictions.set(s.id,s);const o={predictionId:s.id,oldConfidence:n,newConfidence:a,reason:`Player performance update: ${e.name} (${e.stats.fantasyPoints} fantasy pts)`,dataSource:"live_player_update",timestamp:Date.now(),impact:i>0?"positive":"negative"};this.recordPredictionUpdate(o)}}this.updateMetrics(),this.emit("player_updated",e)}catch(t){console.error("❌ Error handling player update:",t)}}async handlePlayerInjury(e){try{const t=await this.findPlayerAffectedPredictions(e.playerId),s={healthy:0,questionable:-.02,doubtful:-.05,out:-.1},i=(s[e.newStatus]||0)-(s[e.oldStatus]||0);for(const a of t){const o=a.confidence,l=Math.max(.6,Math.min(.95,o+i));a.confidence=l,this.currentPredictions.set(a.id,a);const p={predictionId:a.id,oldConfidence:o,newConfidence:l,reason:`Injury status change: ${e.name} (${e.oldStatus} → ${e.newStatus})`,dataSource:"player_injury_update",timestamp:Date.now(),impact:i>0?"positive":"negative"};this.recordPredictionUpdate(p)}const n={type:"data_alert",severity:e.newStatus==="out"?"critical":"high",title:"Player Injury Alert",message:`${e.name} (${e.team}) status changed from ${e.oldStatus} to ${e.newStatus}`,affectedPredictions:t.map(a=>a.id),data:e,timestamp:Date.now()};this.addIntelligenceUpdate(n),this.updateMetrics(),this.emit("player_injury",e)}catch(t){console.error("❌ Error handling player injury:",t)}}async handleOddsUpdate(e){try{const t=await this.findAffectedPredictions(e.gameId);for(const s of t)if(s.type==="GAME_OUTCOME"){const i=this.calculateOddsBasedConfidenceAdjustment(e.odds,s);if(Math.abs(i)>.01){const n=s.confidence,a=Math.max(.6,Math.min(.95,n+i));s.confidence=a,this.currentPredictions.set(s.id,s);const o={predictionId:s.id,oldConfidence:n,newConfidence:a,reason:"Betting odds movement detected",dataSource:"odds_update",timestamp:Date.now(),impact:i>0?"positive":"negative"};this.recordPredictionUpdate(o)}}this.updateMetrics(),this.emit("odds_updated",e)}catch(t){console.error("❌ Error handling odds update:",t)}}calculateConfidenceAdjustment(e,t){const i={GAME_START:.01,SCORE_UPDATE:.02,PLAYER_INJURY:-.05,PLAYER_STATUS_CHANGE:-.02,WEATHER_UPDATE:-.01,ODDS_UPDATE:.015,QUARTER_END:.005,GAME_END:0,TIMEOUT:0,PENALTY:-.005,TURNOVER:.03,RED_ZONE_ENTRY:.02}[e.type]||0;let n;e.data.severity==="critical"?n=2:e.data.severity==="high"?n=1.5:e.data.severity==="medium"?n=1:n=.5;let a;return e.data.impact==="positive"?a=1:e.data.impact==="negative"?a=-1:a=0,i*n*a}calculateScoreBasedConfidenceAdjustment(e,t){const i=Math.abs(e.homeScore-e.awayScore)>14;return t.type==="GAME_OUTCOME"?i?.03:.01:0}calculatePlayerBasedConfidenceAdjustment(e,t){if(t.type==="PLAYER_PERFORMANCE"){const s=e.stats.fantasyPoints;if(s>20)return .03;if(s>15)return .02;if(s>10)return .01;if(s<5)return-.02}return 0}calculateOddsBasedConfidenceAdjustment(e,t){return .01}async findAffectedPredictions(e){return Array.from(this.currentPredictions.values()).filter(s=>s.question.toLowerCase().includes(e.toLowerCase()))}async findPlayerAffectedPredictions(e){return Array.from(this.currentPredictions.values()).filter(s=>s.question.toLowerCase().includes(e.toLowerCase()))}getConfidenceChangeReason(e,t){return`Confidence ${t>0?"increased":"decreased"} due to ${e.data.description}`}recordPredictionUpdate(e){this.predictionUpdates.has(e.predictionId)||this.predictionUpdates.set(e.predictionId,[]);const t=this.predictionUpdates.get(e.predictionId);t&&(t.push(e),t.length>50&&t.splice(0,t.length-50))}addIntelligenceUpdate(e){this.intelligenceUpdates.unshift(e),this.intelligenceUpdates.length>100&&this.intelligenceUpdates.splice(100),this.emit("intelligence_update",e)}updateMetrics(){const e=Array.from(this.currentPredictions.values());this.metrics={totalPredictions:e.length,activePredictions:e.length,averageConfidence:e.reduce((t,s)=>t+s.confidence,0)/e.length||0,confidenceChanges:Array.from(this.predictionUpdates.values()).reduce((t,s)=>t+s.length,0),dataPointsProcessed:this.metrics.dataPointsProcessed+1,lastUpdated:Date.now(),realtimeAccuracy:this.calculateRealTimeAccuracy(),trendsDetected:this.intelligenceUpdates.filter(t=>t.type==="trend_detected").length},this.emit("metrics_updated",this.metrics)}calculateRealTimeAccuracy(){const e=this.intelligenceUpdates.slice(0,20),t=e.filter(s=>s.type==="confidence_change").length;return e.length>0?t/e.length:.85}subscribe(e,t){this.listeners.has(e)||this.listeners.set(e,new Set);const s=this.listeners.get(e);s&&s.add(t)}unsubscribe(e,t){const s=this.listeners.get(e);s&&s.delete(t)}emit(e,t){const s=this.listeners.get(e);s&&s.forEach(i=>{try{i(t)}catch(n){console.error(`❌ Error in event listener for ${e}:`,n)}})}start(){this.isActive||(this.isActive=!0,c.start(),this.emit("service_started",{timestamp:Date.now()}))}stop(){this.isActive&&(this.isActive=!1,c.stop(),this.emit("service_stopped",{timestamp:Date.now()}))}getMetrics(){return{...this.metrics}}getPredictionUpdates(e){return e?this.predictionUpdates.get(e)||[]:Array.from(this.predictionUpdates.values()).flat()}getIntelligenceUpdates(e=20){return this.intelligenceUpdates.slice(0,e)}addPrediction(e){this.currentPredictions.set(e.id,e),this.updateMetrics()}removePrediction(e){this.currentPredictions.delete(e),this.predictionUpdates.delete(e),this.updateMetrics()}getStatus(){return{isActive:this.isActive,dataServiceStatus:c.getConnectionStatus(),predictions:this.currentPredictions.size}}}const m=new E;class _{constructor(){r(this,"intervalId",null);r(this,"listeners",[]);r(this,"isActive",!1);this.setupRealTimeListeners()}setupRealTimeListeners(){c.subscribe("game_event",e=>{const t={id:e.id,type:this.convertEventType(e.type),timestamp:e.timestamp,text:e.data.description,teamId:1,player:{id:parseInt(e.data.playerId||"1"),name:e.data.playerName||"Player",position:"RB",team:e.data.team||"NFL",rank:1,adp:1,bye:0,tier:1,age:25,auctionValue:1,stats:{projection:0,lastYear:0,vorp:0,weeklyProjections:{}}},points:0};this.emit(t)}),c.subscribe("player_update",e=>{const t={id:`player_update_${e.playerId}_${Date.now()}`,type:"BIG_PLAY",timestamp:e.lastUpdated,text:`${e.name} has ${e.stats.fantasyPoints} fantasy points`,teamId:1,player:{id:parseInt(e.playerId.replace(/\D/g,"")||"1"),name:e.name,position:e.position||"RB",team:e.team,rank:1,adp:1,bye:0,tier:1,age:25,auctionValue:1,stats:{projection:e.stats.fantasyPoints,lastYear:0,vorp:0,weeklyProjections:{}}},points:e.stats.fantasyPoints};this.emit(t)}),c.subscribe("player_injury",e=>{const t={id:`injury_${e.playerId}_${Date.now()}`,type:"FUMBLE",timestamp:e.timestamp,text:`${e.name} injury status: ${e.oldStatus} → ${e.newStatus}`,teamId:1,player:{id:parseInt(e.playerId.replace(/\D/g,"")||"1"),name:e.name,position:"RB",team:e.team,rank:1,adp:1,bye:0,tier:1,age:25,auctionValue:1,stats:{projection:0,lastYear:0,vorp:0,weeklyProjections:{}}},points:-5};this.emit(t)}),m.subscribe("intelligence_update",e=>{const t={id:`oracle_${Date.now()}`,date:new Date(e.timestamp).toISOString(),headline:e.title,source:"Oracle AI"};this.emit(t)})}convertEventType(e){return{SCORE_UPDATE:"TOUCHDOWN",PLAYER_INJURY:"FUMBLE",TURNOVER:"FUMBLE",RED_ZONE_ENTRY:"REDZONE_ENTRY",GAME_START:"BIG_PLAY",GAME_END:"BIG_PLAY",QUARTER_END:"BIG_PLAY"}[e]||"BIG_PLAY"}start(e,t,s){this.intervalId&&this.stop(),this.isActive=!0,c.start(),m.start(),this.emit({id:"welcome_live_data",type:"BIG_PLAY",timestamp:Date.now(),text:"Real-time NFL data and Oracle insights are now active",teamId:1,player:{id:1,name:"Oracle System",position:"QB",team:"NFL",rank:1,adp:1,bye:0,tier:1,age:25,auctionValue:1,stats:{projection:0,lastYear:0,vorp:0,weeklyProjections:{}}},points:5})}stop(){this.intervalId&&(window.clearInterval(this.intervalId),this.intervalId=null),this.isActive=!1,c.stop(),m.stop()}subscribe(e){this.listeners.push(e)}unsubscribe(e){this.listeners=this.listeners.filter(t=>t!==e)}emit(e){this.listeners.forEach(t=>{try{t(e)}catch(s){console.error("❌ Error in live data listener:",s)}})}getStatus(){return{isActive:this.isActive,realTimeNfl:c.getConnectionStatus(),oracleIntegration:m.getStatus(),listeners:this.listeners.length}}async forceRefresh(){this.isActive&&await c.forceRefresh()}}const h=new _,I=(d,e,t)=>{const{state:s,dispatch:i}=v(),[n,a]=y.useState(null);return y.useEffect(()=>{if(s.currentView==="MATCHUP"&&d&&e&&t){const o=l=>{if("type"in l&&"player"in l){const p=d.schedule.find(f=>f.week===d.currentWeek&&(f.teamA.teamId===e.id||f.teamB.teamId===e.id));p&&i({type:"ADD_GAMEDAY_EVENT",payload:{matchupId:p.id,event:l}})}else a(l)};return h.subscribe(o),h.start(d,e,t),()=>{h.unsubscribe(o),h.stop()}}else h.stop()},[d,e,t,i,s.currentView]),{latestNews:n}};export{I as u};
