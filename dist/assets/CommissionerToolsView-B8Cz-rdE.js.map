{"version":3,"file":"CommissionerToolsView-B8Cz-rdE.js","sources":["../../components/icons/XIcon.tsx","../../components/icons/SaveIcon.tsx","../../components/commissioner/LeagueSettingsEditor.tsx","../../components/commissioner/EnhancedMemberManagement.tsx","../../components/icons/RefreshIcon.tsx","../../components/icons/AdjustmentsIcon.tsx","../../components/commissioner/SeasonManagement.tsx","../../components/commissioner/CreatePollModal.tsx","../../components/commissioner/PostAnnouncementModal.tsx","../../components/commissioner/ManageTradesModal.tsx","../../components/commissioner/InviteMemberModal.tsx","../../components/commissioner/MemberManagementWidget.tsx","../../views/CommissionerToolsView.tsx"],"sourcesContent":["import React from 'react';\n\nexport const XIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg \n        xmlns=\"http://www.w3.org/2000/svg\" \n        width=\"24\" \n        height=\"24\" \n        viewBox=\"0 0 24 24\" \n        fill=\"none\" \n        stroke=\"currentColor\" \n        strokeWidth=\"2\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\" \n        className={className}\n    >\n        <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n    </svg>\n);\n","import React from 'react';\n\nexport const SaveIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg \n        xmlns=\"http://www.w3.org/2000/svg\" \n        width=\"24\" \n        height=\"24\" \n        viewBox=\"0 0 24 24\" \n        fill=\"none\" \n        stroke=\"currentColor\" \n        strokeWidth=\"2\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\" \n        className={className}\n    >\n        <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\" />\n        <polyline points=\"17,21 17,13 7,13 7,21\" />\n        <polyline points=\"7,3 7,8 15,8\" />\n    </svg>\n);\n","/**\n * Enhanced League Settings Editor Modal\n * Comprehensive league configuration management\n */\n\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Widget } from '../ui/Widget';\nimport { XIcon } from '../icons/XIcon';\nimport { SaveIcon } from '../icons/SaveIcon';\nimport { SettingsIcon } from '../icons/SettingsIcon';\nimport { League, LeagueSettings } from '../../types';\n\ninterface LeagueSettingsEditorProps {\n    league: League;\n    onClose: () => void;\n    onSave: (settings: LeagueSettings) => void;\n}\n\ninterface SettingsFormData {\n    draftFormat: 'SNAKE' | 'AUCTION';\n    teamCount: number;\n    rosterSize: number;\n    scoring: 'Standard' | 'PPR' | 'Half-PPR';\n    tradeDeadline: number;\n    playoffFormat: '4_TEAM' | '6_TEAM';\n    waiverRule: 'FAAB' | 'REVERSE_ORDER';\n    aiAssistanceLevel: 'FULL' | 'BASIC';\n    // Additional settings\n    rosterPositions: {\n        QB: number;\n        RB: number;\n        WR: number;\n        TE: number;\n        FLEX: number;\n        K: number;\n        DST: number;\n        BENCH: number;\n        IR: number;\n    };\n    faabBudget: number;\n    pickTimer: number;\n    maxKeepers: number;\n    tradingEnabled: boolean;\n    waiverPeriod: number;\n}\n\nconst LeagueSettingsEditor: React.FC<LeagueSettingsEditorProps> = ({ league, onClose, onSave }) => {\n    const [formData, setFormData] = React.useState<SettingsFormData>({\n        draftFormat: league.settings.draftFormat,\n        teamCount: league.settings.teamCount,\n        rosterSize: league.settings.rosterSize,\n        scoring: league.settings.scoring,\n        tradeDeadline: league.settings.tradeDeadline,\n        playoffFormat: league.settings.playoffFormat,\n        waiverRule: league.settings.waiverRule,\n        aiAssistanceLevel: league.settings.aiAssistanceLevel,\n        rosterPositions: {\n            QB: 1,\n            RB: 2,\n            WR: 2,\n            TE: 1,\n            FLEX: 1,\n            K: 1,\n            DST: 1,\n            BENCH: 6,\n            IR: 1\n        },\n        faabBudget: 100,\n        pickTimer: 90,\n        maxKeepers: 0,\n        tradingEnabled: true,\n        waiverPeriod: 1\n    });\n\n    const [activeTab, setActiveTab] = React.useState<'basic' | 'roster' | 'scoring' | 'waivers' | 'advanced'>('basic');\n    const [hasChanges, setHasChanges] = React.useState(false);\n\n    const updateField = <K extends keyof SettingsFormData>(field: K, value: SettingsFormData[K]) => {\n        setFormData(prev => ({ ...prev, [field]: value }));\n        setHasChanges(true);\n    };\n\n    const updateRosterPosition = (position: keyof SettingsFormData['rosterPositions'], value: number) => {\n        setFormData(prev => ({\n            ...prev,\n            rosterPositions: { ...prev.rosterPositions, [position]: value }\n        }));\n        setHasChanges(true);\n    };\n\n    const handleSave = () => {\n        const updatedSettings: LeagueSettings = {\n            draftFormat: formData.draftFormat,\n            teamCount: formData.teamCount,\n            rosterSize: formData.rosterSize,\n            scoring: formData.scoring,\n            tradeDeadline: formData.tradeDeadline,\n            playoffFormat: formData.playoffFormat,\n            waiverRule: formData.waiverRule,\n            aiAssistanceLevel: formData.aiAssistanceLevel\n        };\n        onSave(updatedSettings);\n        onClose();\n    };\n\n    const tabs = [\n        { id: 'basic', label: 'Basic', icon: '‚öôÔ∏è' },\n        { id: 'roster', label: 'Roster', icon: 'üë•' },\n        { id: 'scoring', label: 'Scoring', icon: 'üèÜ' },\n        { id: 'waivers', label: 'Waivers', icon: 'üìã' },\n        { id: 'advanced', label: 'Advanced', icon: 'üîß' }\n    ] as const;\n\n    return (\n        <AnimatePresence>\n            <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/75\"\n                onClick={(e: any) => e.target === e.currentTarget && onClose()}\n            >\n                <motion.div\n                    initial={{ scale: 0.9, opacity: 0 }}\n                    animate={{ scale: 1, opacity: 1 }}\n                    exit={{ scale: 0.9, opacity: 0 }}\n                    className=\"bg-[var(--panel-bg)] border border-[var(--panel-border)] rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-hidden\"\n                >\n                    {/* Header */}\n                    <div className=\"p-6 border-b border-[var(--panel-border)] flex items-center justify-between\">\n                        <div className=\"flex items-center gap-3\">\n                            <SettingsIcon className=\"w-6 h-6 text-blue-500\" />\n                            <div>\n                                <h2 className=\"text-xl font-bold text-[var(--text-primary)]\">League Settings</h2>\n                                <p className=\"text-sm text-[var(--text-secondary)]\">{league.name}</p>\n                            </div>\n                        </div>\n                        <button\n                            onClick={onClose}\n                            className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\n                        >\n                            <XIcon className=\"w-5 h-5\" />\n                        </button>\n                    </div>\n\n                    {/* Tab Navigation */}\n                    <div className=\"flex border-b border-[var(--panel-border)] bg-[var(--bg-secondary)]\">\n                        {tabs.map((tab) => (\n                            <button\n                                key={tab.id}\n                                onClick={() => setActiveTab(tab.id)}\n                                className={`flex-1 px-4 py-3 text-sm font-medium transition-colors ${\n                                    activeTab === tab.id\n                                        ? 'text-blue-500 border-b-2 border-blue-500 bg-[var(--panel-bg)]'\n                                        : 'text-[var(--text-secondary)] hover:text-[var(--text-primary)] hover:bg-white/5'\n                                }`}\n                            >\n                                <span className=\"mr-2\">{tab.icon}</span>\n                                {tab.label}\n                            </button>\n                        ))}\n                    </div>\n\n                    {/* Content */}\n                    <div className=\"p-6 overflow-y-auto max-h-[60vh]\">\n                        {activeTab === 'basic' && (\n                            <div className=\"space-y-6\">\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                            Draft Format\n                                        </label>\n                                        <select\n                                            value={formData.draftFormat}\n                                            onChange={(e: any) => updateField('draftFormat', e.target.value as 'SNAKE' | 'AUCTION')}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                        >\n                                            <option value=\"SNAKE\">Snake Draft</option>\n                                            <option value=\"AUCTION\">Auction Draft</option>\n                                        </select>\n                                    </div>\n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                            Team Count\n                                        </label>\n                                        <select\n                                            value={formData.teamCount}\n                                            onChange={(e: any) => updateField('teamCount', parseInt(e.target.value))}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                        >\n                                            {[8, 10, 12, 14, 16, 18, 20].map((count: any) => (\n                                                <option key={count} value={count}>{count} Teams</option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                            Playoff Format\n                                        </label>\n                                        <select\n                                            value={formData.playoffFormat}\n                                            onChange={(e: any) => updateField('playoffFormat', e.target.value as any)}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                        >\n                                            <option value=\"4_TEAM\">4 Team Playoff</option>\n                                            <option value=\"6_TEAM\">6 Team Playoff</option>\n                                        </select>\n                                    </div>\n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                            Trade Deadline (Week)\n                                        </label>\n                                        <input\n                                            type=\"number\"\n                                            min=\"1\"\n                                            max=\"17\"\n                                            value={formData.tradeDeadline}\n                                            onChange={(e: any) => updateField('tradeDeadline', parseInt(e.target.value))}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n\n                        {activeTab === 'roster' && (\n                            <div className=\"space-y-6\">\n                                <div>\n                                    <h3 className=\"text-lg font-semibold text-[var(--text-primary)] mb-4\">Roster Positions</h3>\n                                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                                        {Object.entries(formData.rosterPositions).map(([position, count]) => (\n                                            <div key={position}>\n                                                <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                                    {position}\n                                                </label>\n                                                <input\n                                                    type=\"number\"\n                                                    min=\"0\"\n                                                    max=\"10\"\n                                                    value={count}\n                                                    onChange={(e: any) => updateRosterPosition(position as any, parseInt(e.target.value))}\n                                                    className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                                />\n                                            </div>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n\n                        {activeTab === 'scoring' && (\n                            <div className=\"space-y-6\">\n                                <div>\n                                    <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                        Scoring System\n                                    </label>\n                                    <select\n                                        value={formData.scoring}\n                                        onChange={(e: any) => updateField('scoring', e.target.value as any)}\n                                        className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                    >\n                                        <option value=\"Standard\">Standard (No PPR)</option>\n                                        <option value=\"Half-PPR\">Half PPR (0.5 pts/reception)</option>\n                                        <option value=\"PPR\">Full PPR (1 pt/reception)</option>\n                                    </select>\n                                </div>\n                            </div>\n                        )}\n\n                        {activeTab === 'waivers' && (\n                            <div className=\"space-y-6\">\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                            Waiver System\n                                        </label>\n                                        <select\n                                            value={formData.waiverRule}\n                                            onChange={(e: any) => updateField('waiverRule', e.target.value as any)}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                        >\n                                            <option value=\"FAAB\">FAAB (Free Agent Auction Budget)</option>\n                                            <option value=\"REVERSE_ORDER\">Reverse Order (Waiver Priority)</option>\n                                        </select>\n                                    </div>\n                                    {formData.waiverRule === 'FAAB' && (\n                                        <div>\n                                            <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                                FAAB Budget ($)\n                                            </label>\n                                            <input\n                                                type=\"number\"\n                                                min=\"50\"\n                                                max=\"1000\"\n                                                step=\"25\"\n                                                value={formData.faabBudget}\n                                                onChange={(e: any) => updateField('faabBudget', parseInt(e.target.value))}\n                                                className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                            />\n                                        </div>\n                                    )}\n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                            Waiver Period (Days)\n                                        </label>\n                                        <input\n                                            type=\"number\"\n                                            min=\"0\"\n                                            max=\"7\"\n                                            value={formData.waiverPeriod}\n                                            onChange={(e: any) => updateField('waiverPeriod', parseInt(e.target.value))}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n\n                        {activeTab === 'advanced' && (\n                            <div className=\"space-y-6\">\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                            AI Assistance Level\n                                        </label>\n                                        <select\n                                            value={formData.aiAssistanceLevel}\n                                            onChange={(e: any) => updateField('aiAssistanceLevel', e.target.value as any)}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                        >\n                                            <option value=\"BASIC\">Basic Recommendations</option>\n                                            <option value=\"FULL\">Full Oracle Integration</option>\n                                        </select>\n                                    </div>\n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                            Draft Pick Timer (seconds)\n                                        </label>\n                                        <input\n                                            type=\"number\"\n                                            min=\"30\"\n                                            max=\"600\"\n                                            step=\"30\"\n                                            value={formData.pickTimer}\n                                            onChange={(e: any) => updateField('pickTimer', parseInt(e.target.value))}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                        />\n                                    </div>\n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-primary)] mb-2\">\n                                            Max Keepers\n                                        </label>\n                                        <input\n                                            type=\"number\"\n                                            min=\"0\"\n                                            max=\"10\"\n                                            value={formData.maxKeepers}\n                                            onChange={(e: any) => updateField('maxKeepers', parseInt(e.target.value))}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                        />\n                                    </div>\n                                    <div className=\"flex items-center\">\n                                        <input\n                                            type=\"checkbox\"\n                                            id=\"tradingEnabled\"\n                                            checked={formData.tradingEnabled}\n                                            onChange={(e: any) => updateField('tradingEnabled', e.target.checked)}\n                                            className=\"mr-2\"\n                                        />\n                                        <label htmlFor=\"tradingEnabled\" className=\"text-sm font-medium text-[var(--text-primary)]\">\n                                            Enable Trading\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    {/* Footer */}\n                    <div className=\"p-6 border-t border-[var(--panel-border)] flex justify-between items-center\">\n                        <div className=\"text-sm text-[var(--text-secondary)]\">\n                            {hasChanges && '‚Ä¢ Unsaved changes'}\n                        </div>\n                        <div className=\"flex gap-3\">\n                            <button\n                                onClick={onClose}\n                                className=\"px-4 py-2 text-[var(--text-secondary)] hover:text-[var(--text-primary)] transition-colors\"\n                            >\n                                Cancel\n                            </button>\n                            <button\n                                onClick={handleSave}\n                                disabled={!hasChanges}\n                                className=\"flex items-center gap-2 px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                                <SaveIcon className=\"w-4 h-4\" />\n                                Save Changes\n                            </button>\n                        </div>\n                    </div>\n                </motion.div>\n            </motion.div>\n        </AnimatePresence>\n    );\n};\n\nexport default LeagueSettingsEditor;\n","/**\n * Enhanced Member Management Widget\n * Comprehensive member administration with advanced controls\n */\n\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Widget } from '../ui/Widget';\nimport { UsersIcon } from '../icons/UsersIcon';\nimport { UserPlusIcon } from '../icons/UserPlusIcon';\nimport { UserRemoveIcon } from '../icons/UserRemoveIcon';\nimport { CrownIcon } from '../icons/CrownIcon';\nimport { ShieldCheckIcon } from '../icons/ShieldCheckIcon';\nimport { PencilIcon } from '../icons/PencilIcon';\nimport { XIcon } from '../icons/XIcon';\nimport { CheckIcon } from '../icons/CheckIcon';\nimport { League, User } from '../../types';\n\ninterface EnhancedMemberManagementProps {\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\ninterface MemberAction {\n    type: 'PROMOTE_TO_COMMISSIONER' | 'REMOVE_MEMBER' | 'EDIT_TEAM_NAME' | 'CHANGE_AVATAR' | 'TOGGLE_ADMIN';\n    memberId: string;\n    data?: any;\n}\n\nconst EnhancedMemberManagement: React.FC<EnhancedMemberManagementProps> = ({ league, dispatch }) => {\n    const [selectedMember, setSelectedMember] = React.useState<string | null>(null);\n    const [editMode, setEditMode] = React.useState<{ memberId: string; field: string } | null>(null);\n    const [editValue, setEditValue] = React.useState('');\n    const [showConfirmAction, setShowConfirmAction] = React.useState<MemberAction | null>(null);\n\n    // Mock members data - in real app this would come from league.members\n    const members = [\n        { id: '1', name: 'Alice Johnson', teamName: \"Alice's Aces\", isCommissioner: true, isCoCommissioner: false, avatar: 'üë©‚Äçüíº', joinDate: '2024-08-01', record: '8-4', points: 1245.6, activity: 'Active' },\n        { id: '2', name: 'Bob Smith', teamName: 'Smithtown Stallions', isCommissioner: false, isCoCommissioner: true, avatar: 'ü§†', joinDate: '2024-08-01', record: '7-5', points: 1198.2, activity: 'Active' },\n        { id: '3', name: 'Carol Davis', teamName: 'Thunder Bolts', isCommissioner: false, isCoCommissioner: false, avatar: '‚ö°', joinDate: '2024-08-02', record: '6-6', points: 1087.3, activity: 'Inactive (3 days)' },\n        { id: '4', name: 'David Wilson', teamName: 'Wilson Warriors', isCommissioner: false, isCoCommissioner: false, avatar: '‚öîÔ∏è', joinDate: '2024-08-01', record: '9-3', points: 1312.7, activity: 'Active' }\n    ];\n\n    const handleMemberAction = (action: MemberAction) => {\n        setShowConfirmAction(action);\n    };\n\n    const confirmAction = () => {\n        if (!showConfirmAction) return;\n\n        switch (showConfirmAction.type) {\n            case 'REMOVE_MEMBER':\n                dispatch({ \n                    type: 'REMOVE_LEAGUE_MEMBER', \n                    payload: { leagueId: league.id, memberId: showConfirmAction.memberId } \n                });\n                dispatch({ \n                    type: 'ADD_NOTIFICATION', \n                    payload: { message: 'Member removed from league', type: 'SYSTEM' } \n                });\n                break;\n            case 'PROMOTE_TO_COMMISSIONER':\n                dispatch({ \n                    type: 'TRANSFER_COMMISSIONER', \n                    payload: { leagueId: league.id, newCommissionerId: showConfirmAction.memberId } \n                });\n                dispatch({ \n                    type: 'ADD_NOTIFICATION', \n                    payload: { message: 'Commissioner role transferred', type: 'SYSTEM' } \n                });\n                break;\n            case 'TOGGLE_ADMIN':\n                dispatch({ \n                    type: 'TOGGLE_CO_COMMISSIONER', \n                    payload: { leagueId: league.id, memberId: showConfirmAction.memberId } \n                });\n                break;\n        }\n        setShowConfirmAction(null);\n    };\n\n    const startEdit = (memberId: string, field: string, currentValue: string) => {\n        setEditMode({ memberId, field });\n        setEditValue(currentValue);\n    };\n\n    const saveEdit = () => {\n        if (!editMode) return;\n        \n        dispatch({ \n            type: 'UPDATE_MEMBER_INFO', \n            payload: { \n                leagueId: league.id, \n                memberId: editMode.memberId, \n                field: editMode.field,\n                value: editValue \n            } \n        });\n        setEditMode(null);\n        setEditValue('');\n    };\n\n    const cancelEdit = () => {\n        setEditMode(null);\n        setEditValue('');\n    };\n\n    return (\n        <Widget title=\"Enhanced Member Management\" icon={<UsersIcon className=\"w-5 h-5\" />}>\n            <div className=\"p-4 space-y-4\">\n                {/* Member Stats */}\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n                    <div className=\"bg-blue-500/20 p-3 rounded-lg text-center\">\n                        <div className=\"text-2xl font-bold text-blue-400\">{members.length}</div>\n                        <div className=\"text-xs text-gray-400\">Total Members</div>\n                    </div>\n                    <div className=\"bg-green-500/20 p-3 rounded-lg text-center\">\n                        <div className=\"text-2xl font-bold text-green-400\">{members.filter(m => m.activity === 'Active').length}</div>\n                        <div className=\"text-xs text-gray-400\">Active</div>\n                    </div>\n                    <div className=\"bg-yellow-500/20 p-3 rounded-lg text-center\">\n                        <div className=\"text-2xl font-bold text-yellow-400\">{members.filter(m => m.activity.includes('Inactive')).length}</div>\n                        <div className=\"text-xs text-gray-400\">Inactive</div>\n                    </div>\n                    <div className=\"bg-purple-500/20 p-3 rounded-lg text-center\">\n                        <div className=\"text-2xl font-bold text-purple-400\">{members.filter(m => m.isCommissioner || m.isCoCommissioner).length}</div>\n                        <div className=\"text-xs text-gray-400\">Admins</div>\n                    </div>\n                </div>\n\n                {/* Quick Actions */}\n                <div className=\"flex flex-wrap gap-2 mb-4\">\n                    <button \n                        onClick={() => dispatch({ type: 'SET_VIEW', payload: 'INVITE_MEMBERS' })}\n                        className=\"flex items-center gap-2 px-3 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm\"\n                    >\n                        <UserPlusIcon className=\"w-4 h-4\" />\n                        Invite Members\n                    </button>\n                    <button \n                        onClick={() => dispatch({ type: 'EXPORT_MEMBER_LIST', payload: league.id })}\n                        className=\"flex items-center gap-2 px-3 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm\"\n                    >\n                        üìã Export List\n                    </button>\n                    <button \n                        onClick={() => dispatch({ type: 'BULK_MESSAGE_MEMBERS', payload: league.id })}\n                        className=\"flex items-center gap-2 px-3 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm\"\n                    >\n                        üì¢ Send Message\n                    </button>\n                </div>\n\n                {/* Members List */}\n                <div className=\"space-y-3\">\n                    {members.map((member) => (\n                        <motion.div\n                            key={member.id}\n                            layout\n                            className={`p-4 border rounded-lg transition-all ${\n                                selectedMember === member.id \n                                    ? 'border-blue-500 bg-blue-500/10' \n                                    : 'border-[var(--panel-border)] hover:border-gray-500'\n                            }`}\n                        >\n                            <div className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center gap-3\">\n                                    <div className=\"text-2xl\">{member.avatar}</div>\n                                    <div>\n                                        <div className=\"flex items-center gap-2\">\n                                            <h4 className=\"font-semibold text-[var(--text-primary)]\">\n                                                {member.name}\n                                            </h4>\n                                            {member.isCommissioner && (\n                                                <span title=\"Commissioner\">\n                                                    <CrownIcon className=\"w-4 h-4 text-yellow-500\" />\n                                                </span>\n                                            )}\n                                            {member.isCoCommissioner && (\n                                                <span title=\"Co-Commissioner\">\n                                                    <ShieldCheckIcon className=\"w-4 h-4 text-blue-500\" />\n                                                </span>\n                                            )}\n                                        </div>\n                                        <div className=\"flex items-center gap-2\">\n                                            {editMode?.memberId === member.id && editMode?.field === 'teamName' ? (\n                                                <div className=\"flex items-center gap-2\">\n                                                    <input\n                                                        type=\"text\"\n                                                        value={editValue}\n                                                        onChange={(e: any) => setEditValue(e.target.value)}\n                                                        className=\"px-2 py-1 text-sm border border-[var(--panel-border)] rounded bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                                        autoFocus\n                                                    />\n                                                    <button onClick={saveEdit} className=\"text-green-500 hover:text-green-400\">\n                                                        <CheckIcon className=\"w-4 h-4\" />\n                                                    </button>\n                                                    <button onClick={cancelEdit} className=\"text-red-500 hover:text-red-400\">\n                                                        <XIcon className=\"w-4 h-4\" />\n                                                    </button>\n                                                </div>\n                                            ) : (\n                                                <div className=\"flex items-center gap-2\">\n                                                    <span className=\"text-sm text-[var(--text-secondary)]\">\n                                                        {member.teamName}\n                                                    </span>\n                                                    <button \n                                                        onClick={() => startEdit(member.id, 'teamName', member.teamName)}\n                                                        className=\"text-gray-400 hover:text-[var(--text-primary)]\"\n                                                    >\n                                                        <PencilIcon className=\"w-3 h-3\" />\n                                                    </button>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"flex items-center gap-4\">\n                                    {/* Member Stats */}\n                                    <div className=\"text-right text-sm\">\n                                        <div className=\"text-[var(--text-primary)] font-medium\">{member.record}</div>\n                                        <div className=\"text-[var(--text-secondary)]\">{member.points} pts</div>\n                                    </div>\n\n                                    {/* Actions Dropdown */}\n                                    <div className=\"relative\">\n                                        <button \n                                            onClick={() => setSelectedMember(selectedMember === member.id ? null : member.id)}\n                                            className=\"p-2 hover:bg-white/10 rounded-lg\"\n                                        >\n                                            ‚ãÆ\n                                        </button>\n                                        \n                                        <AnimatePresence>\n                                            {selectedMember === member.id && (\n                                                <motion.div\n                                                    initial={{ opacity: 0, scale: 0.95 }}\n                                                    animate={{ opacity: 1, scale: 1 }}\n                                                    exit={{ opacity: 0, scale: 0.95 }}\n                                                    className=\"absolute right-0 top-full mt-1 bg-[var(--panel-bg)] border border-[var(--panel-border)] rounded-lg shadow-lg z-10 min-w-[200px]\"\n                                                >\n                                                    <div className=\"py-1\">\n                                                        {!member.isCommissioner && (\n                                                            <>\n                                                                <button \n                                                                    onClick={() => handleMemberAction({ \n                                                                        type: 'TOGGLE_ADMIN', \n                                                                        memberId: member.id \n                                                                    })}\n                                                                    className=\"w-full px-4 py-2 text-left text-sm hover:bg-white/10 flex items-center gap-2\"\n                                                                >\n                                                                    <ShieldCheckIcon className=\"w-4 h-4\" />\n                                                                    {member.isCoCommissioner ? 'Remove Admin' : 'Make Admin'}\n                                                                </button>\n                                                                <button \n                                                                    onClick={() => handleMemberAction({ \n                                                                        type: 'PROMOTE_TO_COMMISSIONER', \n                                                                        memberId: member.id \n                                                                    })}\n                                                                    className=\"w-full px-4 py-2 text-left text-sm hover:bg-white/10 flex items-center gap-2\"\n                                                                >\n                                                                    <CrownIcon className=\"w-4 h-4\" />\n                                                                    Make Commissioner\n                                                                </button>\n                                                            </>\n                                                        )}\n                                                        <button \n                                                            onClick={() => dispatch({ type: 'VIEW_MEMBER_PROFILE', payload: member.id })}\n                                                            className=\"w-full px-4 py-2 text-left text-sm hover:bg-white/10\"\n                                                        >\n                                                            üë§ View Profile\n                                                        </button>\n                                                        <button \n                                                            onClick={() => dispatch({ type: 'MESSAGE_MEMBER', payload: member.id })}\n                                                            className=\"w-full px-4 py-2 text-left text-sm hover:bg-white/10\"\n                                                        >\n                                                            üí¨ Send Message\n                                                        </button>\n                                                        <hr className=\"my-1 border-[var(--panel-border)]\" />\n                                                        {!member.isCommissioner && (\n                                                            <button \n                                                                onClick={() => handleMemberAction({ \n                                                                    type: 'REMOVE_MEMBER', \n                                                                    memberId: member.id \n                                                                })}\n                                                                className=\"w-full px-4 py-2 text-left text-sm hover:bg-white/10 text-red-400 flex items-center gap-2\"\n                                                            >\n                                                                <UserRemoveIcon className=\"w-4 h-4\" />\n                                                                Remove from League\n                                                            </button>\n                                                        )}\n                                                    </div>\n                                                </motion.div>\n                                            )}\n                                        </AnimatePresence>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Activity Status */}\n                            <div className=\"mt-2 flex items-center justify-between text-xs\">\n                                <span className=\"text-[var(--text-secondary)]\">\n                                    Joined: {new Date(member.joinDate).toLocaleDateString()}\n                                </span>\n                                <span className={`px-2 py-1 rounded-full ${\n                                    member.activity === 'Active' \n                                        ? 'bg-green-500/20 text-green-400' \n                                        : 'bg-yellow-500/20 text-yellow-400'\n                                }`}>\n                                    {member.activity}\n                                </span>\n                            </div>\n                        </motion.div>\n                    ))}\n                </div>\n\n                {/* Confirmation Modal */}\n                <AnimatePresence>\n                    {showConfirmAction && (\n                        <motion.div\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                            className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/75\"\n                            onClick={(e: any) => e.target === e.currentTarget && setShowConfirmAction(null)}\n                        >\n                            <motion.div\n                                initial={{ scale: 0.9, opacity: 0 }}\n                                animate={{ scale: 1, opacity: 1 }}\n                                exit={{ scale: 0.9, opacity: 0 }}\n                                className=\"bg-[var(--panel-bg)] border border-[var(--panel-border)] rounded-lg shadow-xl p-6 max-w-md w-full\"\n                            >\n                                <h3 className=\"text-lg font-semibold text-[var(--text-primary)] mb-4\">\n                                    Confirm Action\n                                </h3>\n                                <p className=\"text-[var(--text-secondary)] mb-6\">\n                                    {showConfirmAction.type === 'REMOVE_MEMBER' && 'Are you sure you want to remove this member from the league?'}\n                                    {showConfirmAction.type === 'PROMOTE_TO_COMMISSIONER' && 'Are you sure you want to transfer commissioner rights to this member?'}\n                                    {showConfirmAction.type === 'TOGGLE_ADMIN' && 'Are you sure you want to change this member\\'s admin status?'}\n                                </p>\n                                <div className=\"flex gap-3 justify-end\">\n                                    <button\n                                        onClick={() => setShowConfirmAction(null)}\n                                        className=\"px-4 py-2 text-[var(--text-secondary)] hover:text-[var(--text-primary)]\"\n                                    >\n                                        Cancel\n                                    </button>\n                                    <button\n                                        onClick={confirmAction}\n                                        className=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg\"\n                                    >\n                                        Confirm\n                                    </button>\n                                </div>\n                            </motion.div>\n                        </motion.div>\n                    )}\n                </AnimatePresence>\n            </div>\n        </Widget>\n    );\n};\n\nexport default EnhancedMemberManagement;\n","import React from 'react';\n\ninterface RefreshIconProps {\n  className?: string;\n}\n\nexport const RefreshIcon: React.FC<RefreshIconProps> = ({ className }) => (\n  <svg\n    className={className}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n    />\n  </svg>\n);\n","import React from 'react';\n\ninterface AdjustmentsIconProps {\n  className?: string;\n}\n\nexport const AdjustmentsIcon: React.FC<AdjustmentsIconProps> = ({ className }) => (\n  <svg\n    className={className}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4\"\n    />\n  </svg>\n);\n","/**\n * Season Management Component\n * Advanced season administration and control panel\n */\n\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Widget } from '../ui/Widget';\nimport { CalendarIcon } from '../icons/CalendarIcon';\nimport { PlayIcon } from '../icons/PlayIcon';\nimport { PauseIcon } from '../icons/PauseIcon';\nimport { StopIcon } from '../icons/StopIcon';\nimport { RefreshIcon } from '../icons/RefreshIcon';\nimport { AdjustmentsIcon } from '../icons/AdjustmentsIcon';\nimport { League } from '../../types';\n\ninterface SeasonManagementProps {\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\ninterface SeasonAction {\n    type: 'ADVANCE_WEEK' | 'RESET_WEEK' | 'END_SEASON' | 'MANUAL_SCORE_ADJUSTMENT' | 'FORCE_SYNC';\n    data?: any;\n}\n\nconst SeasonManagement: React.FC<SeasonManagementProps> = ({ league, dispatch }) => {\n    const [showConfirmAction, setShowConfirmAction] = React.useState<SeasonAction | null>(null);\n    const [manualScoreMode, setManualScoreMode] = React.useState(false);\n    const [selectedMatchup, setSelectedMatchup] = React.useState<string | null>(null);\n    const [scoreAdjustment, setScoreAdjustment] = React.useState({ teamId: '', adjustment: 0, reason: '' });\n\n    // Mock season data\n    const seasonInfo = {\n        currentWeek: 12,\n        totalWeeks: 17,\n        playoffWeeks: 3,\n        regularSeasonWeeks: 14,\n        tradeDeadline: '2024-11-15',\n        playoffStart: '2024-12-01',\n        championshipWeek: 17,\n        waiverDay: 'Wednesday',\n        lockTime: '13:00'\n    };\n\n    const weeklyMatchups = [\n        { id: '1', team1: 'Alice\\'s Aces', team2: 'Smithtown Stallions', score1: 125.6, score2: 118.2, completed: true },\n        { id: '2', team1: 'Thunder Bolts', team2: 'Wilson Warriors', score1: 98.3, score2: 142.7, completed: true },\n        { id: '3', team1: 'Dynasty Dominators', team2: 'Playoff Pushers', score1: 115.4, score2: 89.6, completed: false },\n    ];\n\n    const handleSeasonAction = (action: SeasonAction) => {\n        setShowConfirmAction(action);\n    };\n\n    const confirmSeasonAction = () => {\n        if (!showConfirmAction) return;\n\n        switch (showConfirmAction.type) {\n            case 'ADVANCE_WEEK':\n                dispatch({ \n                    type: 'ADVANCE_WEEK', \n                    payload: { leagueId: league.id, currentWeek: seasonInfo.currentWeek + 1 } \n                });\n                dispatch({ \n                    type: 'ADD_NOTIFICATION', \n                    payload: { message: `Advanced to Week ${seasonInfo.currentWeek + 1}`, type: 'SYSTEM' } \n                });\n                break;\n            case 'RESET_WEEK':\n                dispatch({ \n                    type: 'RESET_WEEK', \n                    payload: { leagueId: league.id, week: seasonInfo.currentWeek } \n                });\n                break;\n            case 'END_SEASON':\n                dispatch({ \n                    type: 'END_SEASON', \n                    payload: { leagueId: league.id } \n                });\n                break;\n            case 'FORCE_SYNC':\n                dispatch({ \n                    type: 'FORCE_DATA_SYNC', \n                    payload: { leagueId: league.id } \n                });\n                break;\n        }\n        setShowConfirmAction(null);\n    };\n\n    const handleScoreAdjustment = () => {\n        if (!scoreAdjustment.teamId || !scoreAdjustment.reason) return;\n\n        dispatch({\n            type: 'MANUAL_SCORE_ADJUSTMENT',\n            payload: {\n                leagueId: league.id,\n                week: seasonInfo.currentWeek,\n                teamId: scoreAdjustment.teamId,\n                adjustment: scoreAdjustment.adjustment,\n                reason: scoreAdjustment.reason\n            }\n        });\n\n        dispatch({\n            type: 'ADD_AUDIT_LOG',\n            payload: {\n                action: 'Manual Score Adjustment',\n                details: `${scoreAdjustment.adjustment} points to team ${scoreAdjustment.teamId}: ${scoreAdjustment.reason}`,\n                commissioner: 'Current User'\n            }\n        });\n\n        setScoreAdjustment({ teamId: '', adjustment: 0, reason: '' });\n        setManualScoreMode(false);\n    };\n\n    const getSeasonPhase = () => {\n        if (seasonInfo.currentWeek <= seasonInfo.regularSeasonWeeks) return 'Regular Season';\n        if (seasonInfo.currentWeek <= seasonInfo.regularSeasonWeeks + seasonInfo.playoffWeeks) return 'Playoffs';\n        return 'Championship';\n    };\n\n    const getWeekProgress = () => {\n        return (seasonInfo.currentWeek / seasonInfo.totalWeeks) * 100;\n    };\n\n    return (\n        <Widget title=\"Season Management\" icon={<CalendarIcon className=\"w-5 h-5\" />}>\n            <div className=\"p-4 space-y-6\">\n                {/* Season Overview */}\n                <div className=\"bg-gradient-to-r from-blue-500/20 to-purple-500/20 p-4 rounded-lg\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                        <h3 className=\"text-lg font-semibold text-[var(--text-primary)]\">\n                            2024 Season - {getSeasonPhase()}\n                        </h3>\n                        <div className=\"text-right\">\n                            <div className=\"text-2xl font-bold text-blue-400\">Week {seasonInfo.currentWeek}</div>\n                            <div className=\"text-xs text-gray-400\">of {seasonInfo.totalWeeks}</div>\n                        </div>\n                    </div>\n                    \n                    {/* Progress Bar */}\n                    <div className=\"w-full bg-gray-700 rounded-full h-2 mb-3\">\n                        <motion.div\n                            initial={{ width: 0 }}\n                            animate={{ width: `${getWeekProgress()}%` }}\n                            className=\"bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full\"\n                        />\n                    </div>\n\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3 text-xs\">\n                        <div>\n                            <div className=\"text-gray-400\">Trade Deadline</div>\n                            <div className=\"font-medium\">{new Date(seasonInfo.tradeDeadline).toLocaleDateString()}</div>\n                        </div>\n                        <div>\n                            <div className=\"text-gray-400\">Playoffs Start</div>\n                            <div className=\"font-medium\">{new Date(seasonInfo.playoffStart).toLocaleDateString()}</div>\n                        </div>\n                        <div>\n                            <div className=\"text-gray-400\">Waiver Day</div>\n                            <div className=\"font-medium\">{seasonInfo.waiverDay}</div>\n                        </div>\n                        <div>\n                            <div className=\"text-gray-400\">Lock Time</div>\n                            <div className=\"font-medium\">{seasonInfo.lockTime}</div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Week Controls */}\n                <div className=\"border border-[var(--panel-border)] rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-[var(--text-primary)] mb-3 flex items-center gap-2\">\n                        <AdjustmentsIcon className=\"w-4 h-4\" />\n                        Week Controls\n                    </h4>\n                    \n                    <div className=\"flex flex-wrap gap-2\">\n                        <button\n                            onClick={() => handleSeasonAction({ type: 'ADVANCE_WEEK' })}\n                            className=\"flex items-center gap-2 px-3 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm\"\n                            disabled={seasonInfo.currentWeek >= seasonInfo.totalWeeks}\n                        >\n                            <PlayIcon className=\"w-4 h-4\" />\n                            Advance Week\n                        </button>\n                        \n                        <button\n                            onClick={() => handleSeasonAction({ type: 'RESET_WEEK' })}\n                            className=\"flex items-center gap-2 px-3 py-2 bg-yellow-600 hover:bg-yellow-700 text-white rounded-lg text-sm\"\n                        >\n                            <RefreshIcon className=\"w-4 h-4\" />\n                            Reset Week\n                        </button>\n                        \n                        <button\n                            onClick={() => handleSeasonAction({ type: 'FORCE_SYNC' })}\n                            className=\"flex items-center gap-2 px-3 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm\"\n                        >\n                            <RefreshIcon className=\"w-4 h-4\" />\n                            Force Sync\n                        </button>\n                        \n                        <button\n                            onClick={() => setManualScoreMode(!manualScoreMode)}\n                            className=\"flex items-center gap-2 px-3 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg text-sm\"\n                        >\n                            ‚úèÔ∏è Manual Scoring\n                        </button>\n                        \n                        <button\n                            onClick={() => handleSeasonAction({ type: 'END_SEASON' })}\n                            className=\"flex items-center gap-2 px-3 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg text-sm\"\n                        >\n                            <StopIcon className=\"w-4 h-4\" />\n                            End Season\n                        </button>\n                    </div>\n                </div>\n\n                {/* Current Week Matchups */}\n                <div className=\"border border-[var(--panel-border)] rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-[var(--text-primary)] mb-3\">\n                        Week {seasonInfo.currentWeek} Matchups\n                    </h4>\n                    \n                    <div className=\"space-y-3\">\n                        {weeklyMatchups.map((matchup) => (\n                            <div\n                                key={matchup.id}\n                                className=\"flex items-center justify-between p-3 bg-[var(--panel-bg)] border border-[var(--panel-border)] rounded-lg\"\n                            >\n                                <div className=\"flex-1\">\n                                    <div className=\"flex items-center justify-between\">\n                                        <span className=\"text-[var(--text-primary)]\">{matchup.team1}</span>\n                                        <span className=\"font-bold text-[var(--text-primary)]\">{matchup.score1}</span>\n                                    </div>\n                                    <div className=\"flex items-center justify-between\">\n                                        <span className=\"text-[var(--text-primary)]\">{matchup.team2}</span>\n                                        <span className=\"font-bold text-[var(--text-primary)]\">{matchup.score2}</span>\n                                    </div>\n                                </div>\n                                \n                                <div className=\"ml-4 flex items-center gap-2\">\n                                    <span className={`px-2 py-1 rounded-full text-xs ${\n                                        matchup.completed \n                                            ? 'bg-green-500/20 text-green-400' \n                                            : 'bg-yellow-500/20 text-yellow-400'\n                                    }`}>\n                                        {matchup.completed ? 'Final' : 'In Progress'}\n                                    </span>\n                                    \n                                    <button\n                                        onClick={() => setSelectedMatchup(selectedMatchup === matchup.id ? null : matchup.id)}\n                                        className=\"p-1 hover:bg-white/10 rounded\"\n                                    >\n                                        ‚ãÆ\n                                    </button>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                {/* Manual Score Adjustment Modal */}\n                <AnimatePresence>\n                    {manualScoreMode && (\n                        <motion.div\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                            className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/75\"\n                            onClick={(e: any) => e.target === e.currentTarget && setManualScoreMode(false)}\n                        >\n                            <motion.div\n                                initial={{ scale: 0.9, opacity: 0 }}\n                                animate={{ scale: 1, opacity: 1 }}\n                                exit={{ scale: 0.9, opacity: 0 }}\n                                className=\"bg-[var(--panel-bg)] border border-[var(--panel-border)] rounded-lg shadow-xl p-6 max-w-md w-full\"\n                            >\n                                <h3 className=\"text-lg font-semibold text-[var(--text-primary)] mb-4\">\n                                    Manual Score Adjustment\n                                </h3>\n                                \n                                <div className=\"space-y-4\">\n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-secondary)] mb-2\">\n                                            Select Team\n                                        </label>\n                                        <select\n                                            value={scoreAdjustment.teamId}\n                                            onChange={(e: any) => setScoreAdjustment(prev => ({ ...prev, teamId: e.target.value }))}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                        >\n                                            <option value=\"\">Choose team...</option>\n                                            <option value=\"team1\">Alice's Aces</option>\n                                            <option value=\"team2\">Smithtown Stallions</option>\n                                            <option value=\"team3\">Thunder Bolts</option>\n                                            <option value=\"team4\">Wilson Warriors</option>\n                                        </select>\n                                    </div>\n                                    \n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-secondary)] mb-2\">\n                                            Point Adjustment\n                                        </label>\n                                        <input\n                                            type=\"number\"\n                                            step=\"0.1\"\n                                            value={scoreAdjustment.adjustment}\n                                            onChange={(e: any) => setScoreAdjustment(prev => ({ ...prev, adjustment: parseFloat(e.target.value) || 0 }))}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                            placeholder=\"Enter adjustment (+ or -)\"\n                                        />\n                                    </div>\n                                    \n                                    <div>\n                                        <label className=\"block text-sm font-medium text-[var(--text-secondary)] mb-2\">\n                                            Reason\n                                        </label>\n                                        <textarea\n                                            value={scoreAdjustment.reason}\n                                            onChange={(e: any) => setScoreAdjustment(prev => ({ ...prev, reason: e.target.value }))}\n                                            rows={3}\n                                            className=\"w-full px-3 py-2 border border-[var(--panel-border)] rounded-lg bg-[var(--panel-bg)] text-[var(--text-primary)]\"\n                                            placeholder=\"Explain the reason for this adjustment...\"\n                                        />\n                                    </div>\n                                </div>\n                                \n                                <div className=\"flex gap-3 justify-end mt-6\">\n                                    <button\n                                        onClick={() => setManualScoreMode(false)}\n                                        className=\"px-4 py-2 text-[var(--text-secondary)] hover:text-[var(--text-primary)]\"\n                                    >\n                                        Cancel\n                                    </button>\n                                    <button\n                                        onClick={handleScoreAdjustment}\n                                        disabled={!scoreAdjustment.teamId || !scoreAdjustment.reason}\n                                        className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg disabled:opacity-50\"\n                                    >\n                                        Apply Adjustment\n                                    </button>\n                                </div>\n                            </motion.div>\n                        </motion.div>\n                    )}\n                </AnimatePresence>\n\n                {/* Confirmation Modal */}\n                <AnimatePresence>\n                    {showConfirmAction && (\n                        <motion.div\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                            className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/75\"\n                            onClick={(e: any) => e.target === e.currentTarget && setShowConfirmAction(null)}\n                        >\n                            <motion.div\n                                initial={{ scale: 0.9, opacity: 0 }}\n                                animate={{ scale: 1, opacity: 1 }}\n                                exit={{ scale: 0.9, opacity: 0 }}\n                                className=\"bg-[var(--panel-bg)] border border-[var(--panel-border)] rounded-lg shadow-xl p-6 max-w-md w-full\"\n                            >\n                                <h3 className=\"text-lg font-semibold text-[var(--text-primary)] mb-4\">\n                                    Confirm Season Action\n                                </h3>\n                                <p className=\"text-[var(--text-secondary)] mb-6\">\n                                    {showConfirmAction.type === 'ADVANCE_WEEK' && `Are you sure you want to advance to Week ${seasonInfo.currentWeek + 1}?`}\n                                    {showConfirmAction.type === 'RESET_WEEK' && 'Are you sure you want to reset the current week? This will clear all scores and lineup locks.'}\n                                    {showConfirmAction.type === 'END_SEASON' && 'Are you sure you want to end the season? This action cannot be undone.'}\n                                    {showConfirmAction.type === 'FORCE_SYNC' && 'Force sync all league data with external sources?'}\n                                </p>\n                                <div className=\"flex gap-3 justify-end\">\n                                    <button\n                                        onClick={() => setShowConfirmAction(null)}\n                                        className=\"px-4 py-2 text-[var(--text-secondary)] hover:text-[var(--text-primary)]\"\n                                    >\n                                        Cancel\n                                    </button>\n                                    <button\n                                        onClick={confirmSeasonAction}\n                                        className={`px-4 py-2 text-white rounded-lg ${\n                                            showConfirmAction.type === 'END_SEASON' \n                                                ? 'bg-red-600 hover:bg-red-700' \n                                                : 'bg-blue-600 hover:bg-blue-700'\n                                        }`}\n                                    >\n                                        Confirm\n                                    </button>\n                                </div>\n                            </motion.div>\n                        </motion.div>\n                    )}\n                </AnimatePresence>\n            </div>\n        </Widget>\n    );\n};\n\nexport default SeasonManagement;\n","\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { useAppState } from '../../contexts/AppContext';\nimport Modal from '../ui/Modal';\nimport { ClipboardListIcon } from '../icons/ClipboardListIcon';\nimport { CloseIcon } from '../icons/CloseIcon';\nimport { PlusCircleIcon } from '../icons/PlusCircleIcon';\n\ninterface CreatePollModalProps {\n    leagueId: string;\n    onClose: () => void;\n}\n\nconst CreatePollModal: React.FC<CreatePollModalProps> = ({ leagueId, onClose }) => {\n    const { state, dispatch } = useAppState();\n    const [question, setQuestion] = React.useState('');\n    const [options, setOptions] = React.useState(['', '']);\n\n    const handleOptionChange = (index: number, value: string) => {\n        const newOptions = [...options];\n        newOptions[index] = value;\n        setOptions(newOptions);\n    };\n\n    const addOption = () => {\n        if (options.length < 5) {\n            setOptions([...options, '']);\n        }\n    };\n    \n    const removeOption = (index: number) => {\n        if (options.length > 2) {\n            setOptions(options.filter((_, i) => i !== index));\n        }\n    };\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!question.trim() || options.some((opt: any) => !opt.trim())) {\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: \"Question and all options must be filled out.\", type: 'SYSTEM' } });\n            return;\n        }\n\n        dispatch({\n            type: 'CREATE_POLL',\n            payload: {\n                leagueId,\n                poll: {\n                    question,\n                    options: options.map((opt: any) => ({ id: `opt_${Math.random()}`, text: opt, votes: [] })),\n                    createdBy: state.user.id,\n                    closesAt: Date.now() + 1000 * 60 * 60 * 24 * 7, // 1 week\n                },\n            },\n        });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: \"Poll created successfully!\", type: 'SYSTEM' } });\n        onClose();\n    };\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.form\n                onSubmit={handleSubmit}\n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-lg\"\n                onClick={e => e.stopPropagation()}\n                {...{\n                    initial: { opacity: 0, scale: 0.95 },\n                    animate: { opacity: 1, scale: 1 },\n                }}\n            >\n                <header className=\"p-4 border-b border-[var(--panel-border)]\">\n                    <h2 className=\"text-xl font-bold font-display flex items-center gap-2\">\n                        <ClipboardListIcon /> Create New Poll\n                    </h2>\n                </header>\n                <main className=\"p-4 space-y-4\">\n                    <div>\n                        <label htmlFor=\"poll-question\" className=\"block text-sm font-medium text-gray-400 mb-1\">Poll Question</label>\n                        <input\n                            id=\"poll-question\"\n                            type=\"text\"\n                            value={question}\n                            onChange={e => setQuestion(e.target.value)}\n                            className=\"w-full bg-black/20 p-2 rounded-md border border-white/10\"\n                            placeholder=\"e.g., Biggest upset this week?\"\n                        />\n                    </div>\n                    <div>\n                        <label className=\"block text-sm font-medium text-gray-400 mb-1\">Options</label>\n                        <div className=\"space-y-2\">\n                            {options.map((opt, index) => (\n                                <div key={index} className=\"flex items-center gap-2\">\n                                    <input\n                                        type=\"text\"\n                                        value={opt}\n                                        onChange={e => handleOptionChange(index, e.target.value)}\n                                        className=\"w-full bg-black/20 p-2 rounded-md border border-white/10\"\n                                        placeholder={`Option ${index + 1}`}\n                                    />\n                                    {options.length > 2 && (\n                                        <button type=\"button\" onClick={() => removeOption(index)} className=\"mobile-touch-target p-3 text-red-400 hover:bg-red-500/10 rounded-full\" aria-label=\"Remove option\"><CloseIcon /></button>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                         {options.length < 5 && (\n                            <button type=\"button\" onClick={addOption} className=\"mt-2 flex items-center gap-1 text-xs text-cyan-300 hover:text-cyan-200\">\n                                <PlusCircleIcon /> Add Option\n                            </button>\n                        )}\n                    </div>\n                </main>\n                 <footer className=\"p-4 flex justify-end gap-2 border-t border-[var(--panel-border)]\">\n                    <button type=\"button\" onClick={onClose} className=\"px-4 py-2 text-sm font-bold bg-transparent border border-transparent hover:border-[var(--panel-border)] rounded-md\">Cancel</button>\n                    <button type=\"submit\" className=\"px-4 py-2 text-sm font-bold bg-cyan-500 text-black rounded-md\">Post Poll</button>\n                </footer>\n            </motion.form>\n        </Modal>\n    );\n};\n\nexport default CreatePollModal;\n","\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { useAppState } from '../../contexts/AppContext';\nimport Modal from '../ui/Modal';\nimport { MegaphoneIcon } from '../icons/MegaphoneIcon';\n\ninterface PostAnnouncementModalProps {\n    leagueId: string;\n    onClose: () => void;\n}\n\nconst PostAnnouncementModal: React.FC<PostAnnouncementModalProps> = ({ leagueId, onClose }) => {\n    const { dispatch } = useAppState();\n    const [title, setTitle] = React.useState('');\n    const [content, setContent] = React.useState('');\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!title.trim() || !content.trim()) {\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: \"Title and content must be filled out.\", type: 'SYSTEM' } });\n            return;\n        }\n\n        dispatch({\n            type: 'POST_ANNOUNCEMENT',\n            payload: { leagueId, announcement: { title, content } },\n        });\n        dispatch({ type: 'ADD_NOTIFICATION', payload: { message: \"Announcement posted!\", type: 'SYSTEM' } });\n        onClose();\n    };\n    \n    return (\n        <Modal onClose={onClose}>\n            <motion.form\n                onSubmit={handleSubmit}\n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-lg\"\n                onClick={e => e.stopPropagation()}\n                {...{\n                    initial: { opacity: 0, scale: 0.95 },\n                    animate: { opacity: 1, scale: 1 },\n                }}\n            >\n                <header className=\"p-4 border-b border-[var(--panel-border)]\">\n                    <h2 className=\"text-xl font-bold font-display flex items-center gap-2\">\n                        <MegaphoneIcon /> Post New Announcement\n                    </h2>\n                </header>\n                <main className=\"p-4 space-y-4\">\n                    <div>\n                        <label htmlFor=\"announcement-title\" className=\"block text-sm font-medium text-gray-400 mb-1\">Title</label>\n                        <input\n                            id=\"announcement-title\"\n                            type=\"text\"\n                            value={title}\n                            onChange={e => setTitle(e.target.value)}\n                            className=\"w-full bg-black/20 p-2 rounded-md border border-white/10\"\n                            placeholder=\"e.g., Trade Deadline Approaching\"\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"announcement-content\" className=\"block text-sm font-medium text-gray-400 mb-1\">Content</label>\n                        <textarea\n                            id=\"announcement-content\"\n                            value={content}\n                            onChange={e => setContent(e.target.value)}\n                            className=\"w-full h-32 bg-black/20 p-2 rounded-md border border-white/10 resize-none\"\n                            placeholder=\"Write your announcement here...\"\n                        />\n                    </div>\n                </main>\n                 <footer className=\"p-4 flex justify-end gap-2 border-t border-[var(--panel-border)]\">\n                    <button type=\"button\" onClick={onClose} className=\"px-4 py-2 text-sm font-bold bg-transparent border border-transparent hover:border-[var(--panel-border)] rounded-md\">Cancel</button>\n                    <button type=\"submit\" className=\"px-4 py-2 text-sm font-bold bg-cyan-500 text-black rounded-md\">Post Announcement</button>\n                </footer>\n            </motion.form>\n        </Modal>\n    );\n};\n\nexport default PostAnnouncementModal;\n","\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { useAppState } from '../../contexts/AppContext';\nimport type { League, TradeOffer } from '../../types';\nimport Modal from '../ui/Modal';\nimport { CloseIcon } from '../icons/CloseIcon';\nimport TradeOfferCard from '../team/TradeOfferCard';\nimport { GavelIcon } from '../icons/GavelIcon';\nimport EmptyState from '../ui/EmptyState';\nimport { ArrowRightLeftIcon } from '../icons/ArrowRightLeftIcon';\nimport { AlertTriangleIcon } from '../icons/AlertTriangleIcon';\n\ninterface ManageTradesModalProps {\n    league: League;\n    onClose: () => void;\n}\n\nconst ManageTradesModal: React.FC<ManageTradesModalProps> = ({ league, onClose }) => {\n    const { state, dispatch } = useAppState();\n    const pendingOffers = league.tradeOffers.filter((o: any) => o?.status === 'PENDING');\n    const isTradeDeadlinePassed = league.currentWeek > league.settings.tradeDeadline;\n\n    const handleForce = (offer: TradeOffer) => {\n        if (window.confirm(\"Are you sure you want to force this trade to be accepted?\")) {\n            dispatch({ type: 'UPDATE_TRADE_STATUS', payload: { leagueId: league.id, tradeId: offer.id, status: 'FORCED' } });\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Trade has been forced by commissioner.', type: 'SYSTEM' } });\n        }\n    };\n    \n    const handleVeto = (offer: TradeOffer) => {\n        if (window.confirm(\"Are you sure you want to veto this trade?\")) {\n            dispatch({ type: 'UPDATE_TRADE_STATUS', payload: { leagueId: league.id, tradeId: offer.id, status: 'VETOED' } });\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Trade has been vetoed by commissioner.', type: 'SYSTEM' } });\n        }\n    };\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.div\n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-xl max-h-[80vh] flex flex-col\"\n                onClick={e => e.stopPropagation()}\n                {...{\n                    initial: { opacity: 0, scale: 0.95 },\n                    animate: { opacity: 1, scale: 1 },\n                }}\n            >\n                <header className=\"p-4 border-b border-[var(--panel-border)] flex justify-between items-center\">\n                    <h2 className=\"text-xl font-bold font-display flex items-center gap-2\">\n                        <ArrowRightLeftIcon /> Manage Pending Trades\n                    </h2>\n                    <button onClick={onClose} className=\"mobile-touch-target p-3 rounded-full hover:bg-white/10\" aria-label=\"Close modal\"><CloseIcon /></button>\n                </header>\n                <main className=\"flex-grow p-4 space-y-3 overflow-y-auto\">\n                    {isTradeDeadlinePassed && (\n                        <div className=\"p-3 bg-yellow-500/10 text-yellow-300 text-xs rounded-lg flex items-center gap-2\">\n                            <AlertTriangleIcon className=\"h-4 w-4\" />\n                            <strong>Warning:</strong> The league's trade deadline (Week {league.settings.tradeDeadline}) has passed. Any action here is a commissioner override.\n                        </div>\n                    )}\n                    {pendingOffers.length === 0 ? (\n                        <EmptyState message=\"There are no pending trades in the league.\" />\n                    ) : (\n                        pendingOffers.map((offer: any) => (\n                            <div key={offer.id} className=\"bg-black/10 p-2 rounded-lg\">\n                                <TradeOfferCard offer={offer} league={league} myTeamId={-1} dispatch={dispatch} />\n                                <div className=\"flex justify-end gap-2 mt-2\">\n                                    <button\n                                        onClick={() => handleVeto(offer)}\n                                        className=\"px-3 py-1 text-xs font-bold bg-red-500/20 text-red-300 rounded-md hover:bg-red-500/30 flex items-center gap-1\"\n                                    >\n                                        <GavelIcon /> Veto\n                                    </button>\n                                     <button\n                                        onClick={() => handleForce(offer)}\n                                        className=\"px-3 py-1 text-xs font-bold bg-green-500/20 text-green-300 rounded-md hover:bg-green-500/30 flex items-center gap-1\"\n                                    >\n                                        <GavelIcon /> Force\n                                    </button>\n                                </div>\n                            </div>\n                        ))\n                    )}\n                </main>\n                <footer className=\"p-4 border-t border-[var(--panel-border)] text-center\">\n                    <button onClick={onClose} className=\"px-6 py-2 bg-cyan-500 text-black font-bold text-sm rounded-md\">\n                        Done\n                    </button>\n                </footer>\n            </motion.div>\n        </Modal>\n    );\n};\n\nexport default ManageTradesModal;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useAppState } from '../../contexts/AppContext';\nimport Modal from '../ui/Modal';\nimport { UserPlusIcon } from '../icons/UserPlusIcon';\nimport type { League } from '../../types';\nimport { ClipboardIcon } from '../icons/ClipboardIcon';\nimport { CheckIcon } from '../icons/CheckIcon';\nimport useCopyToClipboard from '../../hooks/useCopyToClipboard';\n\ninterface InviteMemberModalProps {\n    league: League;\n    onClose: () => void;\n}\n\nconst InviteMemberModal: React.FC<InviteMemberModalProps> = ({ league, onClose }) => {\n    const { dispatch } = useAppState();\n    const [email, setEmail] = React.useState('');\n    const [copiedLink, setCopiedLink] = React.useState<string | null>(null);\n    const { copy } = useCopyToClipboard();\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!email.trim().includes('@')) {\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: \"Please enter a valid email.\", type: 'SYSTEM' } });\n            return;\n        }\n        dispatch({ type: 'INVITE_MEMBER', payload: { leagueId: league.id, invitation: { email, status: 'PENDING', leagueId: league.id } } });\n        setEmail('');\n    };\n\n    const handleCopy = (link: string) => {\n        copy(link);\n        setCopiedLink(link);\n        setTimeout(() => setCopiedLink(null), 2000);\n    };\n\n    return (\n        <Modal onClose={onClose}>\n            <motion.div\n                className=\"glass-pane rounded-xl shadow-2xl w-full max-w-lg\"\n                onClick={e => e.stopPropagation()}\n                {...{\n                    initial: { opacity: 0, scale: 0.95 },\n                    animate: { opacity: 1, scale: 1 },\n                }}\n            >\n                <header className=\"p-4 border-b border-[var(--panel-border)]\">\n                    <h2 className=\"text-xl font-bold font-display flex items-center gap-2\"><UserPlusIcon /> Invite Members</h2>\n                </header>\n                <form onSubmit={handleSubmit} className=\"p-4\">\n                    <label htmlFor=\"invite-email\" className=\"block text-sm font-medium text-gray-400 mb-1\">Manager Email</label>\n                    <div className=\"flex gap-2\">\n                        <input\n                            id=\"invite-email\"\n                            type=\"email\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                            className=\"flex-grow w-full bg-black/20 p-2 rounded-md border border-white/10\"\n                            placeholder=\"new.manager@email.com\"\n                        />\n                        <button type=\"submit\" className=\"px-4 py-2 text-sm font-bold bg-cyan-500 text-black rounded-md\">Send Invite</button>\n                    </div>\n                </form>\n                <div className=\"p-4 border-t border-[var(--panel-border)] max-h-64 overflow-y-auto\">\n                    <h3 className=\"font-semibold text-sm mb-2\">Pending Invitations</h3>\n                    {league.invitations && league.invitations.length > 0 ? (\n                        <div className=\"space-y-2\">\n                            {league.invitations.map((inv: any) => (\n                                <div key={inv.id} className=\"p-2 bg-black/10 rounded-md flex justify-between items-center\">\n                                    <span className=\"text-sm text-gray-300\">{inv.email}</span>\n                                    <button onClick={() => handleCopy(inv.link)} className=\"flex items-center gap-1 text-xs text-cyan-300\">\n                                        {copiedLink === inv.link ? <CheckIcon /> : <ClipboardIcon />}\n                                        {copiedLink === inv.link ? 'Copied!' : 'Copy Link'}\n                                    </button>\n                                </div>\n                            ))}\n                        </div>\n                    ) : (\n                        <p className=\"text-xs text-gray-500\">No pending invites.</p>\n                    )}\n                </div>\n            </motion.div>\n        </Modal>\n    );\n};\n\nexport default InviteMemberModal;","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport type { League, User } from '../../types';\nimport { Widget } from '../ui/Widget';\nimport { UserIcon } from '../icons/UserIcon';\nimport { Avatar } from '../ui/Avatar';\n\ninterface MemberManagementWidgetProps {\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nconst MemberManagementWidget: React.FC<MemberManagementWidgetProps> = ({ league, dispatch }) => {\n    \n    const handleKick = (user: User) => {\n        if (window.confirm(`Are you sure you want to remove ${user.name} from the league? This action is permanent.`)) {\n            dispatch({ type: 'KICK_MEMBER', payload: { leagueId: league.id, userId: user.id } });\n        }\n    };\n    \n    const handleTransfer = (user: User) => {\n        if (window.confirm(`Are you sure you want to transfer commissionership to ${user.name}? You will lose commissioner powers.`)) {\n            dispatch({ type: 'TRANSFER_COMMISSIONER', payload: { leagueId: league.id, newCommissionerId: user.id } });\n        }\n    };\n\n    return (\n        <Widget title=\"Member Management\">\n            <div className=\"p-4 space-y-2\">\n                {league.members.map((member: any) => (\n                    <div key={member.id} className=\"p-2 bg-white/5 rounded-lg flex justify-between items-center\">\n                        <div className=\"flex items-center gap-2\">\n                            <Avatar avatar={member.avatar} className=\"w-8 h-8 rounded-md\" />\n                            <div>\n                                <p className=\"font-semibold text-sm\">{member.name}</p>\n                                <p className=\"text-xs text-gray-400\">{member.isCommissioner ? 'Commissioner' : 'Member'}</p>\n                            </div>\n                        </div>\n                        {!member.isCommissioner && (\n                            <div className=\"flex gap-2\">\n                                <button\n                                    onClick={() => handleTransfer(member)}\n                                    className=\"px-2 py-1 text-xs font-bold bg-yellow-500/10 text-yellow-300 rounded-md hover:bg-yellow-500/20\"\n                                >\n                                    Make Commish\n                                </button>\n                                <button\n                                    onClick={() => handleKick(member)}\n                                    className=\"px-2 py-1 text-xs font-bold bg-red-500/10 text-red-300 rounded-md hover:bg-red-500/20\"\n                                >\n                                    Kick\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                ))}\n            </div>\n        </Widget>\n    );\n};\n\nexport default MemberManagementWidget;\n","\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useAppState } from '../contexts/AppContext';\nimport { ChevronLeftIcon } from '../components/icons/ChevronLeftIcon';\nimport { Widget } from '../components/ui/Widget';\nimport LeagueSettingsEditor from '../components/commissioner/LeagueSettingsEditor';\nimport EnhancedMemberManagement from '../components/commissioner/EnhancedMemberManagement';\nimport SeasonManagement from '../components/commissioner/SeasonManagement';\nimport type { League } from '../types';\nimport { useLeague } from '../hooks/useLeague';\nimport { ShieldAlertIcon } from '../components/icons/ShieldAlertIcon';\nimport { PencilIcon } from '../components/icons/PencilIcon';\nimport { PauseIcon } from '../components/icons/PauseIcon';\nimport { ClipboardListIcon } from '../components/icons/ClipboardListIcon';\nimport { MegaphoneIcon } from '../components/icons/MegaphoneIcon';\nimport CreatePollModal from '../components/commissioner/CreatePollModal';\nimport PostAnnouncementModal from '../components/commissioner/PostAnnouncementModal';\nimport { ArrowRightLeftIcon } from '../components/icons/ArrowRightLeftIcon';\nimport ManageTradesModal from '../components/commissioner/ManageTradesModal';\nimport { UserPlusIcon } from '../components/icons/UserPlusIcon';\nimport InviteMemberModal from '../components/commissioner/InviteMemberModal';\nimport MemberManagementWidget from '../components/commissioner/MemberManagementWidget';\nimport { SettingsIcon } from '../components/icons/SettingsIcon';\nimport { CalendarIcon } from '../components/icons/CalendarIcon';\nimport { FileTextIcon } from '../components/icons/FileTextIcon';\n\nconst CommissionerToolsContent: React.FC<{ league: League; dispatch: React.Dispatch<any> }> = ({ league, dispatch }) => {\n    const { state } = useAppState();\n    const [isPollModalOpen, setIsPollModalOpen] = React.useState(false);\n    const [isAnnouncementModalOpen, setIsAnnouncementModalOpen] = React.useState(false);\n    const [isManageTradesModalOpen, setIsManageTradesModalOpen] = React.useState(false);\n    const [isInviteModalOpen, setIsInviteModalOpen] = React.useState(false);\n    const [isSettingsModalOpen, setIsSettingsModalOpen] = React.useState(false);\n    const [activeTab, setActiveTab] = React.useState<'tools' | 'members' | 'season'>('tools');\n    \n    const isDrafting = league?.status === 'DRAFTING';\n    const isPostDraft = league && league.status !== 'PRE_DRAFT' && league.status !== 'DRAFTING';\n\n    const handleAdvanceWeek = () => {\n        if(window.confirm(`Are you sure you want to advance to Week ${league.currentWeek + 1}? This cannot be undone.`)) {\n            dispatch({ type: 'ADVANCE_WEEK', payload: { leagueId: league.id } });\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: `Manually advancing to Week ${league.currentWeek + 1}...`, type: 'SYSTEM' } });\n        }\n    };\n\n    const tabs = [\n        { id: 'tools', label: 'Commissioner Tools', icon: 'üîß' },\n        { id: 'members', label: 'Member Management', icon: 'üë•' },\n        { id: 'season', label: 'Season Management', icon: 'üìÖ' }\n    ];\n\n    const renderTabContent = () => {\n        switch (activeTab) {\n            case 'members':\n                return <EnhancedMemberManagement league={league} dispatch={dispatch} />;\n            case 'season':\n                return <SeasonManagement league={league} dispatch={dispatch} />;\n            default:\n                return renderToolsTab();\n        }\n    };\n\n    const renderToolsTab = () => (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6\">\n            <div className=\"space-y-4 sm:space-y-6\">\n                <Widget title=\"Communication\">\n                    <div className=\"p-3 sm:p-4 space-y-3 sm:space-y-4\">\n                        <button onClick={() => setIsPollModalOpen(true)} className=\"w-full p-3 bg-white/5 rounded-lg text-left hover:bg-white/10 mobile-touch-target\">\n                            <h3 className=\"font-semibold text-white flex items-center gap-2 text-sm sm:text-base\"><ClipboardListIcon /> Create Poll</h3>\n                            <p className=\"text-xs text-gray-400 mt-1\">Poll league members on important decisions.</p>\n                        </button>\n                        <button onClick={() => setIsAnnouncementModalOpen(true)} className=\"w-full p-3 bg-white/5 rounded-lg text-left hover:bg-white/10 mobile-touch-target\">\n                            <h3 className=\"font-semibold text-white flex items-center gap-2 text-sm sm:text-base\"><MegaphoneIcon /> Post Announcement</h3>\n                            <p className=\"text-xs text-gray-400 mt-1\">Send league-wide announcements.</p>\n                        </button>\n                    </div>\n                </Widget>\n                <Widget title=\"League Settings\">\n                    <div className=\"p-3 sm:p-4 space-y-3 sm:space-y-4\">\n                        <button \n                            onClick={() => setIsSettingsModalOpen(true)} \n                            className=\"w-full p-3 bg-white/5 rounded-lg text-left hover:bg-white/10 mobile-touch-target\"\n                        >\n                            <h3 className=\"font-semibold text-white flex items-center gap-2 text-sm sm:text-base\">\n                                <SettingsIcon className=\"w-4 h-4\" /> League Settings\n                            </h3>\n                            <p className=\"text-xs text-gray-400 mt-1\">Configure league rules and settings.</p>\n                        </button>\n                        <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'EDIT_SCORING' })} className=\"w-full p-3 bg-white/5 rounded-lg text-left hover:bg-white/10 mobile-touch-target\">\n                            <h3 className=\"font-semibold text-white flex items-center gap-2 text-sm sm:text-base\"><PencilIcon /> Edit Scoring Rules</h3>\n                            <p className=\"text-xs text-gray-400 mt-1\">Customize your league's scoring system.</p>\n                        </button>\n                        <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'SCHEDULE_MANAGEMENT' })} disabled={!isPostDraft} className=\"w-full p-3 bg-white/5 rounded-lg text-left hover:bg-white/10 disabled:opacity-50 disabled:cursor-not-allowed mobile-touch-target\">\n                            <h3 className=\"font-semibold text-white flex items-center gap-2 text-sm sm:text-base\"><CalendarIcon /> Edit Schedule</h3>\n                            <p className=\"text-xs text-gray-400 mt-1\">View and manually adjust weekly matchups.</p>\n                        </button>\n                         <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_CONSTITUTION' })} className=\"w-full p-3 bg-white/5 rounded-lg text-left hover:bg-white/10 mobile-touch-target\">\n                            <h3 className=\"font-semibold text-white flex items-center gap-2 text-sm sm:text-base\"><FileTextIcon /> Generate Constitution</h3>\n                            <p className=\"text-xs text-gray-400 mt-1\">Create a formal league constitution document.</p>\n                        </button>\n                    </div>\n                </Widget>\n                <MemberManagementWidget league={league} dispatch={dispatch} />\n            </div>\n            <div className=\"space-y-4 sm:space-y-6\">\n                 <Widget title=\"In-Season Management\">\n                     <div className=\"p-3 sm:p-4 space-y-3 sm:space-y-4\">\n                         <button onClick={() => setIsManageTradesModalOpen(true)} disabled={!isPostDraft} className=\"w-full p-3 bg-white/5 rounded-lg text-left hover:bg-white/10 disabled:opacity-50 disabled:cursor-not-allowed mobile-touch-target\">\n                            <h3 className=\"font-semibold text-white flex items-center gap-2 text-sm sm:text-base\"><ArrowRightLeftIcon /> Manage Trades</h3>\n                            <p className=\"text-xs text-gray-400 mt-1\">Review, force, or veto pending trades in the league.</p>\n                        </button>\n                         <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'EDIT_ROSTER' })} disabled={!isPostDraft} className=\"w-full p-3 bg-white/5 rounded-lg text-left hover:bg-white/10 disabled:opacity-50 disabled:cursor-not-allowed mobile-touch-target\">\n                            <h3 className=\"font-semibold text-white flex items-center gap-2 text-sm sm:text-base\"><PencilIcon /> Edit Rosters</h3>\n                            <p className=\"text-xs text-gray-400 mt-1\">Manually add or remove players from any team's roster.</p>\n                        </button>\n                         <button onClick={() => dispatch({ type: 'PAUSE_DRAFT', payload: !state.isDraftPaused })} disabled={!isDrafting} className=\"w-full p-3 bg-white/5 rounded-lg text-left hover:bg-white/10 disabled:opacity-50 disabled:cursor-not-allowed mobile-touch-target\">\n                            <h3 className=\"font-semibold text-white flex items-center gap-2 text-sm sm:text-base\"><PauseIcon /> {state.isDraftPaused ? 'Resume Draft' : 'Pause Draft'}</h3>\n                            <p className=\"text-xs text-gray-400 mt-1\">Temporarily pause or unpause a live draft.</p>\n                        </button>\n                        <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'FINANCE_TRACKER' })} className=\"w-full p-3 bg-white/5 rounded-lg text-left hover:bg-white/10 mobile-touch-target\">\n                            <h3 className=\"font-semibold text-white flex items-center gap-2 text-sm sm:text-base\"><PencilIcon /> Financials</h3>\n                            <p className=\"text-xs text-gray-400 mt-1\">Track league dues and payouts.</p>\n                        </button>\n                     </div>\n                </Widget>\n                <Widget title=\"Membership\">\n                    <div className=\"p-3 sm:p-4\">\n                         <button onClick={() => setIsInviteModalOpen(true)} className=\"w-full p-3 bg-white/5 rounded-lg text-left hover:bg-white/10 mobile-touch-target\">\n                            <h3 className=\"font-semibold text-white flex items-center gap-2 text-sm sm:text-base\"><UserPlusIcon /> Invite Members</h3>\n                            <p className=\"text-xs text-gray-400 mt-1\">Add new managers to your league.</p>\n                        </button>\n                    </div>\n                </Widget>\n                 <Widget title=\"Danger Zone\">\n                    <div className=\"p-3 sm:p-4 space-y-3 sm:space-y-4\">\n                         <div className=\"p-3 bg-red-900/20 border border-red-500/30 rounded-lg\">\n                            <h3 className=\"font-semibold text-red-300 text-sm sm:text-base\">Advance Week</h3>\n                            <p className=\"text-xs text-gray-400 mt-1 mb-2\">Manually process the results of the current week and advance the league to the next week. Use with caution.</p>\n                            <button onClick={handleAdvanceWeek} className=\"w-full sm:w-auto px-4 py-2 bg-red-500/80 text-white font-bold text-sm rounded-lg hover:bg-red-500 mobile-touch-target\">\n                                Force Advance to Week {league.currentWeek + 1}\n                            </button>\n                        </div>\n                         <div className=\"p-3 bg-gray-800/50 border border-gray-600/50 rounded-lg\">\n                            <h3 className=\"font-semibold text-white flex items-center gap-2\"><ShieldAlertIcon /> Project Integrity</h3>\n                            <p className=\"text-xs text-gray-400 mt-1 mb-2\">Run a diagnostic scan on the application codebase to check for potential issues.</p>\n                            <button\n                                onClick={() => dispatch({ type: 'SET_VIEW', payload: 'PROJECT_INTEGRITY' })}\n                                className=\"px-4 py-2 bg-gray-600/80 text-white font-bold text-sm rounded-lg hover:bg-gray-500\"\n                            >\n                                Run Integrity Scan\n                            </button>\n                        </div>\n                    </div>\n                </Widget>\n            </div>\n        </div>\n    );\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-3 sm:p-4 md:p-6 lg:p-8 overflow-y-auto\">\n            <header className=\"flex-shrink-0 flex flex-col sm:flex-row sm:justify-between sm:items-center gap-3 sm:gap-0 mb-4 sm:mb-6\">\n                <div className=\"flex items-center gap-3\">\n                    <button\n                        onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })}\n                        className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\n                        aria-label=\"Back to Dashboard\"\n                    >\n                        <ChevronLeftIcon className=\"w-5 h-5\" />\n                    </button>\n                    <div>\n                        <h1 className=\"text-xl sm:text-2xl font-bold text-[var(--text-primary)]\">Commissioner Tools</h1>\n                        <p className=\"text-sm text-[var(--text-secondary)]\">Manage {league.name}</p>\n                    </div>\n                </div>\n            </header>\n\n            {/* Tab Navigation */}\n            <div className=\"flex border-b border-[var(--panel-border)] mb-6\">\n                {tabs.map((tab) => (\n                    <button\n                        key={tab.id}\n                        onClick={() => setActiveTab(tab.id as 'tools' | 'members' | 'season')}\n                        className={`px-4 py-2 text-sm font-medium border-b-2 transition-colors ${\n                            activeTab === tab.id\n                                ? 'border-blue-500 text-blue-400'\n                                : 'border-transparent text-[var(--text-secondary)] hover:text-[var(--text-primary)]'\n                        }`}\n                    >\n                        <span className=\"mr-2\">{tab.icon}</span>\n                        {tab.label}\n                    </button>\n                ))}\n            </div>\n\n            {/* Tab Content */}\n            <main className=\"flex-1 overflow-y-auto\">\n                {renderTabContent()}\n            </main>\n\n            {/* Modals */}\n            <AnimatePresence>\n                {isPollModalOpen && (\n                    <CreatePollModal leagueId={league.id} onClose={() => setIsPollModalOpen(false)} />\n                )}\n                {isAnnouncementModalOpen && (\n                    <PostAnnouncementModal leagueId={league.id} onClose={() => setIsAnnouncementModalOpen(false)} />\n                )}\n                {isManageTradesModalOpen && (\n                    <ManageTradesModal league={league} onClose={() => setIsManageTradesModalOpen(false)} />\n                )}\n                {isInviteModalOpen && (\n                    <InviteMemberModal league={league} onClose={() => setIsInviteModalOpen(false)} />\n                )}\n                {isSettingsModalOpen && (\n                    <motion.div\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                        className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/75\"\n                        onClick={(e) => e.target === e.currentTarget && setIsSettingsModalOpen(false)}\n                    >\n                        <LeagueSettingsEditor \n                            league={league} \n                            onClose={() => setIsSettingsModalOpen(false)}\n                            onSave={(settings) => {\n                                dispatch({ type: 'UPDATE_LEAGUE_SETTINGS', payload: { leagueId: league.id, settings } });\n                                setIsSettingsModalOpen(false);\n                            }}\n                        />\n                    </motion.div>\n                )}\n            </AnimatePresence>\n        </div>\n    );\n};\n\nconst CommissionerToolsView: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const { league } = useLeague();\n    \n    if (!league || state.user.id !== league.commissionerId) {\n        return (\n            <div className=\"p-8 text-center w-full h-full flex flex-col items-center justify-center\">\n                <p className=\"text-red-400\">Access Denied. You are not the commissioner of this league.</p>\n                 <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} className=\"mt-4 px-4 py-2 bg-cyan-500 rounded\">\n                    Back to Dashboard\n                </button>\n            </div>\n        );\n    }\n    \n    return <CommissionerToolsContent league={league} dispatch={dispatch} />;\n};\n\nexport default CommissionerToolsView;\n"],"names":["XIcon","className","jsxDEV","this","SaveIcon","LeagueSettingsEditor","league","onClose","onSave","formData","setFormData","React","activeTab","setActiveTab","hasChanges","setHasChanges","updateField","field","value","prev","updateRosterPosition","position","handleSave","updatedSettings","tabs","AnimatePresence","motion","e","SettingsIcon","tab","count","EnhancedMemberManagement","dispatch","selectedMember","setSelectedMember","editMode","setEditMode","editValue","setEditValue","showConfirmAction","setShowConfirmAction","members","handleMemberAction","action","confirmAction","startEdit","memberId","currentValue","saveEdit","cancelEdit","Widget","UsersIcon","UserPlusIcon","member","CrownIcon","ShieldCheckIcon","CheckIcon","PencilIcon","Fragment","UserRemoveIcon","RefreshIcon","AdjustmentsIcon","SeasonManagement","manualScoreMode","setManualScoreMode","selectedMatchup","setSelectedMatchup","scoreAdjustment","setScoreAdjustment","seasonInfo","weeklyMatchups","handleSeasonAction","confirmSeasonAction","handleScoreAdjustment","getSeasonPhase","getWeekProgress","CalendarIcon","PlayIcon","StopIcon","matchup","CreatePollModal","leagueId","state","useAppState","question","setQuestion","options","setOptions","handleOptionChange","index","newOptions","addOption","removeOption","_","i","handleSubmit","opt","Modal","ClipboardListIcon","CloseIcon","PlusCircleIcon","PostAnnouncementModal","title","setTitle","content","setContent","MegaphoneIcon","ManageTradesModal","pendingOffers","o","isTradeDeadlinePassed","handleForce","offer","handleVeto","ArrowRightLeftIcon","AlertTriangleIcon","EmptyState","TradeOfferCard","GavelIcon","InviteMemberModal","email","setEmail","copiedLink","setCopiedLink","copy","useCopyToClipboard","handleCopy","link","inv","ClipboardIcon","MemberManagementWidget","handleKick","user","handleTransfer","Avatar","CommissionerToolsContent","isPollModalOpen","setIsPollModalOpen","isAnnouncementModalOpen","setIsAnnouncementModalOpen","isManageTradesModalOpen","setIsManageTradesModalOpen","isInviteModalOpen","setIsInviteModalOpen","isSettingsModalOpen","setIsSettingsModalOpen","isDrafting","isPostDraft","handleAdvanceWeek","renderTabContent","renderToolsTab","FileTextIcon","PauseIcon","ShieldAlertIcon","ChevronLeftIcon","settings","CommissionerToolsView","useLeague"],"mappings":"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"}