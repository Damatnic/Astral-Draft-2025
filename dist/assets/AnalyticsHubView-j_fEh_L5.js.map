{"version":3,"file":"AnalyticsHubView-j_fEh_L5.js","sources":["../../components/analytics/DraftGradeCard.tsx","../../components/analytics/DraftRecap.tsx","../../components/analytics/PositionalScarcityChart.tsx","../../components/analytics/MyTeamCompositionChart.tsx","../../components/analytics/TeamNeedsAnalysis.tsx","../../components/analytics/PickTimeAnalytics.tsx","../../components/analytics/ChampionshipOddsPreview.tsx","../../views/AnalyticsHubView.tsx"],"sourcesContent":["\n\n\nimport React from 'react';\nimport type { Team, DraftGrade, League } from '../../types';\nimport { generateDraftGrade } from '../../services/geminiService';\nimport LoadingSpinner from '../ui/LoadingSpinner';\n\ninterface DraftGradeCardProps {\n    team: Team;\n    league: League;\n}\n\nconst gradeColor = (grade: string) => {\n    if (['A+', 'A', 'A-'].includes(grade)) return 'text-green-400 border-green-400/50';\n    if (['B+', 'B', 'B-'].includes(grade)) return 'text-yellow-400 border-yellow-400/50';\n    return 'text-red-400 border-red-400/50';\n}\n\nconst DraftGradeCard: React.FC<DraftGradeCardProps> = ({ team, league }) => {\n    const [grade, setGrade] = React.useState<DraftGrade | null>(team.draftGrade || null);\n    const [isLoading, setIsLoading] = React.useState(!team.draftGrade);\n\n    React.useEffect(() => {\n        // Only fetch if no grade exists. A real app might save this to state.\n        if (!team.draftGrade) {\n            setIsLoading(true);\n            generateDraftGrade(team, league)\n                .then(fetchedGrade => {\n                    if (fetchedGrade) {\n                        setGrade(fetchedGrade);\n                    }\n                })\n                .finally(() => setIsLoading(false));\n        }\n    }, [team, league]);\n\n    if (isLoading) {\n        return (\n            <div className=\"glass-pane p-4 rounded-xl flex items-center justify-center h-full\">\n                <LoadingSpinner size=\"sm\" text=\"Grading...\" />\n            </div>\n        );\n    }\n\n    if (!grade) {\n        return (\n            <div className=\"glass-pane p-4 rounded-xl flex flex-col gap-3 text-center text-red-400\">\n                <p>Could not load draft grade.</p>\n            </div>\n        );\n    }\n    \n\n    return (\n        <div className=\"glass-pane p-4 rounded-xl flex flex-col gap-3\">\n            <div className=\"flex items-center justify-between\">\n                <div>\n                    <p className=\"font-bold text-white\">{team.name}</p>\n                    <p className=\"text-xs text-gray-400\">{team.owner.name}</p>\n                </div>\n                <div className={`w-16 h-16 flex items-center justify-center rounded-full border-2 ${gradeColor(grade.overall)}`}>\n                    <span className=\"text-3xl font-bold font-display\">{grade.overall}</span>\n                </div>\n            </div>\n            <p className=\"text-xs italic text-gray-300\">\"{grade.narrative}\"</p>\n            <div className=\"text-xs space-y-1\">\n                <p><strong>Best Value:</strong> {grade.bestPick.name} ({grade.bestPick.position})</p>\n                <p><strong>Biggest Reach:</strong> {grade.biggestReach.name} ({grade.biggestReach.position})</p>\n            </div>\n        </div>\n    );\n};\n\nexport default DraftGradeCard;","\n\nimport React from 'react';\nimport type { League, DraftRecapData } from '../../types';\nimport { generateDraftRecap } from '../../services/geminiService';\nimport { TrophyIcon } from '../icons/TrophyIcon';\nimport { FlameIcon } from '../icons/FlameIcon';\nimport { GemIcon } from '../icons/GemIcon';\nimport { SparklesIcon } from '../icons/SparklesIcon';\nimport LoadingSpinner from '../ui/LoadingSpinner';\nimport { TelescopeIcon } from '../icons/TelescopeIcon';\n\ninterface DraftRecapProps {\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nconst AwardCard: React.FC<{ award: DraftRecapData['awards'][0] }> = ({ award }) => {\n    const getIcon = (title: string) => {\n        const lowerTitle = title.toLowerCase();\n        if (lowerTitle.includes('steal') || lowerTitle.includes('value')) return <GemIcon />;\n        if (lowerTitle.includes('gambler') || lowerTitle.includes('risk')) return <FlameIcon />;\n        return <TrophyIcon />;\n    };\n\n    return (\n        <div className=\"bg-white/5 p-3 sm:p-4 rounded-lg flex items-start gap-3 sm:gap-4\">\n            <div className=\"text-cyan-400 mt-1 flex-shrink-0\">{getIcon(award.awardTitle)}</div>\n            <div className=\"min-w-0 flex-1\">\n                <h4 className=\"font-bold text-white text-sm sm:text-base break-words\">{award.awardTitle}</h4>\n                <p className=\"text-xs sm:text-sm text-gray-300\">\n                    <span className=\"font-semibold text-yellow-300\">{award.teamName}</span> - {award.playerName}\n                </p>\n                <p className=\"text-xs text-gray-400 mt-1 italic break-words\">\"{award.rationale}\"</p>\n            </div>\n        </div>\n    );\n};\n\nconst DraftRecap: React.FC<DraftRecapProps> = ({ league, dispatch }) => {\n    const [recap, setRecap] = React.useState<DraftRecapData | null>(null);\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [error, setError] = React.useState<string | null>(null);\n\n    React.useEffect(() => {\n        const fetchRecap = async () => {\n            if (!league) return;\n            setIsLoading(true);\n            setError(null);\n            try {\n                const data = await generateDraftRecap(league);\n                setRecap(data);\n            } catch (err) {\n                console.error(err);\n                setError(\"The Oracle is resting. Could not generate a draft recap.\");\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchRecap();\n    }, [league]);\n    \n    if (isLoading) {\n        return <div className=\"p-4 sm:p-6\"><LoadingSpinner text=\"The Oracle is writing your draft story...\" /></div>;\n    }\n\n    if (error || !recap) {\n        return <div className=\"p-4 sm:p-6 text-center text-red-400 text-sm sm:text-base\">{error || \"No recap data available.\"}</div>;\n    }\n\n    return (\n        <div className=\"p-3 sm:p-4 md:p-6\">\n            <div className=\"text-center\">\n                <h2 className=\"font-display text-xl sm:text-2xl md:text-3xl font-bold mb-3 sm:mb-4\">\n                    <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-green-300 via-cyan-300 to-indigo-400\">\n                        {recap.title}\n                    </span>\n                </h2>\n                 <button \n                    onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DRAFT_STORY' })}\n                    className=\"mb-3 sm:mb-4 flex items-center gap-2 mx-auto px-4 py-2 bg-gradient-to-r from-purple-500 to-indigo-600 text-white font-bold rounded-lg shadow-lg btn-primary text-sm mobile-touch-target\"\n                >\n                    <TelescopeIcon />\n                    View Draft Story\n                </button>\n            </div>\n            <p className=\"text-xs sm:text-sm text-gray-300 leading-relaxed mb-4 sm:mb-6 whitespace-pre-wrap\">{recap.summary}</p>\n\n            <div>\n                <h3 className=\"font-bold text-base sm:text-lg text-cyan-300 mb-3 flex items-center gap-2\"><SparklesIcon /> Draft Awards</h3>\n                <div className=\"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-3 sm:gap-4\">\n                    {recap.awards.map((award, index) => (\n                        <AwardCard key={index} award={award} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DraftRecap;\n","\nimport React from 'react';\nimport { Player, PlayerPosition } from '../../types';\nimport { players as allPlayers } from '../../data/players';\nimport Tooltip from '../ui/Tooltip';\n\ninterface PositionalScarcityChartProps {\n    availablePlayers: Player[];\n}\n\nconst positions: PlayerPosition[] = ['QB', 'RB', 'WR', 'TE'];\nconst ELITE_TIER_THRESHOLD = 3;\n\nconst PositionalScarcityChart: React.FC<PositionalScarcityChartProps> = ({ availablePlayers }) => {\n\n    const scarcityData = React.useMemo(() => {\n        return positions.map((pos: any) => {\n            const totalEliteInPosition = allPlayers.filter(p => p.position === pos && p?.tier <= ELITE_TIER_THRESHOLD);\n            const availableEliteInPosition = availablePlayers.filter(p => p.position === pos && p?.tier <= ELITE_TIER_THRESHOLD);\n            \n            const availabilityPercent = totalEliteInPosition.length > 0\n                ? (availableEliteInPosition.length / totalEliteInPosition.length) * 100\n                : 0;\n            \n            return {\n                pos,\n                availabilityPercent,\n                tooltipText: `${availableEliteInPosition.length} of ${totalEliteInPosition.length} elite (Tiers 1-${ELITE_TIER_THRESHOLD}) ${pos}s remain.`\n            };\n        });\n    }, [availablePlayers]);\n\n\n    return (\n         <div className=\"p-4\">\n            <h4 className=\"font-bold text-sm text-center mb-1 text-gray-300\">Elite Talent Pool</h4>\n            <p className=\"text-xs text-center mb-4 text-gray-500\">Percentage of Tiers 1-3 players remaining.</p>\n            <div className=\"space-y-3\">\n                {scarcityData.map((data: any) => (\n                    <Tooltip key={data.pos} text={data.tooltipText}>\n                        <div className=\"flex items-center gap-2 text-xs\">\n                            <span className=\"w-8 font-bold text-gray-400\">{data.pos}</span>\n                            <div className=\"flex-grow bg-black/20 h-5 rounded-full overflow-hidden\">\n                                <div \n                                    className=\"h-full bg-gradient-to-r from-cyan-500 to-blue-500 rounded-full transition-all duration-500 ease-out flex items-center justify-end pr-2\"\n                                    style={{ width: `${data.availabilityPercent}%`}}\n                                >\n                                   <span className=\"text-white font-bold text-[10px]\">{Math.round(data.availabilityPercent)}%</span>\n                                </div>\n                            </div>\n                        </div>\n                    </Tooltip>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default PositionalScarcityChart;\n","\nimport React from 'react';\nimport type { Team } from '../../types';\nimport Tooltip from '../ui/Tooltip';\n\ninterface MyTeamCompositionChartProps {\n    team: Team;\n}\n\nconst positionOrder = ['QB', 'RB', 'WR', 'TE', 'K', 'DST'];\n\nconst positionColors: { [key: string]: string } = {\n    QB: 'from-red-500 to-red-700',\n    RB: 'from-green-500 to-green-700',\n    WR: 'from-blue-500 to-blue-700',\n    TE: 'from-orange-500 to-orange-700',\n    K: 'from-yellow-500 to-yellow-700',\n    DST: 'from-purple-500 to-purple-700',\n};\n\nconst MyTeamCompositionChart: React.FC<MyTeamCompositionChartProps> = ({ team }) => {\n    const composition = React.useMemo(() => {\n        const counts: { [key: string]: number } = { QB: 0, RB: 0, WR: 0, TE: 0, K: 0, DST: 0 };\n        team.roster.forEach((player: any) => {\n            if (counts[player.position] !== undefined) {\n                counts[player.position]++;\n            }\n        });\n        return positionOrder.map((pos: any) => ({\n            position: pos,\n            count: counts[pos]\n        }));\n    }, [team.roster]);\n\n    const maxCount = Math.max(...composition.map((c: any) => c.count), 5); // Ensure a minimum height for the chart\n\n    return (\n        <div className=\"p-4\">\n             <h4 className=\"font-bold text-sm text-center mb-4 text-gray-300\">Roster Composition</h4>\n             <div className=\"flex justify-around items-end h-48 gap-2\">\n                {composition.map(({ position, count }) => (\n                     <Tooltip key={position} text={`${count} ${position}${count !== 1 ? 's' : ''}`}>\n                        <div className=\"flex flex-col items-center gap-1 w-full\">\n                            <div \n                                className={`w-full bg-gradient-to-t ${positionColors[position]} rounded-t-md transition-all duration-500 ease-out`}\n                                style={{ height: `${(count / maxCount) * 100}%` }}\n                            ></div>\n                            <span className=\"text-xs font-bold text-gray-400\">{position}</span>\n                        </div>\n                     </Tooltip>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default MyTeamCompositionChart;\n","\nimport React from 'react';\nimport type { League, Team } from '../../types';\nimport { generateTeamNeedsAnalysis } from '../../services/geminiService';\nimport { Widget } from '../ui/Widget';\nimport { SparklesIcon } from '../icons/SparklesIcon';\nimport LoadingSpinner from '../ui/LoadingSpinner';\n\ninterface TeamNeedsAnalysisProps {\n    team: Team;\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nconst TeamNeedsAnalysis: React.FC<TeamNeedsAnalysisProps> = ({ team, league, dispatch }) => {\n    const [isLoading, setIsLoading] = React.useState(false);\n    const needs = team.teamNeeds;\n\n    const handleFetchNeeds = async () => {\n        setIsLoading(true);\n        try {\n            const fetchedNeeds = await generateTeamNeedsAnalysis(team);\n            if (fetchedNeeds) {\n                dispatch({ type: 'SET_TEAM_NEEDS', payload: { leagueId: league.id, teamId: team.id, needs: fetchedNeeds } });\n            }\n        } catch (e) {\n            console.error(e);\n            dispatch({ type: 'ADD_NOTIFICATION', payload: { message: 'Could not analyze team needs.', type: 'SYSTEM' } });\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    React.useEffect(() => {\n        // Fetch only if needs are not already in state and the season has started\n        if (!needs && (league?.status === 'IN_SEASON' || league?.status === 'PLAYOFFS' || league?.status === 'COMPLETE')) {\n            handleFetchNeeds();\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [team.id, league?.status]);\n\n    return (\n        <Widget title=\"Team Needs Analysis\" icon={<SparklesIcon />}>\n            <div className=\"p-4\">\n                {isLoading ? (\n                    <LoadingSpinner size=\"sm\" text=\"Analyzing roster...\" />\n                ) : needs && needs.length > 0 ? (\n                    <div className=\"space-y-3\">\n                        {needs.map((need, index) => (\n                            <div key={index} className=\"bg-black/10 p-3 rounded-lg\">\n                                <h4 className=\"font-bold text-red-400\">{need.position}</h4>\n                                <p className=\"text-xs italic text-gray-300\">\"{need.rationale}\"</p>\n                            </div>\n                        ))}\n                    </div>\n                ) : (\n                    <p className=\"text-center text-sm text-gray-400 py-2\">The Oracle sees a well-balanced team with no glaring needs.</p>\n                )}\n                <button\n                    onClick={handleFetchNeeds}\n                    disabled={isLoading}\n                    className=\"w-full mt-3 flex items-center justify-center gap-2 px-4 py-1.5 bg-transparent border border-cyan-400/50 text-cyan-300 font-bold text-xs rounded-md hover:bg-cyan-400/20 disabled:opacity-50\"\n                >\n                    {isLoading ? (\n                        <>\n                           <div className=\"w-4 h-4 border-2 border-t-transparent border-white rounded-full animate-spin\"></div>\n                           Analyzing...\n                        </>\n                    ) : (\n                       'Re-Analyze Needs'\n                    )}\n                </button>\n            </div>\n        </Widget>\n    );\n};\n\nexport default TeamNeedsAnalysis;\n","\nimport React from 'react';\nimport type { League } from '../../types';\nimport { Widget } from '../ui/Widget';\nimport { Avatar } from '../ui/Avatar';\n\ninterface PickTimeAnalyticsProps {\n    league: League;\n}\n\nconst PickTimeAnalytics: React.FC<PickTimeAnalyticsProps> = ({ league }) => {\n    const analyticsData = React.useMemo(() => {\n        const pickTimes: { [teamId: number]: number[] } = {};\n\n        const sortedPicks = [...league.draftPicks]\n            .filter((p: any) => p.timestamp)\n            .sort((a, b) => a.overall - b.overall);\n\n        for (let i = 1; i < sortedPicks.length; i++) {\n            const currentPick = sortedPicks[i];\n            const prevPick = sortedPicks[i - 1];\n            \n            if (currentPick.teamId && currentPick.timestamp && prevPick.timestamp) {\n                const timeDiff = (currentPick.timestamp - prevPick.timestamp) / 1000; // in seconds\n                \n                if (!pickTimes[currentPick.teamId]) {\n                    pickTimes[currentPick.teamId] = [];\n                }\n                pickTimes[currentPick.teamId].push(timeDiff);\n            }\n        }\n        \n        return league.teams.map((team: any) => {\n            const times = pickTimes[team.id] || [];\n            const avgTime = times.length > 0 ? times.reduce((a, b) => a + b, 0) / times.length : 0;\n            return {\n                team,\n                avgTime,\n            };\n        }).sort((a, b) => a.avgTime - b.avgTime);\n\n    }, [league]);\n\n    return (\n        <Widget title=\"Average Pick Time\">\n            <div className=\"p-4\">\n                <p className=\"text-xs text-gray-400 mb-4\">See which managers were the most decisive during the draft. Time is measured from the previous pick to their own.</p>\n                <div className=\"space-y-2\">\n                    {analyticsData.map(({ team, avgTime }, index) => (\n                        <div key={team.id} className=\"flex items-center justify-between p-2 bg-black/10 rounded-md\">\n                            <div className=\"flex items-center gap-3\">\n                                <span className=\"font-bold text-lg w-6 text-center\">{index + 1}</span>\n                                <Avatar avatar={team.avatar} className=\"w-8 h-8 rounded-md\" />\n                                <div>\n                                    <p className=\"font-semibold text-sm\">{team.name}</p>\n                                </div>\n                            </div>\n                            <p className=\"font-bold text-lg font-mono\">\n                                {avgTime > 0 ? avgTime.toFixed(1) + 's' : 'N/A'}\n                            </p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Widget>\n    );\n};\n\nexport default PickTimeAnalytics;","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport { Widget } from '../ui/Widget';\nimport type { League } from '../../types';\nimport { Avatar } from '../ui/Avatar';\nimport { TrophyIcon } from '../icons/TrophyIcon';\n\ninterface ChampionshipOddsPreviewProps {\n    league: League;\n    dispatch: React.Dispatch<any>;\n}\n\nconst ChampionshipOddsPreview: React.FC<ChampionshipOddsPreviewProps> = ({ league, dispatch }) => {\n    \n    const topContenders = [...league.teams]\n        .map((team: any) => {\n            const history = team.championshipProbHistory || [];\n            const currentProb = history.length > 0 ? history[history.length - 1].probability : 0;\n            return {\n                ...team,\n                currentProb,\n            };\n        })\n        .sort((a, b) => b.currentProb - a.currentProb)\n        .slice(0, 3);\n        \n    return (\n        <Widget title=\"Championship Contenders\" icon={<TrophyIcon />}>\n            <div className=\"p-3 space-y-2\">\n                {topContenders.map((team: any) => (\n                    <div key={team.id} className=\"flex items-center justify-between p-2 bg-black/10 rounded-md\">\n                        <div className=\"flex items-center gap-2\">\n                            <Avatar avatar={team.avatar} className=\"w-8 h-8 rounded-md\" />\n                            <p className=\"font-semibold text-sm\">{team.name}</p>\n                        </div>\n                        <p className=\"font-bold text-yellow-300\">{team.currentProb.toFixed(1)}%</p>\n                    </div>\n                ))}\n                 <button\n                    onClick={() => dispatch({ type: 'SET_VIEW', payload: 'CHAMPIONSHIP_ODDS' })}\n                    className=\"w-full mt-2 py-1.5 text-xs font-bold bg-cyan-500/10 text-cyan-300 rounded-md hover:bg-cyan-500/20\"\n                >\n                    View Full Odds Chart\n                </button>\n            </div>\n        </Widget>\n    );\n};\n\nexport default ChampionshipOddsPreview;","\nimport React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { Widget } from '../components/ui/Widget';\nimport DraftGradeCard from '../components/analytics/DraftGradeCard';\nimport type { League, Team } from '../types';\nimport DraftRecap from '../components/analytics/DraftRecap';\nimport PositionalScarcityChart from '../components/analytics/PositionalScarcityChart';\nimport { players } from '../data/players';\nimport Tabs from '../components/ui/Tabs';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport MyTeamCompositionChart from '../components/analytics/MyTeamCompositionChart';\nimport TeamNeedsAnalysis from '../components/analytics/TeamNeedsAnalysis';\nimport { useLeague } from '../hooks/useLeague';\nimport PickTimeAnalytics from '../components/analytics/PickTimeAnalytics';\nimport ChampionshipOddsPreview from '../components/analytics/ChampionshipOddsPreview';\nimport ErrorBoundary from '../components/ui/ErrorBoundary';\nimport type { AnalyticsViewProps } from '../types/viewTypes';\n\ninterface AnalyticsHubViewProps extends AnalyticsViewProps {\n  // Additional props specific to analytics hub\n}\n\nconst LeagueWideAnalytics: React.FC<{ league: League; dispatch: React.Dispatch<any> }> = ({ league, dispatch }) => {\n    const draftedPlayerIds = new Set(league.draftPicks.map(p => p.playerId));\n    const availablePlayers = players.filter(p => !draftedPlayerIds.has(p.id));\n    const isFullAiEnabled = league.settings.aiAssistanceLevel === 'FULL';\n    return (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\">\n            <div className=\"md:col-span-2 lg:col-span-2 space-y-4 sm:space-y-6\">\n                <Widget title=\"Oracle's Post-Draft Analysis\">\n                    <DraftRecap league={league} dispatch={dispatch} />\n                </Widget>\n                <Widget title=\"Team-by-Team Grades\">\n                    <div className=\"p-3 sm:p-4 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-3 sm:gap-4\">\n                        {league.teams.map(team => (\n                            <DraftGradeCard key={team.id} team={team} league={league} />\n                        ))}\n                    </div>\n                </Widget>\n            </div>\n            <div className=\"md:col-span-2 lg:col-span-1 space-y-4 sm:space-y-6\">\n                 <Widget title=\"Positional Scarcity\">\n                    <PositionalScarcityChart availablePlayers={availablePlayers} />\n                 </Widget>\n                 {isFullAiEnabled && <ChampionshipOddsPreview league={league} dispatch={dispatch} />}\n            </div>\n        </div>\n    );\n};\n\nconst MyTeamAnalytics: React.FC<{ league: League; myTeam: Team, dispatch: React.Dispatch<any> }> = ({ league, myTeam, dispatch }) => {\n    const isFullAiEnabled = league.settings.aiAssistanceLevel === 'FULL';\n    return (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-6\">\n            <div className=\"lg:col-span-1 space-y-4 sm:space-y-6\">\n                <Widget title=\"My Draft Grade\">\n                    <div className=\"p-3 sm:p-4\">\n                        <DraftGradeCard team={myTeam} league={league} />\n                    </div>\n                </Widget>\n                {isFullAiEnabled && <TeamNeedsAnalysis team={myTeam} league={league} dispatch={dispatch} />}\n            </div>\n            <div className=\"lg:col-span-2\">\n                <Widget title=\"My Roster Analysis\">\n                    <MyTeamCompositionChart team={myTeam} />\n                </Widget>\n            </div>\n        </div>\n    );\n};\n\n\nconst AnalyticsHubContent: React.FC<{ league: League; myTeam: Team; dispatch: React.Dispatch<any> }> = ({ league, myTeam, dispatch }) => {\n    const [activeTab, setActiveTab] = React.useState('league');\n    const isFullAiEnabled = league.settings.aiAssistanceLevel === 'FULL';\n    \n    const tabs = [\n        {id: 'league', label: 'League-Wide'}, \n        {id: 'my-team', label: 'My Team'},\n        {id: 'performance', label: 'Draft Performance'}\n    ];\n    \n    const isSeasonStarted = league.status === 'IN_SEASON' || league.status === 'PLAYOFFS' || league.status === 'COMPLETE';\n\n    if (isSeasonStarted && isFullAiEnabled && !tabs.find(t => t.id === 'needs')) {\n        tabs.push({ id: 'needs', label: 'Team Needs' });\n    }\n\n    return (\n         <div className=\"w-full h-full flex flex-col p-3 sm:p-4 md:p-6 lg:p-8 overflow-y-auto\">\n            <header className=\"flex-shrink-0 flex flex-col sm:flex-row sm:justify-between sm:items-center gap-3 sm:gap-0 mb-4 sm:mb-6\">\n                <div>\n                    <h1 className=\"font-display text-2xl sm:text-3xl md:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        Analytics Hub\n                    </h1>\n                    <p className=\"text-xs sm:text-sm text-[var(--text-secondary)] tracking-widest\">{league.name}</p>\n                </div>\n                <div className=\"flex flex-col sm:flex-row items-stretch sm:items-center space-y-2 sm:space-y-0 sm:space-x-3\">\n                    <button \n                        onClick={() => dispatch({ type: 'SET_VIEW', payload: 'HISTORICAL_ANALYTICS' })} \n                        className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-purple-600 text-white rounded-lg text-sm hover:bg-purple-700 transition-colors mobile-touch-target\"\n                    >\n                        <span>Historical Analytics</span>\n                        <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                        </svg>\n                    </button>\n                    <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'TEAM_HUB' })} className=\"px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20 mobile-touch-target\">\n                        Back to My Team\n                    </button>\n                </div>\n            </header>\n            <div className=\"border-b border-[var(--panel-border)] mb-4 sm:mb-6\">\n                <Tabs items={tabs} activeTab={activeTab} onTabChange={setActiveTab} />\n            </div>\n            <main className=\"flex-grow\">\n                <AnimatePresence mode=\"wait\">\n                    <motion.div\n                        key={activeTab}\n                        {...{\n                            initial: { opacity: 0, y: 20 },\n                            animate: { opacity: 1, y: 0 },\n                            exit: { opacity: 0, y: -20 },\n                            transition: { duration: 0.2 },\n                        }}\n                    >\n                        {activeTab === 'league' && <LeagueWideAnalytics league={league} dispatch={dispatch} />}\n                        {activeTab === 'my-team' && <MyTeamAnalytics league={league} myTeam={myTeam} dispatch={dispatch} />}\n                        {activeTab === 'performance' && <PickTimeAnalytics league={league} />}\n                        {activeTab === 'needs' && isFullAiEnabled && <TeamNeedsAnalysis team={myTeam} league={league} dispatch={dispatch} />}\n                    </motion.div>\n                </AnimatePresence>\n            </main>\n        </div>\n    );\n};\n\n\nconst AnalyticsHubView: React.FC<AnalyticsHubViewProps> = () => {\n    const { dispatch } = useAppState();\n    const { league, myTeam } = useLeague();\n    \n    const isDraftFinished = league && (\n        league.status === 'DRAFT_COMPLETE' || \n        league.status === 'IN_SEASON' || \n        league.status === 'PLAYOFFS' ||\n        league.status === 'COMPLETE'\n    );\n\n    // Early returns to avoid nested ternary complexity\n    if (!league || !myTeam) {\n        return (\n            <div className=\"p-8 text-center w-full h-full flex flex-col items-center justify-center\">\n                <p>Please select a completed league to view analytics.</p>\n                <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} className=\"mt-4 px-4 py-2 bg-cyan-500 rounded\">\n                    Back to Dashboard\n                </button>\n            </div>\n        );\n    }\n\n    if (!isDraftFinished) {\n        return (\n            <div className=\"p-8 text-center w-full h-full flex flex-col items-center justify-center\">\n                <p>Draft analytics are available after the draft is complete.</p>\n                <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} className=\"mt-4 px-4 py-2 bg-cyan-500 rounded\">\n                    Back to Dashboard\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"w-full h-full\">\n            <AnalyticsHubContent league={league} myTeam={myTeam} dispatch={dispatch} />\n        </div>\n    );\n};\n\nconst AnalyticsHubViewWithErrorBoundary: React.FC<AnalyticsHubViewProps> = (props) => (\n    <ErrorBoundary>\n        <AnalyticsHubView {...props} />\n    </ErrorBoundary>\n);\n\nexport default AnalyticsHubViewWithErrorBoundary;\n"],"names":["gradeColor","grade","DraftGradeCard","team","league","setGrade","React","isLoading","setIsLoading","generateDraftGrade","fetchedGrade","jsxDEV","LoadingSpinner","this","AwardCard","award","getIcon","title","lowerTitle","GemIcon","FlameIcon","TrophyIcon","DraftRecap","dispatch","recap","setRecap","error","setError","data","generateDraftRecap","err","TelescopeIcon","SparklesIcon","index","positions","ELITE_TIER_THRESHOLD","PositionalScarcityChart","availablePlayers","scarcityData","pos","totalEliteInPosition","allPlayers","p","availableEliteInPosition","availabilityPercent","Tooltip","positionOrder","positionColors","MyTeamCompositionChart","composition","counts","player","maxCount","c","position","count","TeamNeedsAnalysis","needs","handleFetchNeeds","fetchedNeeds","generateTeamNeedsAnalysis","e","Widget","need","Fragment","PickTimeAnalytics","analyticsData","pickTimes","sortedPicks","a","b","i","currentPick","prevPick","timeDiff","times","avgTime","Avatar","ChampionshipOddsPreview","topContenders","history","currentProb","LeagueWideAnalytics","draftedPlayerIds","players","isFullAiEnabled","MyTeamAnalytics","myTeam","AnalyticsHubContent","activeTab","setActiveTab","tabs","t","Tabs","AnimatePresence","motion","AnalyticsHubView","useAppState","useLeague","isDraftFinished","AnalyticsHubViewWithErrorBoundary","props","ErrorBoundary"],"mappings":"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"}