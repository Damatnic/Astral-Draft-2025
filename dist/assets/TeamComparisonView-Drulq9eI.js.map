{"version":3,"file":"TeamComparisonView-Drulq9eI.js","sources":["../../components/icons/XCircleIcon.tsx","../../components/comparison/TeamComparisonCard.tsx","../../views/TeamComparisonView.tsx"],"sourcesContent":["\nimport React from 'react';\n\nexport const XCircleIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5 text-gray-400\"}>\n        <circle cx=\"12\" cy=\"12\" r=\"10\" />\n        <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n        <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\" />\n    </svg>\n);\n","\nimport React from 'react';\nimport type { Team } from '../../types';\nimport { Widget } from '../ui/Widget';\nimport { Avatar } from '../ui/Avatar';\nimport { CheckIcon } from '../icons/CheckIcon';\nimport { XCircleIcon } from '../icons/XCircleIcon';\n\ninterface TeamComparisonCardProps {\n    team: Team;\n    strengths?: string[];\n    weaknesses?: string[];\n}\n\nconst TeamComparisonCard: React.FC<TeamComparisonCardProps> = ({ team, strengths, weaknesses }) => {\n    return (\n        <Widget title={team.name} icon={<Avatar avatar={team.avatar} className=\"w-6 h-6 rounded-md\" />}>\n            <div className=\"p-2 space-y-4 h-full overflow-y-auto\">\n                <div>\n                    <h4 className=\"font-bold text-sm text-green-400 mb-1\">Strengths</h4>\n                    {strengths ? (\n                        <ul className=\"space-y-1 text-xs list-inside\">\n                           {strengths.map((s, i) => <li key={i} className=\"flex items-start gap-1\"><CheckIcon/> {s}</li>)}\n                        </ul>\n                    ) : (\n                        <div className=\"h-10 animate-pulse bg-slate-700/50 rounded-md\"></div>\n                    )}\n                </div>\n                 <div>\n                    <h4 className=\"font-bold text-sm text-red-400 mb-1\">Weaknesses</h4>\n                    {weaknesses ? (\n                        <ul className=\"space-y-1 text-xs list-inside\">\n                            {weaknesses.map((w, i) => <li key={i} className=\"flex items-start gap-1\"><XCircleIcon/> {w}</li>)}\n                        </ul>\n                    ) : (\n                        <div className=\"h-10 animate-pulse bg-slate-700/50 rounded-md\"></div>\n                    )}\n                </div>\n                 <div>\n                    <h4 className=\"font-bold text-sm text-cyan-400 mb-1\">Full Roster</h4>\n                    <div className=\"space-y-1\">\n                        {team.roster.map((player: any) => (\n                            <div key={player.id} className=\"p-1.5 bg-black/20 rounded-md text-xs\">\n                                <span className=\"font-semibold\">{player.name}</span>\n                                <span className=\"text-gray-400\"> ({player.position})</span>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </Widget>\n    );\n};\n\nexport default TeamComparisonCard;\n","\nimport React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { useLeague } from '../hooks/useLeague';\nimport ErrorDisplay from '../components/core/ErrorDisplay';\nimport { Widget } from '../components/ui/Widget';\nimport type { Team, TeamComparison } from '../types';\nimport { generateTeamComparison } from '../services/geminiService';\nimport TeamComparisonCard from '../components/comparison/TeamComparisonCard';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport { SparklesIcon } from '../components/icons/SparklesIcon';\nimport ReactMarkdown from 'react-markdown';\n\nconst TeamComparisonView: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const { league } = useLeague();\n    const [comparison, setComparison] = React.useState<TeamComparison | null>(null);\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    const teamIds = state.teamsToCompare;\n    const teamA = league?.teams.find(t => t.id === teamIds?.[0]);\n    const teamB = league?.teams.find(t => t.id === teamIds?.[1]);\n\n    React.useEffect(() => {\n        if (teamA && teamB && league) {\n            setIsLoading(true);\n            generateTeamComparison(teamA, teamB, league)\n                .then(setComparison)\n                .finally(() => setIsLoading(false));\n        }\n    }, [teamA, teamB, league]);\n\n    if (!league || !teamA || !teamB) {\n        return <ErrorDisplay title=\"Error\" message=\"Could not find teams to compare.\" onRetry={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_STANDINGS' })} />;\n    }\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-4 sm:p-6 lg:p-8 overflow-y-auto\">\n            <header className=\"flex-shrink-0 flex justify-between items-center mb-6\">\n                 <div>\n                    <h1 className=\"font-display text-3xl sm:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        Team Comparison\n                    </h1>\n                    <p className=\"text-sm text-[var(--text-secondary)] tracking-widest\">{league.name}</p>\n                </div>\n                <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'LEAGUE_STANDINGS' })} className=\"px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20\">\n                    Back to Standings\n                </button>\n            </header>\n            <main className=\"flex-grow grid grid-cols-1 xl:grid-cols-[1fr_2fr_1fr] gap-6\">\n                <TeamComparisonCard team={teamA} strengths={comparison?.strengthsA} weaknesses={comparison?.weaknessesA} />\n                \n                <Widget title=\"Oracle's Analysis\" icon={<SparklesIcon />}>\n                    <div className=\"p-4 h-full overflow-y-auto\">\n                        {isLoading ? <LoadingSpinner text=\"Analyzing both teams...\" /> :\n                         comparison ? (\n                            <div className=\"prose prose-sm prose-invert\">\n                                <h3>Prediction</h3>\n                                <p>{comparison.prediction}</p>\n                                <h3>Analysis</h3>\n                                <ReactMarkdown>{comparison.analysis}</ReactMarkdown>\n                            </div>\n                         ) : (\n                            <ErrorDisplay title=\"Analysis Failed\" message=\"The Oracle could not provide an analysis for this matchup.\" />\n                         )}\n                    </div>\n                </Widget>\n                \n                <TeamComparisonCard team={teamB} strengths={comparison?.strengthsB} weaknesses={comparison?.weaknessesB} />\n            </main>\n        </div>\n    );\n};\n\nexport default TeamComparisonView;\n"],"names":["XCircleIcon","className","jsxDEV","this","TeamComparisonCard","team","strengths","weaknesses","Widget","Avatar","i","CheckIcon","w","player","TeamComparisonView","state","dispatch","useAppState","league","useLeague","comparison","setComparison","React","isLoading","setIsLoading","teamIds","teamA","teamB","generateTeamComparison","ErrorDisplay","SparklesIcon","LoadingSpinner","ReactMarkdown"],"mappings":"0XAGO,MAAMA,EAAgD,CAAC,CAAE,UAAAC,KAC5DC,EAAAA,OAAC,MAAA,CAAI,MAAM,6BAA6B,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,OAAO,OAAO,eAAe,YAAY,IAAI,cAAc,QAAQ,eAAe,QAAQ,UAAWD,GAAa,wBACtM,SAAA,CAAAC,EAAAA,OAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,MAA1B,OAAA,GAAA,CAAA,SAAA,sEAAA,WAAA,EAAA,aAAA,CAAA,EAAAC,MAA+B,EAC/BD,EAAAA,OAAC,QAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAA,EAA/B,OAAA,GAAA,CAAA,SAAA,sEAAA,WAAA,EAAA,aAAA,CAAA,EAAAC,MAAoC,EACpCD,EAAAA,OAAC,QAAK,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,IAAA,EAA/B,OAAA,GAAA,CAAA,SAAA,sEAAA,WAAA,EAAA,aAAA,CAAA,EAAAC,MAAoC,CAAA,CAAA,EAHxC,OAAA,GAAA,CAAA,SAAA,sEAAA,WAAA,EAAA,aAAA,CAAA,EAAAA,MAIA,ECMEC,EAAwD,CAAC,CAAE,KAAAC,EAAM,UAAAC,EAAW,WAAAC,KAE1EL,EAAAA,OAACM,EAAA,CAAO,MAAOH,EAAK,KAAM,KAAMH,EAAAA,OAACO,EAAA,CAAO,OAAQJ,EAAK,OAAQ,UAAU,oBAAA,EAAvC,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAF,MAA4D,EACxF,SAAAD,EAAAA,OAAC,MAAA,CAAI,UAAU,uCACX,SAAA,CAAAA,SAAC,MAAA,CACG,SAAA,CAAAA,SAAC,KAAA,CAAG,UAAU,wCAAwC,SAAA,WAAA,EAAtD,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAC,MAA+D,EAC9DG,EACGJ,EAAAA,OAAC,KAAA,CAAG,UAAU,gCACV,SAAAI,EAAU,IAAI,CAAC,EAAGI,IAAMR,SAAC,KAAA,CAAW,UAAU,yBAAyB,SAAA,CAAAA,EAAAA,OAACS,EAAA,GAAD,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,GAAA,EAAAR,MAAU,EAAE,IAAE,CAAA,CAAA,EAApDO,EAAT,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAP,MAA+D,CAAK,GADhG,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAEA,EAEAD,EAAAA,OAAC,MAAA,CAAI,UAAU,+CAAA,EAAf,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAC,MAA+D,CAAA,CAAA,EAPvE,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MASA,WACE,MAAA,CACE,SAAA,CAAAD,SAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,YAAA,EAApD,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAC,MAA8D,EAC7DI,EACGL,EAAAA,OAAC,KAAA,CAAG,UAAU,gCACT,SAAAK,EAAW,IAAI,CAACK,EAAGF,IAAMR,SAAC,KAAA,CAAW,UAAU,yBAAyB,SAAA,CAAAA,EAAAA,OAACF,EAAA,GAAD,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,GAAA,EAAAG,MAAY,EAAE,IAAES,CAAA,CAAA,EAAtDF,EAAT,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAP,MAAiE,CAAK,GADpG,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAEA,EAEAD,EAAAA,OAAC,MAAA,CAAI,UAAU,+CAAA,EAAf,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAC,MAA+D,CAAA,CAAA,EAPtE,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MASD,WACE,MAAA,CACE,SAAA,CAAAD,SAAC,KAAA,CAAG,UAAU,uCAAuC,SAAA,aAAA,EAArD,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAC,MAAgE,EAChED,EAAAA,OAAC,MAAA,CAAI,UAAU,YACV,SAAAG,EAAK,OAAO,IAAKQ,GACdX,EAAAA,OAAC,MAAA,CAAoB,UAAU,uCAC3B,SAAA,CAAAA,SAAC,OAAA,CAAK,UAAU,gBAAiB,SAAAW,EAAO,IAAA,EAAxC,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAV,MAA6C,EAC7CD,EAAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,CAAA,KAAGW,EAAO,SAAS,GAAA,CAAA,EAAnD,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAV,MAAoD,CAAA,GAF9CU,EAAO,GAAjB,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAV,MAGA,CACH,GANL,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAOA,CAAA,CAAA,EATH,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAUD,CAAA,CAAA,EA/BJ,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAgCA,CAAA,EAjCJ,OAAA,GAAA,CAAA,SAAA,kFAAA,WAAA,GAAA,aAAA,CAAA,EAAAA,MAkCA,ECrCFW,EAA+B,IAAM,CACvC,KAAM,CAAE,MAAAC,EAAO,SAAAC,CAAA,EAAaC,EAAA,EACtB,CAAE,OAAAC,CAAA,EAAWC,EAAA,EACb,CAACC,EAAYC,CAAa,EAAIC,EAAM,SAAgC,IAAI,EACxE,CAACC,EAAWC,CAAY,EAAIF,EAAM,SAAS,EAAI,EAE/CG,EAAUV,EAAM,eAChBW,EAAQR,GAAQ,MAAM,QAAU,EAAE,KAAOO,IAAU,CAAC,CAAC,EACrDE,EAAQT,GAAQ,MAAM,QAAU,EAAE,KAAOO,IAAU,CAAC,CAAC,EAW3D,OATAH,EAAM,UAAU,IAAM,CACdI,GAASC,GAAST,IAClBM,EAAa,EAAI,EACjBI,EAAuBF,CAAoB,EACtC,KAAKL,CAAa,EAClB,QAAQ,IAAMG,EAAa,EAAK,CAAC,EAE9C,EAAG,CAACE,EAAOC,EAAOT,CAAM,CAAC,EAErB,CAACA,GAAU,CAACQ,GAAS,CAACC,EACfzB,EAAAA,OAAC2B,EAAA,CAAa,MAAM,QAAQ,QAAQ,mCAAmC,QAAS,IAAMb,EAAS,CAAE,KAAM,WAAY,QAAS,kBAAA,CAAoB,CAAA,EAAhJ,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAb,MAAmJ,EAI1JD,EAAAA,OAAC,MAAA,CAAI,UAAU,gEACX,SAAA,CAAAA,EAAAA,OAAC,SAAA,CAAO,UAAU,uDACb,SAAA,CAAAA,SAAC,MAAA,CACE,SAAA,CAAAA,SAAC,KAAA,CAAG,UAAU,uGAAuG,SAAA,iBAAA,EAArH,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAC,MAEA,EACAD,SAAC,IAAA,CAAE,UAAU,uDAAwD,WAAO,IAAA,EAA5E,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAC,MAAiF,CAAA,CAAA,EAJpF,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAKD,EACAD,EAAAA,OAAC,SAAA,CAAO,QAAS,IAAMc,EAAS,CAAE,KAAM,WAAY,QAAS,kBAAA,CAAoB,EAAG,UAAU,6DAA6D,SAAA,mBAAA,EAA3J,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAb,MAEA,CAAA,CAAA,EATJ,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAUA,EACAD,EAAAA,OAAC,OAAA,CAAK,UAAU,8DACZ,SAAA,CAAAA,EAAAA,OAACE,EAAA,CAAmB,KAAMsB,EAAO,UAAWN,GAAY,WAAY,WAAYA,GAAY,WAAA,EAA5F,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAjB,MAAyG,WAExGK,EAAA,CAAO,MAAM,oBAAoB,cAAOsB,EAAA,CAAA,EAAD,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAA3B,MAAc,EAClD,kBAAC,MAAA,CAAI,UAAU,6BACV,SAAAoB,EAAYrB,EAAAA,OAAC6B,EAAA,CAAe,KAAK,yBAAA,EAArB,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAA5B,MAA+C,EAC3DiB,EACGlB,EAAAA,OAAC,MAAA,CAAI,UAAU,8BACX,SAAA,CAAAA,EAAAA,OAAC,MAAG,SAAA,YAAA,EAAJ,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAC,MAAc,EACdD,EAAAA,OAAC,IAAA,CAAG,SAAAkB,EAAW,UAAA,EAAf,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAjB,MAA0B,EAC1BD,EAAAA,OAAC,MAAG,SAAA,UAAA,EAAJ,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAC,MAAY,EACZD,EAAAA,OAAC8B,EAAA,CAAe,SAAAZ,EAAW,QAAA,EAA3B,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAjB,MAAoC,CAAA,CAAA,EAJxC,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAKA,EAEAD,SAAC2B,EAAA,CAAa,MAAM,kBAAkB,QAAQ,8DAA9C,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAA1B,MAA2G,CAAA,EAVnH,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAYA,CAAA,EAbJ,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAcA,EAEAD,EAAAA,OAACE,GAAmB,KAAMuB,EAAO,UAAWP,GAAY,WAAY,WAAYA,GAAY,WAAA,EAA5F,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAjB,MAAyG,CAAA,CAAA,EAnB7G,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAoBA,CAAA,CAAA,EAhCJ,OAAA,GAAA,CAAA,SAAA,kEAAA,WAAA,GAAA,aAAA,CAAA,EAAAA,MAiCA,CAER"}