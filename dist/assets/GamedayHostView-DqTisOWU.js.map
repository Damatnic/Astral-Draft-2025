{"version":3,"file":"GamedayHostView-DqTisOWU.js","sources":["../../views/GamedayHostView.tsx"],"sourcesContent":["\n\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useAppState } from '../contexts/AppContext';\nimport { useLeague } from '../hooks/useLeague';\nimport ErrorDisplay from '../components/core/ErrorDisplay';\nimport { generateGamedayHighlight } from '../services/geminiService';\nimport { Avatar } from '../components/ui/Avatar';\nimport { formatRelativeTime } from '../utils/time';\nimport type { Player, GamedayEvent } from '../types';\nimport { useLiveData } from '../hooks/useLiveData';\n\nconst GamedayHostView: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const { league, myTeam } = useLeague();\n\n    const matchup = league?.schedule.find(m =>\n        m.week === league.currentWeek &&\n        (m.teamA.teamId === myTeam?.id || m.teamB.teamId === myTeam?.id)\n    );\n    const opponentId = matchup?.teamA.teamId === myTeam?.id ? matchup?.teamB.teamId : matchup?.teamA.teamId;\n    const opponentTeam = league?.teams.find(t => t.id === opponentId);\n\n    // Use the live data hook\n    useLiveData(league, myTeam, opponentTeam);\n\n    const events = matchup ? state.gamedayEvents[matchup.id] || [] : [];\n    const latestEvent = events.length > 0 ? events[events.length - 1] : null;\n\n    React.useEffect(() => {\n        // This effect will run when a new event is added from the live data hook\n        const processNewEvent = async (event: GamedayEvent) => {\n            if (!matchup || !myTeam || !opponentTeam) return;\n\n            const commentary = await generateGamedayHighlight({ teamA: myTeam, teamB: opponentTeam }, event.player);\n            if (commentary) {\n                // We can update the event with the commentary or handle it separately\n                // For simplicity, let's just log it for now but it could be displayed\n                console.log(`New commentary for ${event.player.name}: ${commentary}`);\n            }\n        };\n\n        if (latestEvent && !latestEvent.text.includes(\"commentary\")) { // Simple check to avoid reprocessing\n             // In a real app, you might have a better way to check if commentary exists\n        }\n        \n    }, [latestEvent, matchup, myTeam, opponentTeam, dispatch]);\n\n\n    if (!league || !myTeam) {\n        return <ErrorDisplay title=\"Error\" message=\"Could not load league data.\" onRetry={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} />;\n    }\n    if (!matchup || !opponentTeam) {\n        return <ErrorDisplay title=\"Bye Week\" message=\"You don't have a matchup this week.\" onRetry={() => dispatch({ type: 'SET_VIEW', payload: 'TEAM_HUB' })} />;\n    }\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-4 sm:p-6 lg:p-8 overflow-y-auto\">\n            <header className=\"flex-shrink-0 flex justify-between items-center mb-6\">\n                <div>\n                    <h1 className=\"font-display text-3xl sm:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        AI Gameday Host\n                    </h1>\n                    <p className=\"text-sm text-[var(--text-secondary)] tracking-widest\">{myTeam.name} vs. {opponentTeam.name}</p>\n                </div>\n                <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'TEAM_HUB' })} className=\"px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20\">\n                    Back to Team Hub\n                </button>\n            </header>\n            <main className=\"flex-grow grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                <div className=\"lg:col-span-2 glass-pane rounded-2xl flex items-center justify-center p-8\">\n                    <AnimatePresence mode=\"wait\">\n                        <motion.div\n                            key={latestEvent?.id || 'waiting'}\n                            className=\"text-center\"\n                            {...{\n                                initial: { opacity: 0, scale: 0.8 },\n                                animate: { opacity: 1, scale: 1 },\n                                exit: { opacity: 0, scale: 1.2 },\n                                transition: { duration: 0.5, type: 'spring' },\n                            }}\n                        >\n                            {latestEvent ? (\n                                <>\n                                    <Avatar avatar={league.teams.find(t => t.id === latestEvent.teamId)?.avatar || '🏈'} className=\"w-24 h-24 text-6xl mx-auto rounded-lg mb-4\" />\n                                    <p className=\"font-display text-3xl font-bold\">{latestEvent.text}</p>\n                                </>\n                            ) : (\n                                <p className=\"text-2xl text-gray-400\">Waiting for kickoff...</p>\n                            )}\n                        </motion.div>\n                    </AnimatePresence>\n                </div>\n                <div className=\"glass-pane rounded-2xl flex flex-col\">\n                    <h3 className=\"p-3 font-bold text-center border-b border-[var(--panel-border)]\">Event Timeline</h3>\n                    <div className=\"flex-grow p-2 space-y-2 overflow-y-auto\">\n                        {events.slice().reverse().map(event => {\n                            const team = league.teams.find(t => t.id === event.teamId);\n                            return (\n                                <div key={event.id} className=\"p-2 bg-black/20 rounded-md text-sm\">\n                                    <div className=\"flex justify-between items-center text-xs text-gray-400 mb-1\">\n                                        <span className=\"font-bold text-cyan-300\">{team?.name}</span>\n                                        <span>{formatRelativeTime(event.timestamp)}</span>\n                                    </div>\n                                    <p>{event.text}</p>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n};\n\nexport default GamedayHostView;\n"],"names":["GamedayHostView","state","dispatch","useAppState","league","myTeam","useLeague","matchup","m","opponentId","opponentTeam","t","useLiveData","events","latestEvent","React","jsxDEV","ErrorDisplay","this","AnimatePresence","motion","Fragment","Avatar","event","team","formatRelativeTime"],"mappings":"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"}