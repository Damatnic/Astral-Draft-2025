{"version":3,"file":"ChatPanel-BSIUEUh_.js","sources":["../../components/chat/ReactionPicker.tsx","../../components/chat/TradeEventMessage.tsx","../../components/chat/ChatPanel.tsx"],"sourcesContent":["\nimport React from 'react';\n\ninterface ReactionPickerProps {\n  onSelect: (emoji: string) => void;\n}\n\nconst emojis = ['üëç', 'üòÇ', 'üî•', 'ü§î', 'üò¢', 'ü§Ø'];\n\nconst ReactionPicker: React.FC<ReactionPickerProps> = ({ onSelect }) => {\n  return (\n    <div className=\"absolute -top-4 right-2 sm:right-auto sm:left-2 flex items-center gap-1 p-1 bg-gray-800/90 border border-white/10 rounded-full shadow-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 z-10\">\n      {emojis.map((emoji: any) => (\n        <button\n          key={emoji}\n          onClick={() => onSelect(emoji)}\n          className=\"text-lg p-1 rounded-full hover:bg-white/20 transform hover:scale-125 transition-transform\"\n        >\n          {emoji}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default ReactionPicker;\n","\n\n\nimport React from 'react';\nimport type { ChatMessage, League, Player, DraftPickAsset } from '../../types';\nimport { players } from '../../data/players';\nimport { ArrowRightLeftIcon } from '../icons/ArrowRightLeftIcon';\nimport ReactionPicker from './ReactionPicker';\nimport { SparklesIcon } from '../icons/SparklesIcon';\n\ninterface TradeEventMessageProps {\n    message: ChatMessage;\n    league: League;\n    onReact: (messageId: string, emoji: string) => void;\n}\n\nconst TradeEventMessage: React.FC<TradeEventMessageProps> = ({ message, league, onReact }) => {\n    const { tradeEvent, aiHotTake, reactions } = message;\n\n    if (!tradeEvent) return null;\n\n    const fromTeam = league.teams.find((t: any) => t.id === tradeEvent.fromTeamId);\n    const toTeam = league.teams.find((t: any) => t.id === tradeEvent.toTeamId);\n    \n    if (!fromTeam || !toTeam) return null;\n\n    const playerMap = new Map(players.map((p: any) => [p.id, p]));\n    const offeredPlayers = tradeEvent.playersOffered.map((id: any) => playerMap.get(id)).filter(Boolean) as Player[];\n    const requestedPlayers = tradeEvent.playersRequested.map((id: any) => playerMap.get(id)).filter(Boolean) as Player[];\n    const offeredPicks = tradeEvent.draftPicksOffered || [];\n    const requestedPicks = tradeEvent.draftPicksRequested || [];\n\n    const AssetChip: React.FC<{ children: React.ReactNode, isPick?: boolean }> = ({ children, isPick }) => (\n        <div className={`px-1.5 py-0.5 rounded text-xs ${isPick ? 'bg-cyan-900/80' : 'bg-black/20'}`}>{children}</div>\n    );\n\n    return (\n        <div className=\"p-3 my-2 bg-gradient-to-br from-gray-800/50 to-gray-900/50 border-2 border-purple-400/20 rounded-lg group relative\">\n            <ReactionPicker onSelect={(emoji) => onReact(message.id, emoji)} />\n            <div className=\"flex items-center gap-2 text-purple-300 font-bold text-sm mb-2\">\n                <ArrowRightLeftIcon />\n                <span>TRADE ACCEPTED</span>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-2 text-center text-xs\">\n                <div>\n                    <p className=\"font-semibold\">{fromTeam.name} gives:</p>\n                    <div className=\"flex flex-wrap gap-1 mt-1 justify-center\">\n                        {offeredPlayers.map(p => <AssetChip key={p.id}>{p.name}</AssetChip>)}\n                        {offeredPicks.map((p, i) => <AssetChip key={i} isPick>{p.season} R{p.round}</AssetChip>)}\n                    </div>\n                </div>\n                <div>\n                    <p className=\"font-semibold\">{toTeam.name} gives:</p>\n                    <div className=\"flex flex-wrap gap-1 mt-1 justify-center\">\n                        {requestedPlayers.map(p => <AssetChip key={p.id}>{p.name}</AssetChip>)}\n                        {requestedPicks.map((p, i) => <AssetChip key={i} isPick>{p.season} R{p.round}</AssetChip>)}\n                    </div>\n                </div>\n            </div>\n\n            {aiHotTake && (\n                <div className=\"mt-2 pt-2 border-t border-white/10 text-center\">\n                    <p className=\"text-xs text-cyan-300/80 font-semibold flex items-center justify-center gap-1\">\n                        <SparklesIcon className=\"w-3 h-3\" />\n                        Oracle's Take\n                    </p>\n                    <p className=\"text-xs italic text-gray-300\">\"{aiHotTake}\"</p>\n                </div>\n            )}\n            \n            {reactions && Object.keys(reactions).length > 0 && (\n                <div className=\"flex gap-1 mt-2 justify-center\">\n                    {Object.entries(reactions).map(([emoji, userIds]) => (\n                        <div key={emoji} className=\"px-1.5 py-0.5 bg-black/30 rounded-full text-xs flex items-center gap-1\">\n                            <span>{emoji}</span>\n                            <span className=\"text-gray-300\">{userIds.length}</span>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TradeEventMessage;","\nimport React from 'react';\nimport { useAppState } from '../../contexts/AppContext';\nimport { formatRelativeTime } from '../../utils/time';\nimport { generateTrashTalk } from '../../services/geminiService';\nimport { SwordIcon } from '../icons/SwordIcon';\nimport Tooltip from '../ui/Tooltip';\nimport ReactionPicker from './ReactionPicker';\nimport TradeEventMessage from './TradeEventMessage';\n\nconst ChatPanel: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const [newMessage, setNewMessage] = React.useState('');\n    const [isGenerating, setIsGenerating] = React.useState(false);\n    const messagesEndRef = React.useRef<HTMLDivElement>(null);\n    const [showMentions, setShowMentions] = React.useState(false);\n    \n    const activeLeague = state.leagues.find((l: any) => l.id === state.activeLeagueId);\n    const messages = activeLeague?.chatMessages || [];\n    const myTeam = activeLeague?.teams.find((t: any) => t.owner.id === state.user.id);\n    \n    React.useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    const handleSend = () => {\n        if (newMessage.trim() === '' || !activeLeague) return;\n        dispatch({\n            type: 'ADD_CHAT_MESSAGE',\n            payload: {\n                leagueId: activeLeague.id,\n                message: {\n                    user: state.user,\n                    text: newMessage,\n                }\n            },\n        });\n        setNewMessage('');\n    };\n    \n    const handleGenerateTrashTalk = async () => {\n        if (!myTeam || !activeLeague) return;\n        const matchup = activeLeague.schedule.find((m: any) => m.week === activeLeague.currentWeek && (m.teamA.teamId === myTeam.id || m.teamB.teamId === myTeam.id));\n        if (!matchup) return;\n        \n        const opponentId = matchup.teamA.teamId === myTeam.id ? matchup.teamB.teamId : matchup.teamA.teamId;\n        const opponentTeam = activeLeague.teams.find((t: any) => t.id === opponentId);\n        if (!opponentTeam) return;\n\n        setIsGenerating(true);\n        const trashTalk = await generateTrashTalk(myTeam, opponentTeam);\n        if(trashTalk) {\n            setNewMessage(trashTalk);\n        }\n        setIsGenerating(false);\n    };\n\n    const handleReaction = (messageId: string, emoji: string) => {\n        if (!activeLeague) return;\n        dispatch({\n            type: 'ADD_CHAT_REACTION',\n            payload: {\n                leagueId: activeLeague.id,\n                messageId,\n                emoji,\n                userId: state.user.id,\n            }\n        });\n    };\n    \n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const text = e.target.value;\n        setNewMessage(text);\n        if (text.endsWith('@')) {\n            setShowMentions(true);\n        } else {\n            setShowMentions(false);\n        }\n    };\n\n    const handleMentionSelect = (name: string) => {\n        setNewMessage(prev => prev.slice(0, -1) + `@${name} `);\n        setShowMentions(false);\n    };\n\n    const canGenerateTrashTalk = myTeam && activeLeague && activeLeague.schedule.some((m: any) => m.week === activeLeague.currentWeek && (m.teamA.teamId === myTeam.id || m.teamB.teamId === myTeam.id));\n\n    return (\n        <div className=\"glass-pane h-full flex flex-col bg-[var(--panel-bg)] border-[var(--panel-border)] rounded-2xl shadow-lg\">\n            <div className=\"flex-shrink-0 p-3 text-center border-b border-[var(--panel-border)]\">\n                <h3 className=\"font-display text-lg font-bold text-[var(--text-primary)]\">LEAGUE CHAT</h3>\n            </div>\n            <div className=\"flex-grow p-2 space-y-3 overflow-y-auto\">\n                {messages.map((msg: any) => {\n                    const isMyMention = msg.mentions?.includes(state.user.id);\n                    if (msg.isSystemMessage && msg.tradeEvent && activeLeague) {\n                        return <TradeEventMessage key={msg.id} message={msg} league={activeLeague} onReact={handleReaction} />;\n                    }\n                    return msg.isSystemMessage ? (\n                         <div key={msg.id} className=\"text-center text-xs text-cyan-300/80 italic p-2\">\n                            <span>{msg.text}</span>\n                        </div>\n                    ) : (\n                        <div key={msg.id} className={`flex items-start gap-2.5 text-sm group relative ${msg.user.id === state.user.id ? 'justify-end' : ''}`}>\n                            {msg.user.id !== state.user.id && <span className=\"text-xl mt-1\">{msg.user.avatar}</span>}\n                            <div className=\"flex flex-col gap-1 w-full max-w-[85%]\">\n                                 <ReactionPicker onSelect={(emoji) => handleReaction(msg.id, emoji)} />\n                                <div className={`p-2 rounded-lg ${msg.user.id === state.user.id ? 'bg-cyan-600 self-end' : 'bg-black/20 self-start'} ${isMyMention ? 'ring-2 ring-yellow-400' : ''}`}>\n                                    <p>{msg.text}</p>\n                                </div>\n                                {msg.reactions && Object.keys(msg.reactions).length > 0 && (\n                                    <div className={`flex gap-1 ${msg.user.id === state.user.id ? 'self-end' : 'self-start'}`}>\n                                        {Object.entries(msg.reactions).map(([emoji, userIds]) => (\n                                            <div key={emoji} className=\"px-1.5 py-0.5 bg-black/30 rounded-full text-xs flex items-center gap-1\">\n                                                <span>{emoji}</span>\n                                                <span className=\"text-gray-300\">{(userIds as string[]).length}</span>\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n                                <div className={`text-xs text-gray-500 ${msg.user.id === state.user.id ? 'self-end' : 'self-start'}`}>\n                                    {msg.user.name} ‚Ä¢ {formatRelativeTime(msg.timestamp)}\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })}\n                <div ref={messagesEndRef} />\n            </div>\n             <div className=\"flex-shrink-0 p-2 border-t border-[var(--panel-border)] relative\">\n                {showMentions && activeLeague && (\n                    <div className=\"absolute bottom-full left-2 w-1/2 bg-gray-900 border border-white/10 rounded-lg shadow-lg p-1\">\n                        {activeLeague.members.filter((m: any) => m.id !== state.user.id).map((member: any) => (\n                            <button key={member.id} onClick={() => handleMentionSelect(member.name)} className=\"w-full text-left p-1.5 text-sm rounded hover:bg-white/10\">\n                                {member.name}\n                            </button>\n                        ))}\n                    </div>\n                )}\n                <div className=\"flex gap-2\">\n                    {canGenerateTrashTalk && (\n                        <Tooltip text=\"Generate AI Trash Talk\">\n                            <button onClick={handleGenerateTrashTalk} disabled={isGenerating} className=\"p-2 bg-black/10 dark:bg-gray-900/50 border border-[var(--panel-border)] rounded-md text-purple-400 hover:bg-black/20 disabled:opacity-50\">\n                                {isGenerating ? <div className=\"w-5 h-5 border-2 border-t-transparent border-white rounded-full animate-spin\"></div> : <SwordIcon />}\n                            </button>\n                        </Tooltip>\n                    )}\n                    <input\n                        type=\"text\"\n                        placeholder={isGenerating ? \"Cooking up some spice...\" : \"Send a message...\"}\n                        value={newMessage}\n                        onChange={handleInputChange}\n                        onKeyDown={e => e.key === 'Enter' && handleSend()}\n                        className=\"flex-grow bg-black/10 dark:bg-gray-900/50 border border-[var(--panel-border)] rounded-md px-3 py-1.5 text-sm placeholder:text-[var(--text-secondary)] focus:outline-none focus:ring-1 focus:ring-cyan-400\"\n                    />\n                    <button onClick={handleSend} disabled={!newMessage} className=\"px-4 py-1.5 bg-cyan-500 text-black font-bold text-sm rounded-md hover:bg-cyan-400 disabled:opacity-50\">Send</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatPanel;\n"],"names":["emojis","ReactionPicker","onSelect","emoji","jsxDEV","this","TradeEventMessage","message","league","onReact","tradeEvent","aiHotTake","reactions","fromTeam","toTeam","playerMap","players","p","offeredPlayers","id","requestedPlayers","offeredPicks","requestedPicks","AssetChip","children","isPick","ArrowRightLeftIcon","i","SparklesIcon","userIds","ChatPanel","state","dispatch","useAppState","newMessage","setNewMessage","React","isGenerating","setIsGenerating","messagesEndRef","showMentions","setShowMentions","activeLeague","l","messages","myTeam","t","handleSend","handleGenerateTrashTalk","matchup","m","opponentId","opponentTeam","trashTalk","generateTrashTalk","handleReaction","messageId","handleInputChange","e","text","handleMentionSelect","name","prev","canGenerateTrashTalk","msg","isMyMention","formatRelativeTime","member","Tooltip","SwordIcon"],"mappings":"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"}