{"version":3,"file":"WeeklyReportView-Dsg4nH6_.js","sources":["../../components/reports/WeeklyReportDisplay.tsx","../../components/icons/FilmIcon.tsx","../../views/WeeklyReportView.tsx"],"sourcesContent":["\n\nimport React from 'react';\nimport type { WeeklyReportData } from '../../types';\nimport { TrophyIcon } from '../icons/TrophyIcon';\nimport { FlameIcon } from '../icons/FlameIcon';\nimport { ZapIcon } from '../icons/ZapIcon';\n\ninterface WeeklyReportDisplayProps {\n    report: WeeklyReportData;\n}\n\nconst WeeklyReportDisplay: React.FC<WeeklyReportDisplayProps> = ({ report }) => {\n    return (\n        <div className=\"p-4 sm:p-6 lg:p-8\">\n            <h2 className=\"font-display text-2xl sm:text-3xl font-bold text-center mb-6\">\n                <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-green-300 via-cyan-300 to-indigo-400\">\n                    {report.title}\n                </span>\n            </h2>\n\n            <div className=\"max-w-3xl mx-auto\">\n                <p className=\"text-sm text-gray-300 leading-relaxed mb-8 whitespace-pre-wrap text-center italic\">\n                    \"{report.summary}\"\n                </p>\n                \n                {report.powerPlay && (\n                    <div className=\"mb-8 p-4 bg-purple-500/10 border border-purple-400/20 rounded-lg text-center\">\n                        <h3 className=\"font-bold text-lg text-purple-300 mb-1 flex items-center justify-center gap-2\"><ZapIcon /> Power Play of the Week</h3>\n                        <p className=\"font-semibold text-white\">{report.powerPlay.move} by {report.powerPlay.teamName}</p>\n                        <p className=\"text-xs text-gray-400 mt-1 italic\">\"{report.powerPlay.rationale}\"</p>\n                    </div>\n                )}\n\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    {/* Game of the Week */}\n                    <div className=\"bg-white/5 p-4 rounded-lg flex flex-col items-center text-center\">\n                        <FlameIcon />\n                        <h3 className=\"font-bold text-lg text-cyan-300 mt-2 mb-1\">Game of the Week</h3>\n                        <p className=\"font-semibold text-white\">{report.gameOfWeek.teamAName} vs. {report.gameOfWeek.teamBName}</p>\n                        <p className=\"text-xs text-gray-400 mt-1\">\"{report.gameOfWeek.reason}\"</p>\n                    </div>\n\n                    {/* Player of the Week */}\n                    <div className=\"bg-white/5 p-4 rounded-lg flex flex-col items-center text-center\">\n                        <TrophyIcon />\n                        <h3 className=\"font-bold text-lg text-yellow-300 mt-2 mb-1\">Player of the Week</h3>\n                        <p className=\"font-semibold text-white\">{report.playerOfWeek.playerName}</p>\n                        <p className=\"text-xs text-gray-400\">{report.playerOfWeek.teamName} - {report.playerOfWeek.stats} points</p>\n                        <p className=\"text-xs text-gray-400 mt-1\">\"{report.playerOfWeek.reason}\"</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WeeklyReportDisplay;","\nimport React from 'react';\n\nexport const FilmIcon: React.FC<{ className?: string }> = ({ className }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={className || \"h-5 w-5\"}>\n        <rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\"/>\n        <path d=\"M7 3v18\"/>\n        <path d=\"M3 7.5h4\"/>\n        <path d=\"M3 12h18\"/>\n        <path d=\"M3 16.5h4\"/>\n        <path d=\"M17 3v18\"/>\n        <path d=\"M17 7.5h4\"/>\n        <path d=\"M17 16.5h4\"/>\n    </svg>\n);","\nimport React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { generateWeeklyReport, generateWeeklyPowerPlay } from '../services/geminiService';\nimport type { League, WeeklyReportData } from '../types';\nimport WeeklyReportDisplay from '../components/reports/WeeklyReportDisplay';\nimport { motion } from 'framer-motion';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport { useLeague } from '../hooks/useLeague';\nimport ErrorDisplay from '../components/core/ErrorDisplay';\nimport { FilmIcon } from '../components/icons/FilmIcon';\n\n\nconst WeeklyReportContent: React.FC<{ league: League; dispatch: React.Dispatch<any> }> = ({ league, dispatch }) => {\n    const [report, setReport] = React.useState<WeeklyReportData | null>(null);\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [error, setError] = React.useState<string | null>(null);\n    const [selectedWeek, setSelectedWeek] = React.useState(league.currentWeek > 1 ? league.currentWeek - 1 : 1);\n    const [retryCount, setRetryCount] = React.useState(0);\n    \n    const maxWeek = league.currentWeek - 1;\n\n    const fetchReport = React.useCallback(async () => {\n        if (!league || selectedWeek < 1) return;\n        setIsLoading(true);\n        setError(null);\n        try {\n            const [reportData, powerPlayData] = await Promise.all([\n                generateWeeklyReport(league, selectedWeek),\n                generateWeeklyPowerPlay(league, selectedWeek)\n            ]);\n\n            if(reportData) {\n                setReport({ ...reportData, powerPlay: powerPlayData || undefined });\n            } else {\n                 setError(\"The Oracle could not produce a weekly report.\");\n            }\n\n        } catch (err) {\n            console.error(err);\n            setError(\"An error occurred while consulting the Oracle for a weekly report.\");\n        } finally {\n            setIsLoading(false);\n        }\n    }, [league, selectedWeek]);\n    \n    React.useEffect(() => {\n        fetchReport();\n    }, [fetchReport, retryCount]);\n\n    const handleRetry = () => setRetryCount(c => c + 1);\n    \n    return (\n        <div className=\"w-full h-full flex flex-col p-4 sm:p-6 lg:p-8 overflow-y-auto\">\n            <header className=\"flex-shrink-0 flex justify-between items-center mb-6\">\n                <div>\n                    <h1 className=\"font-display text-3xl sm:text-4xl font-extrabold tracking-wider uppercase text-[var(--text-primary)]\">\n                        The Oracle's Report\n                    </h1>\n                    <p className=\"text-sm text-[var(--text-secondary)] tracking-widest\">{league.name}</p>\n                </div>\n                 <div className=\"flex items-center gap-4\">\n                    <button\n                        onClick={() => dispatch({ type: 'SET_VIEW', payload: 'WEEKLY_RECAP_VIDEO' })}\n                        className=\"flex items-center gap-2 px-4 py-2 bg-purple-500/20 text-purple-300 rounded-lg text-sm hover:bg-purple-500/30\"\n                    >\n                        <FilmIcon /> Generate AI Recap Video\n                    </button>\n                    <div className=\"flex items-center gap-2\">\n                        <button onClick={() => setSelectedWeek(w => w - 1)} disabled={selectedWeek <= 1} className=\"px-3 py-1 bg-white/10 rounded-lg text-sm hover:bg-white/20 disabled:opacity-50\">\n                            &lt;\n                        </button>\n                        <span className=\"font-bold w-24 text-center\">Week {selectedWeek}</span>\n                        <button onClick={() => setSelectedWeek(w => w + 1)} disabled={selectedWeek >= maxWeek} className=\"px-3 py-1 bg-white/10 rounded-lg text-sm hover:bg-white/20 disabled:opacity-50\">\n                            &gt;\n                        </button>\n                    </div>\n                    <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'TEAM_HUB' })} className=\"px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20\">\n                        Back to Team\n                    </button>\n                </div>\n            </header>\n            <main className=\"flex-grow glass-pane rounded-2xl\">\n                 <motion.div\n                    key={selectedWeek}\n                    {...{\n                        initial: { opacity: 0 },\n                        animate: { opacity: 1 },\n                        transition: { duration: 0.5 },\n                    }}\n                >\n                    {(() => {\n                        if (isLoading) {\n                            return <div className=\"p-6\"><LoadingSpinner text=\"Compiling the weekly report...\" /></div>;\n                        }\n                        if (error) {\n                            return <ErrorDisplay message={error} onRetry={handleRetry} />;\n                        }\n                        if (report) {\n                            return <WeeklyReportDisplay report={report} />;\n                        }\n                        return <div className=\"p-6 text-center text-gray-400\">No report available for this week.</div>;\n                    })()}\n                </motion.div>\n            </main>\n        </div>\n    );\n};\n\nexport const WeeklyReportView: React.FC = () => {\n    const { dispatch } = useAppState();\n    const { league } = useLeague();\n    \n    if (!league) {\n        return (\n            <div className=\"p-8 text-center w-full h-full flex flex-col items-center justify-center\">\n                <p>Please select a league to view reports.</p>\n                 <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} className=\"mt-4 px-4 py-2 bg-cyan-500 rounded\">\n                    Back to Dashboard\n                </button>\n            </div>\n        );\n    }\n    \n    return <WeeklyReportContent league={league} dispatch={dispatch} />;\n};\n\nexport default WeeklyReportView;"],"names":["WeeklyReportDisplay","report","jsxDEV","this","ZapIcon","FlameIcon","TrophyIcon","FilmIcon","className","WeeklyReportContent","league","dispatch","setReport","React","isLoading","setIsLoading","error","setError","selectedWeek","setSelectedWeek","retryCount","setRetryCount","maxWeek","fetchReport","reportData","powerPlayData","generateWeeklyReport","generateWeeklyPowerPlay","err","handleRetry","c","w","motion","LoadingSpinner","ErrorDisplay","WeeklyReportView","useAppState","useLeague"],"mappings":"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"}