{"version":3,"file":"RealTimeAnalyticsView-C97TkA4l.js","sources":["../../node_modules/lucide-react/dist/esm/icons/lightbulb.js","../../node_modules/recharts/es6/state/selectors/areaSelectors.js","../../node_modules/recharts/es6/cartesian/Area.js","../../node_modules/recharts/es6/chart/ComposedChart.js","../../services/dataPersistenceService.ts","../../services/enhancedAnalyticsService.ts","../../components/analytics/RealTimeAnalyticsDashboard.tsx","../../views/RealTimeAnalyticsView.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.535.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5\",\n      key: \"1gvzjb\"\n    }\n  ],\n  [\"path\", { d: \"M9 18h6\", key: \"x1upvd\" }],\n  [\"path\", { d: \"M10 22h4\", key: \"ceow96\" }]\n];\nconst Lightbulb = createLucideIcon(\"lightbulb\", __iconNode);\n\nexport { __iconNode, Lightbulb as default };\n//# sourceMappingURL=lightbulb.js.map\n","import { createSelector } from 'reselect';\nimport { computeArea } from '../../cartesian/Area';\nimport { selectAxisWithScale, selectStackGroups, selectTicksOfGraphicalItem, selectUnfilteredCartesianItems } from './axisSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { selectChartDataWithIndexesIfNotInPanorama } from './dataSelectors';\nimport { getBandSizeOfAxis, isCategoricalAxis } from '../../util/ChartUtils';\nimport { getStackSeriesIdentifier } from '../../util/stacks/getStackSeriesIdentifier';\nvar selectXAxisWithScale = (state, xAxisId, _yAxisId, isPanorama) => selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama);\nvar selectXAxisTicks = (state, xAxisId, _yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'xAxis', xAxisId, isPanorama);\nvar selectYAxisWithScale = (state, _xAxisId, yAxisId, isPanorama) => selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama);\nvar selectYAxisTicks = (state, _xAxisId, yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'yAxis', yAxisId, isPanorama);\nvar selectBandSize = createSelector([selectChartLayout, selectXAxisWithScale, selectYAxisWithScale, selectXAxisTicks, selectYAxisTicks], (layout, xAxis, yAxis, xAxisTicks, yAxisTicks) => {\n  if (isCategoricalAxis(layout, 'xAxis')) {\n    return getBandSizeOfAxis(xAxis, xAxisTicks, false);\n  }\n  return getBandSizeOfAxis(yAxis, yAxisTicks, false);\n});\nvar pickAreaId = (_state, _xAxisId, _yAxisId, _isPanorama, id) => id;\n\n/*\n * There is a race condition problem because we read some data from props and some from the state.\n * The state is updated through a dispatch and is one render behind,\n * and so we have this weird one tick render where the displayedData in one selector have the old dataKey\n * but the new dataKey in another selector.\n *\n * A proper fix is to either move everything into the state, or read the dataKey always from props\n * - but this is a smaller change.\n */\nvar selectSynchronisedAreaSettings = createSelector([selectUnfilteredCartesianItems, pickAreaId], (graphicalItems, id) => graphicalItems.filter(item => item.type === 'area').find(item => item.id === id));\nexport var selectGraphicalItemStackedData = (state, xAxisId, yAxisId, isPanorama, id) => {\n  var _stackGroups$stackId;\n  var areaSettings = selectSynchronisedAreaSettings(state, xAxisId, yAxisId, isPanorama, id);\n  if (areaSettings == null) {\n    return undefined;\n  }\n  var layout = selectChartLayout(state);\n  var isXAxisCategorical = isCategoricalAxis(layout, 'xAxis');\n  var stackGroups;\n  if (isXAxisCategorical) {\n    stackGroups = selectStackGroups(state, 'yAxis', yAxisId, isPanorama);\n  } else {\n    stackGroups = selectStackGroups(state, 'xAxis', xAxisId, isPanorama);\n  }\n  if (stackGroups == null) {\n    return undefined;\n  }\n  var {\n    stackId\n  } = areaSettings;\n  var stackSeriesIdentifier = getStackSeriesIdentifier(areaSettings);\n  if (stackId == null || stackSeriesIdentifier == null) {\n    return undefined;\n  }\n  var groups = (_stackGroups$stackId = stackGroups[stackId]) === null || _stackGroups$stackId === void 0 ? void 0 : _stackGroups$stackId.stackedData;\n  return groups === null || groups === void 0 ? void 0 : groups.find(v => v.key === stackSeriesIdentifier);\n};\nexport var selectArea = createSelector([selectChartLayout, selectXAxisWithScale, selectYAxisWithScale, selectXAxisTicks, selectYAxisTicks, selectGraphicalItemStackedData, selectChartDataWithIndexesIfNotInPanorama, selectBandSize, selectSynchronisedAreaSettings], (layout, xAxis, yAxis, xAxisTicks, yAxisTicks, stackedData, _ref, bandSize, areaSettings) => {\n  var {\n    chartData,\n    dataStartIndex,\n    dataEndIndex\n  } = _ref;\n  if (areaSettings == null || layout !== 'horizontal' && layout !== 'vertical' || xAxis == null || yAxis == null || xAxisTicks == null || yAxisTicks == null || xAxisTicks.length === 0 || yAxisTicks.length === 0 || bandSize == null) {\n    return undefined;\n  }\n  var {\n    data\n  } = areaSettings;\n  var displayedData;\n  if (data && data.length > 0) {\n    displayedData = data;\n  } else {\n    displayedData = chartData === null || chartData === void 0 ? void 0 : chartData.slice(dataStartIndex, dataEndIndex + 1);\n  }\n  if (displayedData == null) {\n    return undefined;\n  }\n\n  // Where is this supposed to come from? No charts have that as a prop.\n  var chartBaseValue = undefined;\n  return computeArea({\n    layout,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    dataStartIndex,\n    areaSettings,\n    stackedData,\n    displayedData,\n    chartBaseValue,\n    bandSize\n  });\n});","var _excluded = [\"id\"],\n  _excluded2 = [\"activeDot\", \"animationBegin\", \"animationDuration\", \"animationEasing\", \"connectNulls\", \"dot\", \"fill\", \"fillOpacity\", \"hide\", \"isAnimationActive\", \"legendType\", \"stroke\", \"xAxisId\", \"yAxisId\"];\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from 'react';\nimport { PureComponent, useCallback, useRef, useState } from 'react';\nimport { clsx } from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Dot } from '../shape/Dot';\nimport { Layer } from '../container/Layer';\nimport { LabelList } from '../component/LabelList';\nimport { Global } from '../util/Global';\nimport { interpolate, isNan, isNullish, isNumber } from '../util/DataUtils';\nimport { getCateCoordinateOfLine, getNormalizedStackId, getTooltipNameProp, getValueByDataKey } from '../util/ChartUtils';\nimport { filterProps, isClipDot } from '../util/ReactUtils';\nimport { ActivePoints } from '../component/ActivePoints';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { GraphicalItemClipPath, useNeedsClip } from './GraphicalItemClipPath';\nimport { selectArea } from '../state/selectors/areaSelectors';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { useChartLayout } from '../context/chartLayoutContext';\nimport { useChartName } from '../state/selectors/selectors';\nimport { SetLegendPayload } from '../state/SetLegendPayload';\nimport { useAppSelector } from '../state/hooks';\nimport { useAnimationId } from '../util/useAnimationId';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { isWellBehavedNumber } from '../util/isWellBehavedNumber';\nimport { usePlotArea } from '../hooks';\nimport { RegisterGraphicalItemId } from '../context/RegisterGraphicalItemId';\nimport { SetCartesianGraphicalItem } from '../state/SetGraphicalItem';\nimport { svgPropertiesNoEvents } from '../util/svgPropertiesNoEvents';\nimport { JavascriptAnimate } from '../animation/JavascriptAnimate';\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */\n\n/**\n * External props, intended for end users to fill in\n */\n\n/**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */\n\nfunction getLegendItemColor(stroke, fill) {\n  return stroke && stroke !== 'none' ? stroke : fill;\n}\nvar computeLegendPayloadFromAreaData = props => {\n  var {\n    dataKey,\n    name,\n    stroke,\n    fill,\n    legendType,\n    hide\n  } = props;\n  return [{\n    inactive: hide,\n    dataKey,\n    type: legendType,\n    color: getLegendItemColor(stroke, fill),\n    value: getTooltipNameProp(name, dataKey),\n    payload: props\n  }];\n};\nfunction getTooltipEntrySettings(props) {\n  var {\n    dataKey,\n    data,\n    stroke,\n    strokeWidth,\n    fill,\n    name,\n    hide,\n    unit\n  } = props;\n  return {\n    dataDefinedOnItem: data,\n    positions: undefined,\n    settings: {\n      stroke,\n      strokeWidth,\n      fill,\n      dataKey,\n      nameKey: undefined,\n      name: getTooltipNameProp(name, dataKey),\n      hide,\n      type: props.tooltipType,\n      color: getLegendItemColor(stroke, fill),\n      unit\n    }\n  };\n}\nvar renderDotItem = (option, props) => {\n  var dotItem;\n  if (/*#__PURE__*/React.isValidElement(option)) {\n    dotItem = /*#__PURE__*/React.cloneElement(option, props);\n  } else if (typeof option === 'function') {\n    dotItem = option(props);\n  } else {\n    var className = clsx('recharts-area-dot', typeof option !== 'boolean' ? option.className : '');\n    dotItem = /*#__PURE__*/React.createElement(Dot, _extends({}, props, {\n      className: className\n    }));\n  }\n  return dotItem;\n};\nfunction shouldRenderDots(points, dot) {\n  if (points == null) {\n    return false;\n  }\n  if (dot) {\n    return true;\n  }\n  return points.length === 1;\n}\nfunction Dots(_ref) {\n  var {\n    clipPathId,\n    points,\n    props\n  } = _ref;\n  var {\n    needClip,\n    dot,\n    dataKey\n  } = props;\n  if (!shouldRenderDots(points, dot)) {\n    return null;\n  }\n  var clipDot = isClipDot(dot);\n  var areaProps = svgPropertiesNoEvents(props);\n  var customDotProps = filterProps(dot, true);\n  var dots = points.map((entry, i) => {\n    var dotProps = _objectSpread(_objectSpread(_objectSpread({\n      key: \"dot-\".concat(i),\n      r: 3\n    }, areaProps), customDotProps), {}, {\n      index: i,\n      cx: entry.x,\n      cy: entry.y,\n      dataKey,\n      value: entry.value,\n      payload: entry.payload,\n      points\n    });\n    return renderDotItem(dot, dotProps);\n  });\n  var dotsProps = {\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : undefined\n  };\n  return /*#__PURE__*/React.createElement(Layer, _extends({\n    className: \"recharts-area-dots\"\n  }, dotsProps), dots);\n}\nfunction StaticArea(_ref2) {\n  var {\n    points,\n    baseLine,\n    needClip,\n    clipPathId,\n    props,\n    showLabels\n  } = _ref2;\n  var {\n    layout,\n    type,\n    stroke,\n    connectNulls,\n    isRange\n  } = props;\n  var {\n      id\n    } = props,\n    propsWithoutId = _objectWithoutProperties(props, _excluded);\n  var allOtherProps = svgPropertiesNoEvents(propsWithoutId);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/React.createElement(Layer, {\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : undefined\n  }, /*#__PURE__*/React.createElement(Curve, _extends({}, allOtherProps, {\n    id: id,\n    points: points,\n    connectNulls: connectNulls,\n    type: type,\n    baseLine: baseLine,\n    layout: layout,\n    stroke: \"none\",\n    className: \"recharts-area-area\"\n  })), stroke !== 'none' && /*#__PURE__*/React.createElement(Curve, _extends({}, allOtherProps, {\n    className: \"recharts-area-curve\",\n    layout: layout,\n    type: type,\n    connectNulls: connectNulls,\n    fill: \"none\",\n    points: points\n  })), stroke !== 'none' && isRange && /*#__PURE__*/React.createElement(Curve, _extends({}, allOtherProps, {\n    className: \"recharts-area-curve\",\n    layout: layout,\n    type: type,\n    connectNulls: connectNulls,\n    fill: \"none\",\n    points: baseLine\n  }))), /*#__PURE__*/React.createElement(Dots, {\n    points: points,\n    props: propsWithoutId,\n    clipPathId: clipPathId\n  }), showLabels && LabelList.renderCallByParent(propsWithoutId, points));\n}\nfunction VerticalRect(_ref3) {\n  var {\n    alpha,\n    baseLine,\n    points,\n    strokeWidth\n  } = _ref3;\n  var startY = points[0].y;\n  var endY = points[points.length - 1].y;\n  if (!isWellBehavedNumber(startY) || !isWellBehavedNumber(endY)) {\n    return null;\n  }\n  var height = alpha * Math.abs(startY - endY);\n  var maxX = Math.max(...points.map(entry => entry.x || 0));\n  if (isNumber(baseLine)) {\n    maxX = Math.max(baseLine, maxX);\n  } else if (baseLine && Array.isArray(baseLine) && baseLine.length) {\n    maxX = Math.max(...baseLine.map(entry => entry.x || 0), maxX);\n  }\n  if (isNumber(maxX)) {\n    return /*#__PURE__*/React.createElement(\"rect\", {\n      x: 0,\n      y: startY < endY ? startY : startY - height,\n      width: maxX + (strokeWidth ? parseInt(\"\".concat(strokeWidth), 10) : 1),\n      height: Math.floor(height)\n    });\n  }\n  return null;\n}\nfunction HorizontalRect(_ref4) {\n  var {\n    alpha,\n    baseLine,\n    points,\n    strokeWidth\n  } = _ref4;\n  var startX = points[0].x;\n  var endX = points[points.length - 1].x;\n  if (!isWellBehavedNumber(startX) || !isWellBehavedNumber(endX)) {\n    return null;\n  }\n  var width = alpha * Math.abs(startX - endX);\n  var maxY = Math.max(...points.map(entry => entry.y || 0));\n  if (isNumber(baseLine)) {\n    maxY = Math.max(baseLine, maxY);\n  } else if (baseLine && Array.isArray(baseLine) && baseLine.length) {\n    maxY = Math.max(...baseLine.map(entry => entry.y || 0), maxY);\n  }\n  if (isNumber(maxY)) {\n    return /*#__PURE__*/React.createElement(\"rect\", {\n      x: startX < endX ? startX : startX - width,\n      y: 0,\n      width: width,\n      height: Math.floor(maxY + (strokeWidth ? parseInt(\"\".concat(strokeWidth), 10) : 1))\n    });\n  }\n  return null;\n}\nfunction ClipRect(_ref5) {\n  var {\n    alpha,\n    layout,\n    points,\n    baseLine,\n    strokeWidth\n  } = _ref5;\n  if (layout === 'vertical') {\n    return /*#__PURE__*/React.createElement(VerticalRect, {\n      alpha: alpha,\n      points: points,\n      baseLine: baseLine,\n      strokeWidth: strokeWidth\n    });\n  }\n  return /*#__PURE__*/React.createElement(HorizontalRect, {\n    alpha: alpha,\n    points: points,\n    baseLine: baseLine,\n    strokeWidth: strokeWidth\n  });\n}\nfunction AreaWithAnimation(_ref6) {\n  var {\n    needClip,\n    clipPathId,\n    props,\n    previousPointsRef,\n    previousBaselineRef\n  } = _ref6;\n  var {\n    points,\n    baseLine,\n    isAnimationActive,\n    animationBegin,\n    animationDuration,\n    animationEasing,\n    onAnimationStart,\n    onAnimationEnd\n  } = props;\n  var animationId = useAnimationId(props, 'recharts-area-');\n  var [isAnimating, setIsAnimating] = useState(true);\n  var handleAnimationEnd = useCallback(() => {\n    if (typeof onAnimationEnd === 'function') {\n      onAnimationEnd();\n    }\n    setIsAnimating(false);\n  }, [onAnimationEnd]);\n  var handleAnimationStart = useCallback(() => {\n    if (typeof onAnimationStart === 'function') {\n      onAnimationStart();\n    }\n    setIsAnimating(true);\n  }, [onAnimationStart]);\n  var prevPoints = previousPointsRef.current;\n  var prevBaseLine = previousBaselineRef.current;\n  return /*#__PURE__*/React.createElement(JavascriptAnimate, {\n    begin: animationBegin,\n    duration: animationDuration,\n    isActive: isAnimationActive,\n    easing: animationEasing,\n    onAnimationEnd: handleAnimationEnd,\n    onAnimationStart: handleAnimationStart,\n    key: animationId\n  }, t => {\n    if (prevPoints) {\n      var prevPointsDiffFactor = prevPoints.length / points.length;\n      var stepPoints =\n      /*\n       * Here it is important that at the very end of the animation, on the last frame,\n       * we render the original points without any interpolation.\n       * This is needed because the code above is checking for reference equality to decide if the animation should run\n       * and if we create a new array instance (even if the numbers were the same)\n       * then we would break animations.\n       */\n      t === 1 ? points : points.map((entry, index) => {\n        var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n        if (prevPoints[prevPointIndex]) {\n          var prev = prevPoints[prevPointIndex];\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(prev.x, entry.x, t),\n            y: interpolate(prev.y, entry.y, t)\n          });\n        }\n        return entry;\n      });\n      var stepBaseLine;\n      if (isNumber(baseLine)) {\n        stepBaseLine = interpolate(prevBaseLine, baseLine, t);\n      } else if (isNullish(baseLine) || isNan(baseLine)) {\n        stepBaseLine = interpolate(prevBaseLine, 0, t);\n      } else {\n        stepBaseLine = baseLine.map((entry, index) => {\n          var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n          if (Array.isArray(prevBaseLine) && prevBaseLine[prevPointIndex]) {\n            var prev = prevBaseLine[prevPointIndex];\n            return _objectSpread(_objectSpread({}, entry), {}, {\n              x: interpolate(prev.x, entry.x, t),\n              y: interpolate(prev.y, entry.y, t)\n            });\n          }\n          return entry;\n        });\n      }\n      if (t > 0) {\n        /*\n         * We need to keep the refs in the parent component because we need to remember the last shape of the animation\n         * even if AreaWithAnimation is unmounted as that happens when changing props.\n         *\n         * And we need to update the refs here because here is where the interpolation is computed.\n         * Eslint doesn't like changing function arguments, but we need it so here is an eslint-disable.\n         */\n        // eslint-disable-next-line no-param-reassign\n        previousPointsRef.current = stepPoints;\n        // eslint-disable-next-line no-param-reassign\n        previousBaselineRef.current = stepBaseLine;\n      }\n      return /*#__PURE__*/React.createElement(StaticArea, {\n        points: stepPoints,\n        baseLine: stepBaseLine,\n        needClip: needClip,\n        clipPathId: clipPathId,\n        props: props,\n        showLabels: !isAnimating\n      });\n    }\n    if (t > 0) {\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = points;\n      // eslint-disable-next-line no-param-reassign\n      previousBaselineRef.current = baseLine;\n    }\n    return /*#__PURE__*/React.createElement(Layer, null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: \"animationClipPath-\".concat(clipPathId)\n    }, /*#__PURE__*/React.createElement(ClipRect, {\n      alpha: t,\n      points: points,\n      baseLine: baseLine,\n      layout: props.layout,\n      strokeWidth: props.strokeWidth\n    }))), /*#__PURE__*/React.createElement(Layer, {\n      clipPath: \"url(#animationClipPath-\".concat(clipPathId, \")\")\n    }, /*#__PURE__*/React.createElement(StaticArea, {\n      points: points,\n      baseLine: baseLine,\n      needClip: needClip,\n      clipPathId: clipPathId,\n      props: props,\n      showLabels: true\n    })));\n  });\n}\n\n/*\n * This components decides if the area should be animated or not.\n * It also holds the state of the animation.\n */\nfunction RenderArea(_ref7) {\n  var {\n    needClip,\n    clipPathId,\n    props\n  } = _ref7;\n  var {\n    points,\n    baseLine,\n    isAnimationActive\n  } = props;\n\n  /*\n   * These two must be refs, not state!\n   * Because we want to store the most recent shape of the animation in case we have to interrupt the animation;\n   * that happens when user initiates another animation before the current one finishes.\n   *\n   * If this was a useState, then every step in the animation would trigger a re-render.\n   * So, useRef it is.\n   */\n  var previousPointsRef = useRef(null);\n  var previousBaselineRef = useRef();\n  var prevPoints = previousPointsRef.current;\n  var prevBaseLine = previousBaselineRef.current;\n  if (isAnimationActive &&\n  /*\n   * Here it's important that we unmount of AreaWithAnimation in case points are undefined\n   * - this will make sure to interrupt the animation if it's running.\n   * We still get to keep the last shape of the animation in the refs above.\n   */\n  points && points.length && (prevPoints !== points || prevBaseLine !== baseLine)) {\n    return /*#__PURE__*/React.createElement(AreaWithAnimation, {\n      needClip: needClip,\n      clipPathId: clipPathId,\n      props: props,\n      previousPointsRef: previousPointsRef,\n      previousBaselineRef: previousBaselineRef\n    });\n  }\n  return /*#__PURE__*/React.createElement(StaticArea, {\n    points: points,\n    baseLine: baseLine,\n    needClip: needClip,\n    clipPathId: clipPathId,\n    props: props,\n    showLabels: true\n  });\n}\nclass AreaWithState extends PureComponent {\n  render() {\n    var _filterProps;\n    var {\n      hide,\n      dot,\n      points,\n      className,\n      top,\n      left,\n      needClip,\n      xAxisId,\n      yAxisId,\n      width,\n      height,\n      id,\n      baseLine\n    } = this.props;\n    if (hide) {\n      return null;\n    }\n    var layerClass = clsx('recharts-area', className);\n    var clipPathId = id;\n    var {\n      r = 3,\n      strokeWidth = 2\n    } = (_filterProps = filterProps(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n      r: 3,\n      strokeWidth: 2\n    };\n    var clipDot = isClipDot(dot);\n    var dotSize = r * 2 + strokeWidth;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {\n      className: layerClass\n    }, needClip && /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(GraphicalItemClipPath, {\n      clipPathId: clipPathId,\n      xAxisId: xAxisId,\n      yAxisId: yAxisId\n    }), !clipDot && /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: \"clipPath-dots-\".concat(clipPathId)\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: left - dotSize / 2,\n      y: top - dotSize / 2,\n      width: width + dotSize,\n      height: height + dotSize\n    }))), /*#__PURE__*/React.createElement(RenderArea, {\n      needClip: needClip,\n      clipPathId: clipPathId,\n      props: this.props\n    })), /*#__PURE__*/React.createElement(ActivePoints, {\n      points: points,\n      mainColor: getLegendItemColor(this.props.stroke, this.props.fill),\n      itemDataKey: this.props.dataKey,\n      activeDot: this.props.activeDot\n    }), this.props.isRange && Array.isArray(baseLine) && /*#__PURE__*/React.createElement(ActivePoints, {\n      points: baseLine,\n      mainColor: getLegendItemColor(this.props.stroke, this.props.fill),\n      itemDataKey: this.props.dataKey,\n      activeDot: this.props.activeDot\n    }));\n  }\n}\nvar defaultAreaProps = {\n  activeDot: true,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  connectNulls: false,\n  dot: false,\n  fill: '#3182bd',\n  fillOpacity: 0.6,\n  hide: false,\n  isAnimationActive: !Global.isSsr,\n  legendType: 'line',\n  stroke: '#3182bd',\n  xAxisId: 0,\n  yAxisId: 0\n};\nfunction AreaImpl(props) {\n  var _useAppSelector;\n  var _resolveDefaultProps = resolveDefaultProps(props, defaultAreaProps),\n    {\n      activeDot,\n      animationBegin,\n      animationDuration,\n      animationEasing,\n      connectNulls,\n      dot,\n      fill,\n      fillOpacity,\n      hide,\n      isAnimationActive,\n      legendType,\n      stroke,\n      xAxisId,\n      yAxisId\n    } = _resolveDefaultProps,\n    everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded2);\n  var layout = useChartLayout();\n  var chartName = useChartName();\n  var {\n    needClip\n  } = useNeedsClip(xAxisId, yAxisId);\n  var isPanorama = useIsPanorama();\n  var {\n    points,\n    isRange,\n    baseLine\n  } = (_useAppSelector = useAppSelector(state => selectArea(state, xAxisId, yAxisId, isPanorama, props.id))) !== null && _useAppSelector !== void 0 ? _useAppSelector : {};\n  var plotArea = usePlotArea();\n  if (layout !== 'horizontal' && layout !== 'vertical' || plotArea == null) {\n    // Can't render Area in an unsupported layout\n    return null;\n  }\n  if (chartName !== 'AreaChart' && chartName !== 'ComposedChart') {\n    // There is nothing stopping us from rendering Area in other charts, except for historical reasons. Do we want to allow that?\n    return null;\n  }\n  var {\n    height,\n    width,\n    x: left,\n    y: top\n  } = plotArea;\n  if (!points || !points.length) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(AreaWithState, _extends({}, everythingElse, {\n    activeDot: activeDot,\n    animationBegin: animationBegin,\n    animationDuration: animationDuration,\n    animationEasing: animationEasing,\n    baseLine: baseLine,\n    connectNulls: connectNulls,\n    dot: dot,\n    fill: fill,\n    fillOpacity: fillOpacity,\n    height: height,\n    hide: hide,\n    layout: layout,\n    isAnimationActive: isAnimationActive,\n    isRange: isRange,\n    legendType: legendType,\n    needClip: needClip,\n    points: points,\n    stroke: stroke,\n    width: width,\n    left: left,\n    top: top,\n    xAxisId: xAxisId,\n    yAxisId: yAxisId\n  }));\n}\nexport var getBaseValue = (layout, chartBaseValue, itemBaseValue, xAxis, yAxis) => {\n  // The baseValue can be defined both on the AreaChart, and on the Area.\n  // The value for the item takes precedence.\n  var baseValue = itemBaseValue !== null && itemBaseValue !== void 0 ? itemBaseValue : chartBaseValue;\n  if (isNumber(baseValue)) {\n    return baseValue;\n  }\n  var numericAxis = layout === 'horizontal' ? yAxis : xAxis;\n  // @ts-expect-error d3scale .domain() returns unknown, Math.max expects number\n  var domain = numericAxis.scale.domain();\n  if (numericAxis.type === 'number') {\n    var domainMax = Math.max(domain[0], domain[1]);\n    var domainMin = Math.min(domain[0], domain[1]);\n    if (baseValue === 'dataMin') {\n      return domainMin;\n    }\n    if (baseValue === 'dataMax') {\n      return domainMax;\n    }\n    return domainMax < 0 ? domainMax : Math.max(Math.min(domain[0], domain[1]), 0);\n  }\n  if (baseValue === 'dataMin') {\n    return domain[0];\n  }\n  if (baseValue === 'dataMax') {\n    return domain[1];\n  }\n  return domain[0];\n};\nexport function computeArea(_ref8) {\n  var {\n    areaSettings: {\n      connectNulls,\n      baseValue: itemBaseValue,\n      dataKey\n    },\n    stackedData,\n    layout,\n    chartBaseValue,\n    xAxis,\n    yAxis,\n    displayedData,\n    dataStartIndex,\n    xAxisTicks,\n    yAxisTicks,\n    bandSize\n  } = _ref8;\n  var hasStack = stackedData && stackedData.length;\n  var baseValue = getBaseValue(layout, chartBaseValue, itemBaseValue, xAxis, yAxis);\n  var isHorizontalLayout = layout === 'horizontal';\n  var isRange = false;\n  var points = displayedData.map((entry, index) => {\n    var value;\n    if (hasStack) {\n      value = stackedData[dataStartIndex + index];\n    } else {\n      value = getValueByDataKey(entry, dataKey);\n      if (!Array.isArray(value)) {\n        value = [baseValue, value];\n      } else {\n        isRange = true;\n      }\n    }\n    var isBreakPoint = value[1] == null || hasStack && !connectNulls && getValueByDataKey(entry, dataKey) == null;\n    if (isHorizontalLayout) {\n      return {\n        // @ts-expect-error getCateCoordinateOfLine expects chart data to be an object, we allow unknown\n        x: getCateCoordinateOfLine({\n          axis: xAxis,\n          ticks: xAxisTicks,\n          bandSize,\n          entry,\n          index\n        }),\n        y: isBreakPoint ? null : yAxis.scale(value[1]),\n        value,\n        payload: entry\n      };\n    }\n    return {\n      x: isBreakPoint ? null : xAxis.scale(value[1]),\n      // @ts-expect-error getCateCoordinateOfLine expects chart data to be an object, we allow unknown\n      y: getCateCoordinateOfLine({\n        axis: yAxis,\n        ticks: yAxisTicks,\n        bandSize,\n        entry,\n        index\n      }),\n      value,\n      payload: entry\n    };\n  });\n  var baseLine;\n  if (hasStack || isRange) {\n    baseLine = points.map(entry => {\n      var x = Array.isArray(entry.value) ? entry.value[0] : null;\n      if (isHorizontalLayout) {\n        return {\n          x: entry.x,\n          y: x != null && entry.y != null ? yAxis.scale(x) : null,\n          payload: entry.payload\n        };\n      }\n      return {\n        x: x != null ? xAxis.scale(x) : null,\n        y: entry.y,\n        payload: entry.payload\n      };\n    });\n  } else {\n    baseLine = isHorizontalLayout ? yAxis.scale(baseValue) : xAxis.scale(baseValue);\n  }\n  return {\n    points,\n    baseLine,\n    isRange\n  };\n}\nexport function Area(outsideProps) {\n  var props = resolveDefaultProps(outsideProps, defaultAreaProps);\n  var isPanorama = useIsPanorama();\n  // Report all props to Redux store first, before calling any hooks, to avoid circular dependencies.\n  return /*#__PURE__*/React.createElement(RegisterGraphicalItemId, {\n    id: props.id,\n    type: \"area\"\n  }, id => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SetLegendPayload, {\n    legendPayload: computeLegendPayloadFromAreaData(props)\n  }), /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n    fn: getTooltipEntrySettings,\n    args: props\n  }), /*#__PURE__*/React.createElement(SetCartesianGraphicalItem, {\n    type: \"area\",\n    id: id,\n    data: props.data,\n    dataKey: props.dataKey,\n    xAxisId: props.xAxisId,\n    yAxisId: props.yAxisId,\n    zAxisId: 0,\n    stackId: getNormalizedStackId(props.stackId),\n    hide: props.hide,\n    barSize: undefined,\n    baseValue: props.baseValue,\n    isPanorama: isPanorama,\n    connectNulls: props.connectNulls\n  }), /*#__PURE__*/React.createElement(AreaImpl, _extends({}, props, {\n    id: id\n  }))));\n}\nArea.displayName = 'Area';","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { arrayTooltipSearcher } from '../state/optionsSlice';\nimport { CartesianChart } from './CartesianChart';\nvar allowedTooltipTypes = ['axis'];\nexport var ComposedChart = /*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(CartesianChart, {\n    chartName: \"ComposedChart\",\n    defaultTooltipEventType: \"axis\",\n    validateTooltipEventTypes: allowedTooltipTypes,\n    tooltipPayloadSearcher: arrayTooltipSearcher,\n    categoricalChartProps: props,\n    ref: ref\n  });\n});","/**\n * Enhanced Data Persistence Service\n * Provides comprehensive data storage and synchronization for Astral Draft\n * Supports local SQLite storage with cloud sync capabilities\n */\n\nimport { authService } from './authService';\n\nexport interface DraftSession {\n  id: string;\n  leagueId: string;\n  userId: number;\n  draftType: 'snake' | 'auction' | 'keeper';\n  status: 'pending' | 'active' | 'completed' | 'abandoned';\n  settings: {\n    rounds: number;\n    timePerPick: number;\n    pickOrder: number[];\n    budget?: number;\n    keeperSlots?: number;\n  };\n  picks: DraftPick[];\n  participants: DraftParticipant[];\n  startTime?: string;\n  endTime?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface DraftPick {\n  id: string;\n  draftId: string;\n  round: number;\n  pick: number;\n  playerId: string;\n  playerName: string;\n  position: string;\n  team: string;\n  userId: number;\n  cost?: number;\n  timestamp: string;\n}\n\nexport interface DraftParticipant {\n  userId: number;\n  username: string;\n  pickOrder: number;\n  budget?: number;\n  roster: DraftPick[];\n  isOnline: boolean;\n}\n\nexport interface AnalyticsData {\n  id: string;\n  userId: number;\n  type: 'draft_performance' | 'oracle_accuracy' | 'league_stats' | 'player_analysis';\n  data: Record<string, any>;\n  week?: number;\n  season: number;\n  createdAt: string;\n}\n\nexport interface UserPreferences {\n  userId: number;\n  theme: 'light' | 'dark' | 'auto';\n  notifications: {\n    draftReminders: boolean;\n    oraclePredictions: boolean;\n    leagueUpdates: boolean;\n    mobileOnly: boolean;\n  };\n  dashboard: {\n    layout: string;\n    widgets: string[];\n    refreshInterval: number;\n  };\n  draft: {\n    autoQueue: boolean;\n    pickReminders: boolean;\n    defaultSort: string;\n    columns: string[];\n  };\n  oracle: {\n    showConfidence: boolean;\n    autoSubmit: boolean;\n    defaultStake: number;\n  };\n  updatedAt: string;\n}\n\nexport interface OraclePredictionHistory {\n  id: string;\n  userId: number;\n  predictionId: string;\n  question: string;\n  userChoice: number;\n  userConfidence: number;\n  oracleChoice: number;\n  oracleConfidence: number;\n  actualOutcome?: number;\n  points?: number;\n  week: number;\n  season: number;\n  submittedAt: string;\n  resolvedAt?: string;\n}\n\nexport interface SyncStatus {\n  lastSync: string;\n  pendingChanges: number;\n  conflicts: any[];\n  isOnline: boolean;\n}\n\nclass DataPersistenceService {\n  private db: IDBDatabase | null = null;\n  private isInitialized = false;\n  private readonly syncQueue: any[] = [];\n  private isOnline = navigator.onLine;\n  private syncInterval: NodeJS.Timeout | null = null;\n\n  constructor() {\n    this.setupOnlineListener();\n  }\n\n  /**\n   * Initialize the service (call this after construction)\n   */\n  async initialize(): Promise<void> {\n    try {\n      await this.initializeDB();\n    } catch (error) {\n      console.error('Failed to initialize data persistence:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize IndexedDB for local storage\n   */\n  private async initializeDB(): Promise<void> {\n    if (this.isInitialized) return;\n\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open('AstralDraftDB', 1);\n\n      request.onerror = () => {\n        console.error('Failed to open IndexedDB:', request.error);\n        reject(request.error);\n      };\n\n      request.onsuccess = () => {\n        this.db = request.result;\n        this.isInitialized = true;\n        console.log('✅ IndexedDB initialized successfully');\n        this.startSyncInterval();\n        resolve();\n      };\n\n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result;\n\n        // Draft Sessions store\n        if (!db.objectStoreNames.contains('draftSessions')) {\n          const draftStore = db.createObjectStore('draftSessions', { keyPath: 'id' });\n          draftStore.createIndex('userId', 'userId', { unique: false });\n          draftStore.createIndex('leagueId', 'leagueId', { unique: false });\n          draftStore.createIndex('status', 'status', { unique: false });\n        }\n\n        // Analytics store\n        if (!db.objectStoreNames.contains('analytics')) {\n          const analyticsStore = db.createObjectStore('analytics', { keyPath: 'id' });\n          analyticsStore.createIndex('userId', 'userId', { unique: false });\n          analyticsStore.createIndex('type', 'type', { unique: false });\n          analyticsStore.createIndex('season', 'season', { unique: false });\n        }\n\n        // User Preferences store\n        if (!db.objectStoreNames.contains('userPreferences')) {\n          db.createObjectStore('userPreferences', { keyPath: 'userId' });\n        }\n\n        // Oracle Predictions store\n        if (!db.objectStoreNames.contains('oraclePredictions')) {\n          const oracleStore = db.createObjectStore('oraclePredictions', { keyPath: 'id' });\n          oracleStore.createIndex('userId', 'userId', { unique: false });\n          oracleStore.createIndex('week', 'week', { unique: false });\n          oracleStore.createIndex('season', 'season', { unique: false });\n        }\n\n        // Sync Queue store\n        if (!db.objectStoreNames.contains('syncQueue')) {\n          const syncStore = db.createObjectStore('syncQueue', { keyPath: 'id', autoIncrement: true });\n          syncStore.createIndex('timestamp', 'timestamp', { unique: false });\n          syncStore.createIndex('priority', 'priority', { unique: false });\n        }\n\n        // Cache store\n        if (!db.objectStoreNames.contains('cache')) {\n          const cacheStore = db.createObjectStore('cache', { keyPath: 'key' });\n          cacheStore.createIndex('expiry', 'expiry', { unique: false });\n        }\n      };\n    });\n  }\n\n  /**\n   * Setup online/offline listener\n   */\n  private setupOnlineListener(): void {\n    window.addEventListener('online', () => {\n      this.isOnline = true;\n      this.processSyncQueue();\n    });\n\n    window.addEventListener('offline', () => {\n      this.isOnline = false;\n    });\n  }\n\n  /**\n   * Start periodic sync interval\n   */\n  private startSyncInterval(): void {\n    if (this.syncInterval) return;\n    \n    this.syncInterval = setInterval(() => {\n      if (this.isOnline) {\n        this.processSyncQueue();\n      }\n    }, 30000); // Sync every 30 seconds\n  }\n\n  /**\n   * Generic store operation\n   */\n  private async performDBOperation<T>(\n    storeName: string,\n    operation: 'get' | 'put' | 'delete' | 'getAll' | 'index',\n    data?: any,\n    indexName?: string\n  ): Promise<T> {\n    if (!this.db) {\n      await this.initializeDB();\n    }\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db?.transaction([storeName], operation === 'get' || operation === 'getAll' || operation === 'index' ? 'readonly' : 'readwrite');\n      if (!transaction) {\n        reject(new Error('Database not available'));\n        return;\n      }\n      \n      const store = transaction.objectStore(storeName);\n\n      let request: IDBRequest;\n\n      switch (operation) {\n        case 'get':\n          request = store.get(data);\n          break;\n        case 'put':\n          request = store.put(data);\n          break;\n        case 'delete':\n          request = store.delete(data);\n          break;\n        case 'getAll':\n          request = store.getAll();\n          break;\n        case 'index': {\n          if (!indexName) {\n            reject(new Error('Index name required for index operation'));\n            return;\n          }\n          const index = store.index(indexName);\n          request = index.getAll(data);\n          break;\n        }\n        default:\n          reject(new Error(`Unknown operation: ${operation}`));\n          return;\n      }\n\n      request.onsuccess = () => resolve(request.result);\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  /**\n   * Save draft session\n   */\n  async saveDraftSession(draftSession: DraftSession): Promise<void> {\n    try {\n      draftSession.updatedAt = new Date().toISOString();\n      await this.performDBOperation('draftSessions', 'put', draftSession);\n      \n      // Queue for sync if online\n      if (this.isOnline) {\n        this.queueForSync('draftSessions', 'put', draftSession);\n      }\n    } catch (error) {\n      console.error('Failed to save draft session:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get draft session by ID\n   */\n  async getDraftSession(id: string): Promise<DraftSession | null> {\n    try {\n      const result = await this.performDBOperation<DraftSession>('draftSessions', 'get', id);\n      return result || null;\n    } catch (error) {\n      console.error('Failed to get draft session:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get all draft sessions for user\n   */\n  async getUserDraftSessions(userId: number): Promise<DraftSession[]> {\n    try {\n      const result = await this.performDBOperation<DraftSession[]>('draftSessions', 'index', userId, 'userId');\n      return result || [];\n    } catch (error) {\n      console.error('Failed to get user draft sessions:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Save analytics data\n   */\n  async saveAnalyticsData(analytics: AnalyticsData): Promise<void> {\n    try {\n      analytics.createdAt = new Date().toISOString();\n      await this.performDBOperation('analytics', 'put', analytics);\n      \n      if (this.isOnline) {\n        this.queueForSync('analytics', 'put', analytics);\n      }\n    } catch (error) {\n      console.error('Failed to save analytics data:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get analytics data by type\n   */\n  async getAnalyticsData(userId: number, type?: string): Promise<AnalyticsData[]> {\n    try {\n      let result: AnalyticsData[];\n      \n      if (type) {\n        // Get all analytics and filter by type\n        const allAnalytics = await this.performDBOperation<AnalyticsData[]>('analytics', 'index', userId, 'userId');\n        result = allAnalytics.filter(item => item.type === type);\n      } else {\n        result = await this.performDBOperation<AnalyticsData[]>('analytics', 'index', userId, 'userId');\n      }\n      \n      return result || [];\n    } catch (error) {\n      console.error('Failed to get analytics data:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Save user preferences\n   */\n  async saveUserPreferences(preferences: UserPreferences): Promise<void> {\n    try {\n      preferences.updatedAt = new Date().toISOString();\n      await this.performDBOperation('userPreferences', 'put', preferences);\n      \n      if (this.isOnline) {\n        this.queueForSync('userPreferences', 'put', preferences);\n      }\n    } catch (error) {\n      console.error('Failed to save user preferences:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get user preferences\n   */\n  async getUserPreferences(userId: number): Promise<UserPreferences | null> {\n    try {\n      const result = await this.performDBOperation<UserPreferences>('userPreferences', 'get', userId);\n      return result || this.getDefaultPreferences(userId);\n    } catch (error) {\n      console.error('Failed to get user preferences:', error);\n      return this.getDefaultPreferences(userId);\n    }\n  }\n\n  /**\n   * Get default user preferences\n   */\n  private getDefaultPreferences(userId: number): UserPreferences {\n    return {\n      userId,\n      theme: 'auto',\n      notifications: {\n        draftReminders: true,\n        oraclePredictions: true,\n        leagueUpdates: true,\n        mobileOnly: false\n      },\n      dashboard: {\n        layout: 'grid',\n        widgets: ['oracle', 'leagues', 'analytics', 'draft'],\n        refreshInterval: 300000 // 5 minutes\n      },\n      draft: {\n        autoQueue: false,\n        pickReminders: true,\n        defaultSort: 'rank',\n        columns: ['name', 'position', 'team', 'rank', 'projected']\n      },\n      oracle: {\n        showConfidence: true,\n        autoSubmit: false,\n        defaultStake: 5\n      },\n      updatedAt: new Date().toISOString()\n    };\n  }\n\n  /**\n   * Save Oracle prediction\n   */\n  async saveOraclePrediction(prediction: OraclePredictionHistory): Promise<void> {\n    try {\n      await this.performDBOperation('oraclePredictions', 'put', prediction);\n      \n      if (this.isOnline) {\n        this.queueForSync('oraclePredictions', 'put', prediction);\n      }\n    } catch (error) {\n      console.error('Failed to save Oracle prediction:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get Oracle predictions for user\n   */\n  async getOraclePredictions(userId: number, week?: number, season?: number): Promise<OraclePredictionHistory[]> {\n    try {\n      let result = await this.performDBOperation<OraclePredictionHistory[]>('oraclePredictions', 'index', userId, 'userId');\n      \n      if (week !== undefined) {\n        result = result.filter(p => p.week === week);\n      }\n      \n      if (season !== undefined) {\n        result = result.filter(p => p.season === season);\n      }\n      \n      return result || [];\n    } catch (error) {\n      console.error('Failed to get Oracle predictions:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Queue data for cloud sync\n   */\n  private async queueForSync(table: string, operation: string, data: any): Promise<void> {\n    const syncItem = {\n      table,\n      operation,\n      data,\n      timestamp: new Date().toISOString(),\n      priority: this.getSyncPriority(table),\n      retries: 0\n    };\n\n    this.syncQueue.push(syncItem);\n    await this.performDBOperation('syncQueue', 'put', syncItem);\n  }\n\n  /**\n   * Get sync priority for table\n   */\n  private getSyncPriority(table: string): number {\n    const priorities: Record<string, number> = {\n      'userPreferences': 1,\n      'oraclePredictions': 2,\n      'draftSessions': 3,\n      'analytics': 4\n    };\n    return priorities[table] || 5;\n  }\n\n  /**\n   * Process sync queue\n   */\n  private async processSyncQueue(): Promise<void> {\n    if (!this.isOnline || this.syncQueue.length === 0) return;\n\n    const sessionToken = authService.getSessionToken();\n    if (!sessionToken) return;\n\n    // Sort by priority and timestamp\n    this.syncQueue.sort((a, b) => {\n      if (a.priority !== b.priority) return a.priority - b.priority;\n      return new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime();\n    });\n\n    const itemsToSync = this.syncQueue.splice(0, 10); // Process 10 items at a time\n\n    for (const item of itemsToSync) {\n      try {\n        await this.syncToCloud(item, sessionToken);\n        // Remove from IndexedDB sync queue\n        await this.performDBOperation('syncQueue', 'delete', item.id);\n      } catch (error) {\n        console.error('Sync failed for item:', item, error);\n        item.retries += 1;\n        \n        // Retry up to 3 times\n        if (item.retries < 3) {\n          this.syncQueue.push(item);\n        } else {\n          console.error('Max retries reached for sync item:', item);\n          await this.performDBOperation('syncQueue', 'delete', item.id);\n        }\n      }\n    }\n  }\n\n  /**\n   * Sync item to cloud\n   */\n  private async syncToCloud(item: any, sessionToken: string): Promise<void> {\n    const baseUrl = (import.meta as any).env?.VITE_API_BASE_URL || 'http://localhost:3001';\n    \n    const response = await fetch(`${baseUrl}/api/sync/${item.table}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${sessionToken}`\n      },\n      body: JSON.stringify({\n        operation: item.operation,\n        data: item.data\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error(`Sync failed: ${response.statusText}`);\n    }\n  }\n\n  /**\n   * Cache data with expiry\n   */\n  async cacheData(key: string, data: any, ttl: number = 3600000): Promise<void> {\n    const cacheItem = {\n      key,\n      data,\n      expiry: new Date(Date.now() + ttl).toISOString()\n    };\n\n    await this.performDBOperation('cache', 'put', cacheItem);\n  }\n\n  /**\n   * Get cached data\n   */\n  async getCachedData<T>(key: string): Promise<T | null> {\n    try {\n      const cacheItem = await this.performDBOperation<any>('cache', 'get', key);\n      \n      if (!cacheItem) return null;\n      \n      // Check if expired\n      if (new Date(cacheItem.expiry) < new Date()) {\n        await this.performDBOperation('cache', 'delete', key);\n        return null;\n      }\n      \n      return cacheItem.data;\n    } catch (error) {\n      console.error('Failed to get cached data:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Clear expired cache entries\n   */\n  async clearExpiredCache(): Promise<void> {\n    try {\n      const allCache = await this.performDBOperation<any[]>('cache', 'getAll');\n      const now = new Date();\n      \n      for (const item of allCache) {\n        if (new Date(item.expiry) < now) {\n          await this.performDBOperation('cache', 'delete', item.key);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to clear expired cache:', error);\n    }\n  }\n\n  /**\n   * Export user data\n   */\n  async exportUserData(userId: number): Promise<any> {\n    try {\n      const [draftSessions, analytics, preferences, oraclePredictions] = await Promise.all([\n        this.getUserDraftSessions(userId),\n        this.getAnalyticsData(userId),\n        this.getUserPreferences(userId),\n        this.getOraclePredictions(userId)\n      ]);\n\n      return {\n        exportedAt: new Date().toISOString(),\n        userId,\n        data: {\n          draftSessions,\n          analytics,\n          preferences,\n          oraclePredictions\n        }\n      };\n    } catch (error) {\n      console.error('Failed to export user data:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get sync status\n   */\n  async getSyncStatus(): Promise<SyncStatus> {\n    const pendingChanges = this.syncQueue.length;\n    const queuedItems = await this.performDBOperation<any[]>('syncQueue', 'getAll');\n    \n    // Detect conflicts by checking for items with multiple retry attempts\n    const conflicts = queuedItems.filter(item => item.retries > 0);\n    \n    return {\n      lastSync: localStorage.getItem('lastSyncTime') || 'Never',\n      pendingChanges: pendingChanges + queuedItems.length,\n      conflicts: conflicts.map(item => ({\n        table: item.table,\n        operation: item.operation,\n        retries: item.retries,\n        data: item.data\n      })),\n      isOnline: this.isOnline\n    };\n  }\n\n  /**\n   * Force sync all data\n   */\n  async forceSyncAll(): Promise<void> {\n    if (!this.isOnline) {\n      throw new Error('Cannot sync while offline');\n    }\n\n    // Load all queued items\n    const queuedItems = await this.performDBOperation<any[]>('syncQueue', 'getAll');\n    this.syncQueue.push(...queuedItems);\n    \n    await this.processSyncQueue();\n    \n    localStorage.setItem('lastSyncTime', new Date().toISOString());\n  }\n\n  /**\n   * Cleanup old data\n   */\n  async cleanup(): Promise<void> {\n    const oneMonthAgo = new Date();\n    oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1);\n    const cutoffDate = oneMonthAgo.toISOString();\n\n    try {\n      // Clean up old analytics data\n      const allAnalytics = await this.performDBOperation<AnalyticsData[]>('analytics', 'getAll');\n      for (const item of allAnalytics) {\n        if (item.createdAt < cutoffDate) {\n          await this.performDBOperation('analytics', 'delete', item.id);\n        }\n      }\n\n      // Clear expired cache\n      await this.clearExpiredCache();\n      \n      console.log('✅ Data cleanup completed');\n    } catch (error) {\n      console.error('Failed to cleanup data:', error);\n    }\n  }\n\n  /**\n   * Destroy service and cleanup\n   */\n  destroy(): void {\n    if (this.syncInterval) {\n      clearInterval(this.syncInterval);\n    }\n    \n    if (this.db) {\n      this.db.close();\n    }\n  }\n}\n\n// Create and initialize the service instance\nconst createDataPersistenceService = async (): Promise<DataPersistenceService> => {\n  const service = new DataPersistenceService();\n  await service.initialize();\n  return service;\n};\n\n// Export a promise that resolves to the initialized service\nexport const dataPersistenceService = createDataPersistenceService().catch(error => {\n  console.error('Failed to create data persistence service:', error);\n  // Return a fallback service that logs errors\n  return new DataPersistenceService();\n});\n\nexport default dataPersistenceService;\n","/**\n * Enhanced Analytics Service\n * Comprehensive analytics processing and aggregation service for the dashboard\n */\n\nimport { oracleAnalyticsService, type OracleAnalytics as BaseOracleAnalytics, type OraclePerformanceMetrics } from './oracleAnalyticsService';\nimport { dataPersistenceService, type AnalyticsData } from './dataPersistenceService';\nimport { authService } from './authService';\n\n// Extended interface with additional properties for real-time analytics\nexport interface ExtendedOracleAnalytics extends BaseOracleAnalytics {\n    activePredictions?: number;\n    averageConfidence?: number;\n}\n\ninterface AccuracyTrend {\n    week: number;\n    accuracy: number;\n    totalPredictions: number;\n    userWins: number;\n}\n\ninterface PredictionTypeStats {\n    type: string;\n    accuracy: number;\n    totalPredictions: number;\n    avgConfidence: number;\n    userSuccessRate: number;\n}\n\ninterface UserInsight {\n    type: 'SUCCESS_PATTERN' | 'IMPROVEMENT_AREA' | 'STREAK_POTENTIAL' | 'RECOMMENDATION';\n    title: string;\n    description: string;\n    data?: any;\n}\n\ntype ImpactLevel = 'high' | 'medium' | 'low';\ntype InsightType = 'opportunity' | 'warning' | 'achievement' | 'trend';\ntype TrendDirection = 'up' | 'down' | 'stable';\n\nexport interface RealTimeMetrics {\n  timestamp: string;\n  accuracy: {\n    current: number;\n    change24h: number;\n    trend: TrendDirection;\n    predictions: Array<{\n      id: string;\n      timestamp: string;\n      accuracy: number;\n      confidence: number;\n      type: string;\n    }>;\n  };\n  predictions: {\n    total: number;\n    active: number;\n    resolved: number;\n    avgConfidence: number;\n    successRate: number;\n  };\n  users: {\n    active: number;\n    newToday: number;\n    totalPredictions: number;\n    beatOracleRate: number;\n  };\n  performance: {\n    responseTime: number;\n    uptime: number;\n    errorRate: number;\n    throughput: number;\n  };\n  insights: Array<{\n    id: string;\n    type: InsightType;\n    title: string;\n    description: string;\n    confidence: number;\n    impact: ImpactLevel;\n    actionable: boolean;\n  }>;\n}\n\nexport interface EnhancedAnalyticsMetrics {\n  accuracy: {\n    overall: number;\n    trend: number;\n    byCategory: Record<string, number>;\n    weeklyConsistency: number;\n  };\n  performance: {\n    userWinRate: number;\n    confidenceCorrelation: number;\n    calibrationScore: number;\n    improvementRate: number;\n  };\n  engagement: {\n    totalPredictions: number;\n    averageConfidence: number;\n    mostActiveCategory: string;\n    streakData: {\n      current: number;\n      best: number;\n    };\n  };\n  comparative: {\n    userPercentile: number;\n    aboveAverage: number;\n    topPerformerGap: number;\n  };\n}\n\nexport interface PredictiveInsight {\n  id: string;\n  type: 'trend' | 'optimization' | 'alert' | 'opportunity';\n  title: string;\n  description: string;\n  confidence: number;\n  impact: ImpactLevel;\n  timeframe: string;\n  actionable: boolean;\n  recommendations: string[];\n  data?: any;\n}\n\nexport interface AnalyticsReport {\n  timestamp: string;\n  timeRange: {\n    start: string;\n    end: string;\n    days: number;\n  };\n  metrics: EnhancedAnalyticsMetrics;\n  insights: PredictiveInsight[];\n  charts: {\n    id: string;\n    type: string;\n    title: string;\n    data: any[];\n    config: any;\n  }[];\n  summary: {\n    keyFindings: string[];\n    recommendedActions: string[];\n    nextReviewDate: string;\n  };\n}\n\nclass EnhancedAnalyticsService {\n  private readonly CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n  private readonly cache = new Map<string, { data: any; timestamp: number }>();\n\n  /**\n   * Generate comprehensive analytics report\n   */\n  async generateAnalyticsReport(timeRangeDays: number = 30): Promise<AnalyticsReport> {\n    const cacheKey = `analytics_report_${timeRangeDays}`;\n    const cached = this.getFromCache(cacheKey);\n    if (cached) return cached;\n\n    try {\n      const currentUser = authService.getCurrentUser();\n      if (!currentUser) {\n        throw new Error('User not authenticated');\n      }\n\n      const endDate = new Date();\n      const startDate = new Date(endDate.getTime() - (timeRangeDays * 24 * 60 * 60 * 1000));\n\n      // Gather base analytics data\n      const [oracleAnalytics, performanceMetrics, historicalData] = await Promise.all([\n        oracleAnalyticsService.getAnalytics(),\n        oracleAnalyticsService.getOraclePerformanceMetrics(),\n        this.getHistoricalAnalytics(currentUser.id, startDate, endDate)\n      ]);\n\n      // Generate enhanced metrics\n      const enhancedMetrics = await this.calculateEnhancedMetrics(\n        oracleAnalytics,\n        performanceMetrics,\n        historicalData\n      );\n\n      // Generate predictive insights\n      const insights = await this.generatePredictiveInsights(\n        enhancedMetrics,\n        historicalData\n      );\n\n      // Generate chart configurations\n      const charts = this.generateChartConfigurations(\n        oracleAnalytics,\n        performanceMetrics,\n        historicalData\n      );\n\n      // Generate summary\n      const summary = this.generateAnalyticsSummary(enhancedMetrics, insights);\n\n      const report: AnalyticsReport = {\n        timestamp: new Date().toISOString(),\n        timeRange: {\n          start: startDate.toISOString(),\n          end: endDate.toISOString(),\n          days: timeRangeDays\n        },\n        metrics: enhancedMetrics,\n        insights,\n        charts,\n        summary\n      };\n\n      this.setCache(cacheKey, report);\n      return report;\n\n    } catch (error) {\n      console.error('Failed to generate analytics report:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Calculate enhanced analytics metrics\n   */\n  private async calculateEnhancedMetrics(\n    oracleAnalytics: BaseOracleAnalytics,\n    performanceMetrics: OraclePerformanceMetrics,\n    historicalData: AnalyticsData[]\n  ): Promise<EnhancedAnalyticsMetrics> {\n    // Calculate accuracy metrics\n    const accuracyTrend = this.calculateTrend(\n      oracleAnalytics.accuracyTrends.map(t => t.accuracy)\n    );\n\n    const weeklyConsistency = this.calculateConsistency(\n      Object.values(performanceMetrics.weeklyAccuracy)\n    );\n\n    // Calculate performance metrics\n    const improvementRate = this.calculateImprovementRate(historicalData);\n\n    // Calculate engagement metrics\n    const streakData = this.calculateStreakData(oracleAnalytics.accuracyTrends);\n    const mostActiveCategory = this.findMostActiveCategory(oracleAnalytics.topPredictionTypes);\n\n    // Calculate comparative metrics (simulated for MVP)\n    const comparative = this.calculateComparativeMetrics(performanceMetrics);\n\n    return {\n      accuracy: {\n        overall: oracleAnalytics.predictionAccuracy,\n        trend: accuracyTrend,\n        byCategory: performanceMetrics.typeAccuracy,\n        weeklyConsistency\n      },\n      performance: {\n        userWinRate: oracleAnalytics.userWinRate,\n        confidenceCorrelation: performanceMetrics.confidenceCorrelation,\n        calibrationScore: performanceMetrics.calibrationScore,\n        improvementRate\n      },\n      engagement: {\n        totalPredictions: oracleAnalytics.totalPredictions,\n        averageConfidence: this.calculateAverageConfidence(oracleAnalytics.confidenceByType),\n        mostActiveCategory,\n        streakData\n      },\n      comparative\n    };\n  }\n\n  /**\n   * Generate predictive insights based on analytics data\n   */\n  private async generatePredictiveInsights(\n    metrics: EnhancedAnalyticsMetrics,\n    historicalData: AnalyticsData[]\n  ): Promise<PredictiveInsight[]> {\n    const insights: PredictiveInsight[] = [];\n\n    // Accuracy trend insight\n    if (Math.abs(metrics.accuracy.trend) > 0.02) {\n      insights.push({\n        id: 'accuracy_trend',\n        type: 'trend',\n        title: metrics.accuracy.trend > 0 ? 'Improving Accuracy Trend' : 'Declining Accuracy Trend',\n        description: `Your prediction accuracy has ${metrics.accuracy.trend > 0 ? 'improved' : 'declined'} by ${(Math.abs(metrics.accuracy.trend) * 100).toFixed(1)}% recently.`,\n        confidence: 85,\n        impact: Math.abs(metrics.accuracy.trend) > 0.05 ? 'high' : 'medium',\n        timeframe: '2-3 weeks',\n        actionable: true,\n        recommendations: metrics.accuracy.trend > 0 \n          ? ['Continue current strategy', 'Consider increasing prediction volume']\n          : ['Review prediction methodology', 'Focus on high-confidence categories'],\n        data: { trend: metrics.accuracy.trend }\n      });\n    }\n\n    // Performance optimization insight\n    const bestCategory = Object.entries(metrics.accuracy.byCategory)\n      .sort(([,a], [,b]) => b - a)[0];\n    \n    if (bestCategory && bestCategory[1] > metrics.accuracy.overall + 0.1) {\n      insights.push({\n        id: 'category_specialization',\n        type: 'optimization',\n        title: 'Category Specialization Opportunity',\n        description: `You perform ${((bestCategory[1] - metrics.accuracy.overall) * 100).toFixed(1)}% better in ${bestCategory[0]} predictions.`,\n        confidence: 90,\n        impact: 'high',\n        timeframe: 'immediate',\n        actionable: true,\n        recommendations: [\n          `Focus more on ${bestCategory[0]} predictions`,\n          'Consider specializing in this category',\n          'Reduce exposure to underperforming categories'\n        ],\n        data: { category: bestCategory[0], advantage: bestCategory[1] - metrics.accuracy.overall }\n      });\n    }\n\n    // Confidence calibration insight\n    if (metrics.performance.confidenceCorrelation < 0.6) {\n      insights.push({\n        id: 'confidence_calibration',\n        type: 'alert',\n        title: 'Confidence Calibration Needs Improvement',\n        description: 'Your confidence levels don\\'t strongly correlate with actual outcomes.',\n        confidence: 80,\n        impact: 'medium',\n        timeframe: '1-2 weeks',\n        actionable: true,\n        recommendations: [\n          'Be more conservative with high-confidence predictions',\n          'Review factors that influence your confidence',\n          'Use data-driven confidence assessment'\n        ],\n        data: { correlation: metrics.performance.confidenceCorrelation }\n      });\n    }\n\n    // Engagement opportunity\n    if (metrics.engagement.totalPredictions < 50 && metrics.accuracy.overall > 0.65) {\n      insights.push({\n        id: 'volume_opportunity',\n        type: 'opportunity',\n        title: 'Volume Increase Opportunity',\n        description: 'Your accuracy is strong - consider making more predictions to maximize impact.',\n        confidence: 75,\n        impact: 'medium',\n        timeframe: 'ongoing',\n        actionable: true,\n        recommendations: [\n          'Gradually increase prediction volume',\n          'Maintain quality while scaling quantity',\n          'Set weekly prediction targets'\n        ],\n        data: { currentVolume: metrics.engagement.totalPredictions, suggestedIncrease: 20 }\n      });\n    }\n\n    // Consistency insight\n    if (metrics.accuracy.weeklyConsistency < 70) {\n      insights.push({\n        id: 'consistency_improvement',\n        type: 'alert',\n        title: 'Consistency Improvement Needed',\n        description: 'Your week-to-week performance varies significantly.',\n        confidence: 85,\n        impact: 'medium',\n        timeframe: '2-4 weeks',\n        actionable: true,\n        recommendations: [\n          'Establish a regular prediction routine',\n          'Document successful prediction strategies',\n          'Review weekly performance patterns'\n        ],\n        data: { consistency: metrics.accuracy.weeklyConsistency }\n      });\n    }\n\n    return insights;\n  }\n\n  /**\n   * Generate chart configurations for visualization\n   */\n  private generateChartConfigurations(\n    oracleAnalytics: BaseOracleAnalytics,\n    performanceMetrics: OraclePerformanceMetrics,\n    historicalData: AnalyticsData[]\n  ): AnalyticsReport['charts'] {\n    const charts: AnalyticsReport['charts'] = [];\n\n    // Accuracy trends over time\n    if (oracleAnalytics.accuracyTrends.length > 0) {\n      charts.push({\n        id: 'accuracy_trends',\n        type: 'line',\n        title: 'Accuracy Trends Over Time',\n        data: oracleAnalytics.accuracyTrends.map(trend => ({\n          week: `Week ${trend.week}`,\n          accuracy: (trend.accuracy * 100).toFixed(1),\n          predictions: trend.totalPredictions\n        })),\n        config: {\n          xAxisKey: 'week',\n          yAxisKey: 'accuracy',\n          color: '#10B981'\n        }\n      });\n    }\n\n    // Performance by category\n    if (oracleAnalytics.topPredictionTypes.length > 0) {\n      charts.push({\n        id: 'category_performance',\n        type: 'radar',\n        title: 'Performance by Category',\n        data: oracleAnalytics.topPredictionTypes.map(type => ({\n          category: type.type,\n          accuracy: type.accuracy * 100,\n          volume: type.totalPredictions\n        })),\n        config: {\n          angleKey: 'category',\n          radiusKey: 'accuracy',\n          color: '#3B82F6'\n        }\n      });\n    }\n\n    // Weekly performance distribution\n    const weeklyData = Object.entries(performanceMetrics.weeklyAccuracy).map(([week, accuracy]) => ({\n      week: `W${week}`,\n      accuracy: (accuracy * 100).toFixed(1),\n      benchmark: (performanceMetrics.overallAccuracy * 100).toFixed(1)\n    }));\n\n    if (weeklyData.length > 0) {\n      charts.push({\n        id: 'weekly_distribution',\n        type: 'bar',\n        title: 'Weekly Performance Distribution',\n        data: weeklyData,\n        config: {\n          xAxisKey: 'week',\n          yAxisKey: 'accuracy',\n          colorKey: 'color'\n        }\n      });\n    }\n\n    return charts;\n  }\n\n  /**\n   * Generate analytics summary\n   */\n  private generateAnalyticsSummary(\n    metrics: EnhancedAnalyticsMetrics,\n    insights: PredictiveInsight[]\n  ): AnalyticsReport['summary'] {\n    const keyFindings: string[] = [];\n    const recommendedActions: string[] = [];\n\n    // Analyze overall performance\n    if (metrics.accuracy.overall > 0.7) {\n      keyFindings.push(`Strong overall accuracy of ${(metrics.accuracy.overall * 100).toFixed(1)}%`);\n    } else if (metrics.accuracy.overall < 0.5) {\n      keyFindings.push(`Accuracy below average at ${(metrics.accuracy.overall * 100).toFixed(1)}%`);\n      recommendedActions.push('Focus on improving prediction methodology');\n    }\n\n    // Analyze trends\n    if (Math.abs(metrics.accuracy.trend) > 0.03) {\n      keyFindings.push(`${metrics.accuracy.trend > 0 ? 'Positive' : 'Negative'} accuracy trend detected`);\n      if (metrics.accuracy.trend < 0) {\n        recommendedActions.push('Review recent prediction patterns for improvement opportunities');\n      }\n    }\n\n    // Analyze consistency\n    if (metrics.accuracy.weeklyConsistency < 70) {\n      keyFindings.push('Inconsistent week-to-week performance');\n      recommendedActions.push('Develop more systematic prediction approach');\n    }\n\n    // Add top insights\n    const highImpactInsights = insights.filter(i => i.impact === 'high' && i.actionable);\n    highImpactInsights.forEach(insight => {\n      if (insight.recommendations.length > 0) {\n        recommendedActions.push(insight.recommendations[0]);\n      }\n    });\n\n    // Calculate next review date (1 week from now)\n    const nextReviewDate = new Date();\n    nextReviewDate.setDate(nextReviewDate.getDate() + 7);\n\n    return {\n      keyFindings: keyFindings.slice(0, 5), // Top 5 findings\n      recommendedActions: [...new Set(recommendedActions)].slice(0, 5), // Top 5 unique actions\n      nextReviewDate: nextReviewDate.toISOString()\n    };\n  }\n\n  /**\n   * Helper methods\n   */\n  private async getHistoricalAnalytics(userId: number, startDate: Date, endDate: Date): Promise<AnalyticsData[]> {\n    try {\n      const service = await dataPersistenceService;\n      const allAnalytics = await service.getAnalyticsData(userId);\n      \n      return allAnalytics.filter(data => {\n        const dataDate = new Date(data.createdAt);\n        return dataDate >= startDate && dataDate <= endDate;\n      });\n    } catch (error) {\n      console.warn('Failed to get historical analytics:', error);\n      return [];\n    }\n  }\n\n  private calculateTrend(values: number[]): number {\n    if (values.length < 2) return 0;\n    \n    const recent = values.slice(-3).reduce((sum, val) => sum + val, 0) / Math.min(3, values.length);\n    const earlier = values.slice(0, 3).reduce((sum, val) => sum + val, 0) / Math.min(3, values.length);\n    \n    return recent - earlier;\n  }\n\n  private calculateConsistency(values: number[]): number {\n    if (values.length === 0) return 0;\n    \n    const mean = values.reduce((sum, val) => sum + val, 0) / values.length;\n    const variance = values.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / values.length;\n    const standardDeviation = Math.sqrt(variance);\n    \n    // Convert to consistency score (higher is better, 0-100)\n    return Math.max(0, 100 - (standardDeviation * 100));\n  }\n\n  private calculateImprovementRate(historicalData: AnalyticsData[]): number {\n    if (historicalData.length < 2) return 0;\n    \n    // Sort by date\n    const sortedData = [...historicalData].sort((a, b) => \n      new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n    );\n    \n    const recent = sortedData.slice(-5); // Last 5 data points\n    const earlier = sortedData.slice(0, 5); // First 5 data points\n    \n    if (recent.length === 0 || earlier.length === 0) return 0;\n    \n    const recentAvg = recent.reduce((sum, data) => sum + (data.data.accuracy || 0), 0) / recent.length;\n    const earlierAvg = earlier.reduce((sum, data) => sum + (data.data.accuracy || 0), 0) / earlier.length;\n    \n    return recentAvg - earlierAvg;\n  }\n\n  private calculateStreakData(accuracyTrends: any[]): { current: number; best: number } {\n    let currentStreak = 0;\n    let bestStreak = 0;\n    let tempStreak = 0;\n    \n    const threshold = 0.6; // 60% accuracy threshold for \"good\" performance\n    \n    for (let i = accuracyTrends.length - 1; i >= 0; i--) {\n      if (accuracyTrends[i].accuracy >= threshold) {\n        tempStreak++;\n        if (i === accuracyTrends.length - 1) {\n          currentStreak = tempStreak;\n        }\n      } else {\n        bestStreak = Math.max(bestStreak, tempStreak);\n        tempStreak = 0;\n      }\n    }\n    \n    bestStreak = Math.max(bestStreak, tempStreak);\n    \n    return { current: currentStreak, best: bestStreak };\n  }\n\n  private findMostActiveCategory(predictionTypes: any[]): string {\n    if (predictionTypes.length === 0) return 'N/A';\n    \n    return predictionTypes.reduce((prev, current) => \n      current.totalPredictions > prev.totalPredictions ? current : prev,\n      predictionTypes[0]\n    ).type;\n  }\n\n  private calculateAverageConfidence(confidenceByType: Record<string, number>): number {\n    const values = Object.values(confidenceByType);\n    return values.length > 0 ? values.reduce((sum, val) => sum + val, 0) / values.length : 0;\n  }\n\n  private calculateComparativeMetrics(performanceMetrics: OraclePerformanceMetrics): EnhancedAnalyticsMetrics['comparative'] {\n    // Simulated comparative data (in production, this would come from aggregated user data)\n    const avgAccuracy = 0.65;\n    const topPercentileAccuracy = 0.85;\n    \n    const userPercentile = this.calculatePercentile(\n      performanceMetrics.overallAccuracy,\n      avgAccuracy,\n      topPercentileAccuracy\n    );\n    \n    return {\n      userPercentile,\n      aboveAverage: (performanceMetrics.overallAccuracy - avgAccuracy) * 100,\n      topPerformerGap: (topPercentileAccuracy - performanceMetrics.overallAccuracy) * 100\n    };\n  }\n\n  private calculatePercentile(userValue: number, average: number, topPercentile: number): number {\n    if (userValue >= topPercentile) return 95;\n    if (userValue <= average * 0.5) return 5;\n    \n    const normalizedValue = (userValue - (average * 0.5)) / (topPercentile - (average * 0.5));\n    return Math.round(normalizedValue * 90 + 5);\n  }\n\n  private getFromCache(key: string): any {\n    const cached = this.cache.get(key);\n    if (cached && Date.now() - cached.timestamp < this.CACHE_DURATION) {\n      return cached.data;\n    }\n    return null;\n  }\n\n  private setCache(key: string, data: any): void {\n    this.cache.set(key, { data, timestamp: Date.now() });\n  }\n\n  /**\n   * Get real-time metrics for the analytics dashboard\n   */\n  async getRealTimeMetrics(timeframe: string = '24h'): Promise<RealTimeMetrics> {\n    const cacheKey = `realtime_metrics_${timeframe}`;\n    const cached = this.getFromCache(cacheKey);\n    if (cached) return cached;\n\n    try {\n      const currentUser = authService.getCurrentUser();\n      if (!currentUser) {\n        throw new Error('User not authenticated');\n      }\n\n      const [baseOracleAnalytics, performanceMetrics] = await Promise.all([\n        oracleAnalyticsService.getAnalytics(),\n        oracleAnalyticsService.getOraclePerformanceMetrics()\n      ]);\n\n      // Extend analytics with missing properties\n      const oracleAnalytics: ExtendedOracleAnalytics = {\n        ...baseOracleAnalytics,\n        activePredictions: Math.floor(baseOracleAnalytics.totalPredictions * 0.1),\n        averageConfidence: baseOracleAnalytics.confidenceByType ? \n          Object.values(baseOracleAnalytics.confidenceByType).reduce((a, b) => a + b, 0) / \n          Object.values(baseOracleAnalytics.confidenceByType).length : 75\n      };\n\n      // Calculate real-time metrics\n      const realTimeMetrics: RealTimeMetrics = {\n        timestamp: new Date().toISOString(),\n        accuracy: {\n          current: performanceMetrics.overallAccuracy,\n          change24h: this.calculateAccuracyChange(performanceMetrics),\n          trend: this.determineTrend(performanceMetrics.overallAccuracy),\n          predictions: this.getRecentPredictions(oracleAnalytics, 24)\n        },\n        predictions: {\n          total: oracleAnalytics.totalPredictions,\n          active: oracleAnalytics.activePredictions || 0,\n          resolved: oracleAnalytics.totalPredictions - (oracleAnalytics.activePredictions || 0),\n          avgConfidence: oracleAnalytics.averageConfidence || 75,\n          successRate: performanceMetrics.overallAccuracy\n        },\n        users: {\n          active: 1, // Current user\n          newToday: 0,\n          totalPredictions: oracleAnalytics.totalPredictions,\n          beatOracleRate: this.calculateBeatOracleRate(performanceMetrics)\n        },\n        performance: {\n          responseTime: 150,\n          uptime: 99.7,\n          errorRate: 0.3,\n          throughput: oracleAnalytics.totalPredictions\n        },\n        insights: await this.generateRealTimeInsights(oracleAnalytics, performanceMetrics)\n      };\n\n      this.setCache(cacheKey, realTimeMetrics);\n      return realTimeMetrics;\n\n    } catch (error) {\n      console.error('Failed to get real-time metrics:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get predictive insights for future performance\n   */\n  async getPredictiveInsights(timeframe: string = '24h'): Promise<PredictiveInsight[]> {\n    const cacheKey = `predictive_insights_${timeframe}`;\n    const cached = this.getFromCache(cacheKey);\n    if (cached) return cached;\n\n    try {\n      const currentUser = authService.getCurrentUser();\n      if (!currentUser) {\n        throw new Error('User not authenticated');\n      }\n\n      const [baseOracleAnalytics, performanceMetrics] = await Promise.all([\n        oracleAnalyticsService.getAnalytics(),\n        oracleAnalyticsService.getOraclePerformanceMetrics()\n      ]);\n\n      // Extend analytics with missing properties\n      const oracleAnalytics: ExtendedOracleAnalytics = {\n        ...baseOracleAnalytics,\n        activePredictions: Math.floor(baseOracleAnalytics.totalPredictions * 0.1),\n        averageConfidence: baseOracleAnalytics.confidenceByType ? \n          Object.values(baseOracleAnalytics.confidenceByType).reduce((a, b) => a + b, 0) / \n          Object.values(baseOracleAnalytics.confidenceByType).length : 75\n      };\n\n      const insights: PredictiveInsight[] = [\n        await this.generateAccuracyForecast(oracleAnalytics, performanceMetrics),\n        await this.generateUserBehaviorInsight(oracleAnalytics),\n        await this.generateMarketTrendInsight(performanceMetrics),\n        await this.generatePerformanceOptimizationInsight(oracleAnalytics, performanceMetrics)\n      ];\n\n      this.setCache(cacheKey, insights);\n      return insights.filter(insight => insight !== null);\n\n    } catch (error) {\n      console.error('Failed to get predictive insights:', error);\n      throw error;\n    }\n  }\n\n  private calculateAccuracyChange(performanceMetrics: OraclePerformanceMetrics): number {\n    // Mock calculation - in real implementation, compare with previous day\n    return Math.random() * 10 - 5; // Random change between -5 and +5\n  }\n\n  private determineTrend(accuracy: number): 'up' | 'down' | 'stable' {\n    const change = this.calculateAccuracyChange({ overallAccuracy: accuracy } as OraclePerformanceMetrics);\n    if (change > 1) return 'up';\n    if (change < -1) return 'down';\n    return 'stable';\n  }\n\n  private getRecentPredictions(analytics: ExtendedOracleAnalytics, hours: number): Array<{\n    id: string;\n    timestamp: string;\n    accuracy: number;\n    confidence: number;\n    type: string;\n  }> {\n    // Mock recent predictions\n    return Array.from({ length: hours }, (_, i) => ({\n      id: `pred-${i}`,\n      timestamp: new Date(Date.now() - i * 3600000).toISOString(),\n      accuracy: 70 + Math.random() * 20,\n      confidence: 60 + Math.random() * 40,\n      type: ['PLAYER_PERFORMANCE', 'GAME_OUTCOME', 'WEEKLY_SCORING'][Math.floor(Math.random() * 3)]\n    }));\n  }\n\n  private calculateBeatOracleRate(performanceMetrics: OraclePerformanceMetrics): number {\n    // Calculate percentage of predictions that beat Oracle's accuracy\n    return Math.max(0, (performanceMetrics.overallAccuracy - 70) * 2); // Assuming Oracle baseline of 70%\n  }\n\n  private async generateRealTimeInsights(\n    analytics: ExtendedOracleAnalytics, \n    performanceMetrics: OraclePerformanceMetrics\n  ): Promise<Array<{\n    id: string;\n    type: InsightType;\n    title: string;\n    description: string;\n    confidence: number;\n    impact: ImpactLevel;\n    actionable: boolean;\n  }>> {\n    const insights = [];\n\n    // Accuracy improvement opportunity\n    if (performanceMetrics.overallAccuracy < 75) {\n      insights.push({\n        id: 'accuracy-opportunity',\n        type: 'opportunity' as const,\n        title: 'Accuracy Improvement Opportunity',\n        description: 'Your predictions show potential for 10-15% accuracy improvement with better confidence calibration',\n        confidence: 85,\n        impact: 'high' as const,\n        actionable: true\n      });\n    }\n\n    // High confidence streak\n    if ((analytics.averageConfidence || 75) > 80) {\n      insights.push({\n        id: 'confidence-achievement',\n        type: 'achievement' as const,\n        title: 'High Confidence Performance',\n        description: 'Your average confidence level is above 80%, indicating strong conviction in predictions',\n        confidence: 92,\n        impact: 'medium' as const,\n        actionable: false\n      });\n    }\n\n    return insights;\n  }\n\n  private async generateAccuracyForecast(\n    analytics: ExtendedOracleAnalytics, \n    performanceMetrics: OraclePerformanceMetrics\n  ): Promise<PredictiveInsight> {\n    return {\n      id: 'accuracy-forecast',\n      type: 'trend',\n      title: 'Accuracy Forecast: Next 7 Days',\n      description: 'Based on recent patterns, accuracy is expected to improve by 2-4%',\n      confidence: 78,\n      impact: 'medium',\n      timeframe: '7d',\n      actionable: true,\n      recommendations: [\n        'Focus on high-confidence predictions during peak performance hours',\n        'Review and adjust prediction strategies for underperforming categories'\n      ],\n      data: {\n        currentAccuracy: performanceMetrics.overallAccuracy,\n        forecastAccuracy: performanceMetrics.overallAccuracy + 3,\n        trendData: Array.from({ length: 7 }, (_, i) => ({\n          day: i + 1,\n          predicted: performanceMetrics.overallAccuracy + (i * 0.5),\n          confidence: 78 - (i * 2)\n        }))\n      }\n    };\n  }\n\n  private async generateUserBehaviorInsight(analytics: ExtendedOracleAnalytics): Promise<PredictiveInsight> {\n    return {\n      id: 'user-behavior',\n      type: 'optimization',\n      title: 'Optimal Prediction Timing',\n      description: 'Analysis suggests better performance when making predictions 2-3 hours before game time',\n      confidence: 72,\n      impact: 'medium',\n      timeframe: '24h',\n      actionable: true,\n      recommendations: [\n        'Schedule prediction reviews 2-3 hours before game start',\n        'Avoid last-minute prediction changes'\n      ]\n    };\n  }\n\n  private async generateMarketTrendInsight(performanceMetrics: OraclePerformanceMetrics): Promise<PredictiveInsight> {\n    return {\n      id: 'market-trend',\n      type: 'trend',\n      title: 'Market Inefficiency Detection',\n      description: 'Undervalued opportunities detected in evening games with 15% higher success potential',\n      confidence: 84,\n      impact: 'high',\n      timeframe: '7d',\n      actionable: true,\n      recommendations: [\n        'Increase focus on evening game predictions',\n        'Monitor line movements for value opportunities'\n      ]\n    };\n  }\n\n  private async generatePerformanceOptimizationInsight(\n    analytics: ExtendedOracleAnalytics, \n    performanceMetrics: OraclePerformanceMetrics\n  ): Promise<PredictiveInsight> {\n    return {\n      id: 'performance-optimization',\n      type: 'optimization',\n      title: 'Confidence Calibration Improvement',\n      description: 'Your high-confidence predictions (>80%) show 12% better accuracy than medium confidence',\n      confidence: 89,\n      impact: 'high',\n      timeframe: '30d',\n      actionable: true,\n      recommendations: [\n        'Increase prediction volume for high-confidence scenarios',\n        'Develop stricter criteria for medium-confidence predictions'\n      ]\n    };\n  }\n\n  /**\n   * Clear analytics cache\n   */\n  clearCache(): void {\n    this.cache.clear();\n  }\n\n  /**\n   * Export analytics data\n   */\n  async exportAnalyticsData(format: 'json' | 'csv' = 'json'): Promise<string> {\n    const report = await this.generateAnalyticsReport();\n    \n    if (format === 'json') {\n      return JSON.stringify(report, null, 2);\n    } else {\n      // Convert to CSV format\n      const csvLines: string[] = [];\n      csvLines.push('Metric,Value,Category');\n      \n      // Add metrics data\n      csvLines.push(`Overall Accuracy,${report.metrics.accuracy.overall},Accuracy`);\n      csvLines.push(`User Win Rate,${report.metrics.performance.userWinRate},Performance`);\n      csvLines.push(`Total Predictions,${report.metrics.engagement.totalPredictions},Engagement`);\n      csvLines.push(`Confidence Correlation,${report.metrics.performance.confidenceCorrelation},Performance`);\n      csvLines.push(`Weekly Consistency,${report.metrics.accuracy.weeklyConsistency},Accuracy`);\n      \n      return csvLines.join('\\n');\n    }\n  }\n}\n\nexport const enhancedAnalyticsService = new EnhancedAnalyticsService();\nexport default enhancedAnalyticsService;\n","/**\n * Real-Time Analytics Dashboard\n * Advanced analytics dashboard with real-time metrics, predictive insights, and comprehensive reporting\n */\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Line, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n  ComposedChart\n} from 'recharts';\nimport {\n  TrendingUp, TrendingDown, Activity, Eye, Download, \n  RefreshCw, AlertTriangle, Lightbulb, Play, Pause\n} from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/Card';\nimport { enhancedAnalyticsService, type RealTimeMetrics, type PredictiveInsight } from '../../services/enhancedAnalyticsService';\n\n// WebSocket hook with basic implementation for demo\nconst useWebSocket = (url: string, options: any = {}) => {\n  const [isConnected, setIsConnected] = React.useState(false);\n  const [lastMessage, setLastMessage] = React.useState<string | null>(null);\n  \n  React.useEffect(() => {\n    // Mock connection for demo\n    setIsConnected(true);\n    \n    // Simulate periodic messages\n    const interval = setInterval(() => {\n      setLastMessage(JSON.stringify({\n        type: 'metrics_update',\n        payload: { timestamp: new Date().toISOString() }\n      }));\n    }, 30000);\n    \n    return () => clearInterval(interval);\n  }, [url]);\n  \n  return {\n    isConnected,\n    lastMessage,\n    sendMessage: (message: string) => console.log('Sending:', message),\n    connect: () => setIsConnected(true),\n    disconnect: () => setIsConnected(false),\n    reconnect: () => setIsConnected(true)\n  };\n};\n\ninterface DashboardState {\n  isRealTime: boolean;\n  selectedTimeframe: '1h' | '24h' | '7d' | '30d' | 'all';\n  selectedMetrics: string[];\n  alertsEnabled: boolean;\n  autoRefresh: boolean;\n  refreshInterval: number;\n}\n\nconst COLORS = {\n  primary: '#2563eb',\n  secondary: '#7c3aed',\n  success: '#16a34a',\n  warning: '#d97706',\n  danger: '#dc2626',\n  info: '#0891b2',\n  gradient: ['#2563eb', '#7c3aed', '#16a34a', '#d97706', '#dc2626']\n};\n\nconst RealTimeAnalyticsDashboard: React.FC = () => {\n  const getAccuracyColor = (accuracy: number) => {\n    if (accuracy > 75) return COLORS.success;\n    if (accuracy > 60) return COLORS.warning;\n    return COLORS.danger;\n  };\n\n  const getInsightBorderColor = (type: string) => {\n    if (type === 'opportunity') return 'border-green-500 bg-green-50';\n    if (type === 'warning') return 'border-yellow-500 bg-yellow-50';\n    if (type === 'achievement') return 'border-blue-500 bg-blue-50';\n    return 'border-purple-500 bg-purple-50';\n  };\n\n  const getImpactColor = (impact: string) => {\n    if (impact === 'high') return 'bg-red-100 text-red-800';\n    if (impact === 'medium') return 'bg-yellow-100 text-yellow-800';\n    return 'bg-gray-100 text-gray-800';\n  };\n  const [metrics, setMetrics] = useState<RealTimeMetrics | null>(null);\n  const [predictiveInsights, setPredictiveInsights] = useState<PredictiveInsight[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [state, setState] = useState<DashboardState>({\n    isRealTime: true,\n    selectedTimeframe: '24h',\n    selectedMetrics: ['accuracy', 'predictions', 'users', 'performance'],\n    alertsEnabled: true,\n    autoRefresh: true,\n    refreshInterval: 30000 // 30 seconds\n  });\n\n  // WebSocket connection for real-time updates\n  const { isConnected, lastMessage } = useWebSocket('/ws/analytics', {\n    enabled: state.isRealTime,\n    reconnectInterval: 5000\n  });\n\n  // Auto-refresh interval\n  useEffect(() => {\n    if (!state.autoRefresh) return;\n\n    const interval = setInterval(() => {\n      loadAnalyticsData();\n    }, state.refreshInterval);\n\n    return () => clearInterval(interval);\n  }, [state.autoRefresh, state.refreshInterval]);\n\n  // Handle WebSocket messages\n  useEffect(() => {\n    if (lastMessage && state.isRealTime) {\n      try {\n        const data = JSON.parse(lastMessage);\n        if (data.type === 'metrics_update') {\n          updateMetrics(data.payload);\n        } else if (data.type === 'insight_generated') {\n          addNewInsight(data.payload);\n        }\n      } catch (error) {\n        console.error('Failed to parse WebSocket message:', error);\n      }\n    }\n  }, [lastMessage, state.isRealTime]);\n\n  const loadAnalyticsData = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Load real-time metrics\n      const realTimeData = await enhancedAnalyticsService.getRealTimeMetrics(state.selectedTimeframe);\n      setMetrics(realTimeData);\n\n      // Load predictive insights\n      const insights = await enhancedAnalyticsService.getPredictiveInsights(state.selectedTimeframe);\n      setPredictiveInsights(insights);\n\n    } catch (err) {\n      console.error('Failed to load analytics data:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load analytics data');\n      \n      // Use mock data for demo\n      setMetrics(generateMockRealTimeMetrics());\n      setPredictiveInsights(generateMockPredictiveInsights());\n    } finally {\n      setLoading(false);\n    }\n  }, [state.selectedTimeframe]);\n\n  useEffect(() => {\n    loadAnalyticsData();\n  }, [loadAnalyticsData]);\n\n  const updateMetrics = useCallback((update: Partial<RealTimeMetrics>) => {\n    setMetrics(prev => prev ? { ...prev, ...update } : null);\n  }, []);\n\n  const addNewInsight = useCallback((insight: PredictiveInsight) => {\n    setPredictiveInsights(prev => [insight, ...prev.slice(0, 9)]);\n  }, []);\n\n  const handleStateChange = (updates: Partial<DashboardState>) => {\n    setState(prev => ({ ...prev, ...updates }));\n  };\n\n  const generateReport = async () => {\n    try {\n      const report = await enhancedAnalyticsService.generateAnalyticsReport();\n      const blob = new Blob([JSON.stringify(report, null, 2)], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `analytics-report-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Failed to generate report:', error);\n    }\n  };\n\n  // Memoized calculations\n  const accuracyTrend = useMemo(() => {\n    if (!metrics) return [];\n    return metrics.accuracy.predictions.slice(-24).map((pred, index) => ({\n      time: `${23 - index}h ago`,\n      accuracy: pred.accuracy,\n      confidence: pred.confidence\n    }));\n  }, [metrics]);\n\n  const performanceIndicators = useMemo(() => {\n    if (!metrics) return [];\n    return [\n      {\n        label: 'Accuracy',\n        value: `${metrics.accuracy.current.toFixed(1)}%`,\n        change: metrics.accuracy.change24h,\n        trend: metrics.accuracy.trend,\n        color: getAccuracyColor(metrics.accuracy.current)\n      },\n      {\n        label: 'Active Users',\n        value: metrics.users.active.toLocaleString(),\n        change: metrics.users.newToday,\n        trend: 'up' as const,\n        color: COLORS.info\n      },\n      {\n        label: 'Success Rate',\n        value: `${metrics.predictions.successRate.toFixed(1)}%`,\n        change: 0,\n        trend: 'stable' as const,\n        color: COLORS.primary\n      },\n      {\n        label: 'Response Time',\n        value: `${metrics.performance.responseTime}ms`,\n        change: -5,\n        trend: 'up' as const,\n        color: metrics.performance.responseTime < 200 ? COLORS.success : COLORS.warning\n      }\n    ];\n  }, [metrics]);\n\n  const generateMockRealTimeMetrics = (): RealTimeMetrics => ({\n    timestamp: new Date().toISOString(),\n    accuracy: {\n      current: 78.5,\n      change24h: 2.3,\n      trend: 'up',\n      predictions: Array.from({ length: 24 }, (_, i) => ({\n        id: `pred-${i}`,\n        timestamp: new Date(Date.now() - i * 3600000).toISOString(),\n        accuracy: 70 + Math.random() * 20,\n        confidence: 60 + Math.random() * 40,\n        type: ['PLAYER_PERFORMANCE', 'GAME_OUTCOME', 'WEEKLY_SCORING'][Math.floor(Math.random() * 3)]\n      }))\n    },\n    predictions: {\n      total: 1247,\n      active: 89,\n      resolved: 1158,\n      avgConfidence: 74.2,\n      successRate: 68.7\n    },\n    users: {\n      active: 342,\n      newToday: 28,\n      totalPredictions: 5640,\n      beatOracleRate: 42.1\n    },\n    performance: {\n      responseTime: 145,\n      uptime: 99.7,\n      errorRate: 0.3,\n      throughput: 150\n    },\n    insights: [\n      {\n        id: 'insight-1',\n        type: 'opportunity',\n        title: 'Accuracy Improvement Opportunity',\n        description: 'Player performance predictions show 15% better accuracy during prime time hours',\n        confidence: 87,\n        impact: 'high',\n        actionable: true\n      },\n      {\n        id: 'insight-2',\n        type: 'trend',\n        title: 'User Engagement Trending Up',\n        description: 'New user retention increased by 23% this week',\n        confidence: 92,\n        impact: 'medium',\n        actionable: false\n      }\n    ]\n  });\n\n  const generateMockPredictiveInsights = (): PredictiveInsight[] => [\n    {\n      id: 'forecast-1',\n      type: 'trend',\n      title: 'Accuracy Forecast: Next 7 Days',\n      description: 'Model predicts 3-5% accuracy improvement based on historical patterns',\n      confidence: 84,\n      timeframe: '7d',\n      actionable: true,\n      impact: 'medium',\n      recommendations: [\n        'Focus on player performance predictions during evening hours',\n        'Implement confidence calibration for high-stakes games'\n      ],\n      data: {\n        currentAccuracy: 78.5,\n        predicted: 82.1,\n        trend: Array.from({ length: 7 }, (_, i) => ({\n          timestamp: new Date(Date.now() + i * 86400000).toISOString(),\n          value: 78.5 + (i * 0.6) + (Math.random() - 0.5) * 2,\n          confidence: 84 - i * 2\n        }))\n      }\n    }\n  ];\n\n  if (loading && !metrics) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">\n        <div className=\"text-center\">\n          <RefreshCw className=\"h-8 w-8 animate-spin mx-auto mb-4 text-blue-600\" />\n          <p className=\"text-gray-600\">Loading real-time analytics...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6 p-6 bg-gray-50 min-h-screen\">\n      {/* Header Controls */}\n      <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4 bg-white p-4 rounded-lg shadow-sm\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-1\">Real-Time Analytics Dashboard</h1>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`} />\n            <span>{isConnected ? 'Connected' : 'Disconnected'}</span>\n            <span>•</span>\n            <span>Last updated: {metrics?.timestamp ? new Date(metrics.timestamp).toLocaleTimeString() : 'Never'}</span>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap items-center gap-2\">\n          <select\n            value={state.selectedTimeframe}\n            onChange={(e: any) => handleStateChange({ selectedTimeframe: e.target.value as any })}\n            className=\"px-3 py-2 border border-gray-300 rounded-md text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"1h\">Last Hour</option>\n            <option value=\"24h\">Last 24 Hours</option>\n            <option value=\"7d\">Last 7 Days</option>\n            <option value=\"30d\">Last 30 Days</option>\n            <option value=\"all\">All Time</option>\n          </select>\n          \n          <button\n            onClick={() => handleStateChange({ isRealTime: !state.isRealTime })}\n            className={`px-3 py-2 rounded-md text-sm font-medium flex items-center gap-2 ${\n              state.isRealTime \n                ? 'bg-green-100 text-green-700 hover:bg-green-200' \n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            }`}\n          >\n            {state.isRealTime ? <Play className=\"h-4 w-4\" /> : <Pause className=\"h-4 w-4\" />}\n            {state.isRealTime ? 'Real-Time' : 'Paused'}\n          </button>\n          \n          <button\n            onClick={loadAnalyticsData}\n            disabled={loading}\n            className=\"px-3 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700 disabled:opacity-50 flex items-center gap-2\"\n          >\n            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\n            Refresh\n          </button>\n          \n          <button\n            onClick={generateReport}\n            className=\"px-3 py-2 bg-purple-600 text-white rounded-md text-sm font-medium hover:bg-purple-700 flex items-center gap-2\"\n          >\n            <Download className=\"h-4 w-4\" />\n            Export\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 flex items-center gap-3\">\n          <AlertTriangle className=\"h-5 w-5 text-red-600\" />\n          <p className=\"text-red-800\">{error}</p>\n        </div>\n      )}\n\n      {/* Key Performance Indicators */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {performanceIndicators.map((indicator, index) => (\n          <motion.div\n            key={indicator.label}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1 }}\n          >\n            <Card className=\"bg-white\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm text-gray-600 mb-1\">{indicator.label}</p>\n                    <p className=\"text-2xl font-bold\" style={{ color: indicator.color }}>{indicator.value}</p>\n                    {indicator.change !== 0 && (\n                      <div className=\"flex items-center gap-1 mt-1\">\n                        {indicator.trend === 'up' ? (\n                          <TrendingUp className=\"h-4 w-4 text-green-600\" />\n                        ) : (\n                          <TrendingDown className=\"h-4 w-4 text-red-600\" />\n                        )}\n                        <span className={`text-sm ${indicator.change > 0 ? 'text-green-600' : 'text-red-600'}`}>\n                          {indicator.change > 0 ? '+' : ''}{indicator.change}\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"w-12 h-12 rounded-full flex items-center justify-center\" style={{ backgroundColor: `${indicator.color}20` }}>\n                    <Activity className=\"h-6 w-6\" style={{ color: indicator.color }} />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Real-Time Charts Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Accuracy Trend Chart */}\n        <Card className=\"bg-white\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <TrendingUp className=\"h-5 w-5\" />\n              Accuracy Trend (24h)\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <ComposedChart data={accuracyTrend}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                <XAxis dataKey=\"time\" tick={{ fontSize: 12 }} />\n                <YAxis tick={{ fontSize: 12 }} />\n                <Tooltip \n                  contentStyle={{ \n                    backgroundColor: 'white', \n                    border: '1px solid #e2e8f0', \n                    borderRadius: '8px',\n                    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                  }} \n                />\n                <Legend />\n                <Area \n                  type=\"monotone\" \n                  dataKey=\"accuracy\" \n                  fill={`${COLORS.primary}20`} \n                  stroke={COLORS.primary} \n                  strokeWidth={2}\n                  name=\"Accuracy %\"\n                />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"confidence\" \n                  stroke={COLORS.secondary} \n                  strokeWidth={2}\n                  strokeDasharray=\"5 5\"\n                  name=\"Confidence %\"\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        {/* Predictive Insights */}\n        <Card className=\"bg-white\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Lightbulb className=\"h-5 w-5\" />\n              Predictive Insights\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4 max-h-80 overflow-y-auto\">\n              <AnimatePresence>\n                {predictiveInsights.slice(0, 3).map((insight, index) => (\n                  <motion.div\n                    key={insight.id}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: 20 }}\n                    transition={{ delay: index * 0.1 }}\n                    className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\"\n                  >\n                    <div className=\"flex items-start justify-between mb-2\">\n                      <h4 className=\"font-medium text-gray-900\">{insight.title}</h4>\n                      <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full\">\n                        {insight.confidence}% confidence\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mb-3\">{insight.description}</p>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-xs text-gray-500\">{insight.timeframe} forecast</span>\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-xs text-gray-500\">Impact:</span>\n                        <span className={`text-xs px-2 py-1 rounded-full ${\n                          insight.impact === 'high' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n                        }`}>\n                          {insight.impact === 'high' ? 'High' : 'Moderate'}\n                        </span>\n                      </div>\n                    </div>\n                  </motion.div>\n                ))}\n              </AnimatePresence>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Real-Time Insights Feed */}\n      {metrics?.insights && metrics.insights.length > 0 && (\n        <Card className=\"bg-white\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Eye className=\"h-5 w-5\" />\n              Real-Time Insights\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {metrics.insights.map((insight, index) => (\n                <motion.div\n                  key={insight.id}\n                  initial={{ opacity: 0, scale: 0.95 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ delay: index * 0.1 }}\n                  className={`p-4 rounded-lg border-l-4 ${getInsightBorderColor(insight.type)}`}\n                >\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <h4 className=\"font-medium text-gray-900\">{insight.title}</h4>\n                    <span className={`text-xs px-2 py-1 rounded-full ${getImpactColor(insight.impact)}`}>\n                      {insight.impact}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-2\">{insight.description}</p>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-xs text-gray-500\">{insight.confidence}% confidence</span>\n                    {insight.actionable && (\n                      <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full\">\n                        Actionable\n                      </span>\n                    )}\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default RealTimeAnalyticsDashboard;\n","/**\n * Real-Time Analytics View\n * Comprehensive real-time analytics dashboard with live metrics and predictive insights\n */\n\nimport React from 'react';\nimport RealTimeAnalyticsDashboard from '../components/analytics/RealTimeAnalyticsDashboard';\n\nconst RealTimeAnalyticsView: React.FC = () => {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <RealTimeAnalyticsDashboard />\n    </div>\n  );\n};\n\nexport default RealTimeAnalyticsView;\n"],"names":["__iconNode","Lightbulb","createLucideIcon","selectXAxisWithScale","state","xAxisId","_yAxisId","isPanorama","selectAxisWithScale","selectXAxisTicks","selectTicksOfGraphicalItem","selectYAxisWithScale","_xAxisId","yAxisId","selectYAxisTicks","selectBandSize","createSelector","selectChartLayout","layout","xAxis","yAxis","xAxisTicks","yAxisTicks","isCategoricalAxis","getBandSizeOfAxis","pickAreaId","_state","_isPanorama","id","selectSynchronisedAreaSettings","selectUnfilteredCartesianItems","graphicalItems","item","selectGraphicalItemStackedData","_stackGroups$stackId","areaSettings","isXAxisCategorical","stackGroups","selectStackGroups","stackId","stackSeriesIdentifier","getStackSeriesIdentifier","groups","v","selectArea","selectChartDataWithIndexesIfNotInPanorama","stackedData","_ref","bandSize","chartData","dataStartIndex","dataEndIndex","data","displayedData","chartBaseValue","computeArea","_excluded","_excluded2","_objectWithoutProperties","e","t","o","r","i","_objectWithoutPropertiesLoose","n","ownKeys","_objectSpread","_defineProperty","_toPropertyKey","_toPrimitive","_extends","getLegendItemColor","stroke","fill","computeLegendPayloadFromAreaData","props","dataKey","name","legendType","hide","getTooltipNameProp","getTooltipEntrySettings","strokeWidth","unit","renderDotItem","option","dotItem","React.isValidElement","React.cloneElement","className","clsx","React.createElement","Dot","shouldRenderDots","points","dot","Dots","clipPathId","needClip","clipDot","isClipDot","areaProps","svgPropertiesNoEvents","customDotProps","filterProps","dots","entry","dotProps","dotsProps","Layer","StaticArea","_ref2","baseLine","showLabels","type","connectNulls","isRange","propsWithoutId","allOtherProps","React.Fragment","Curve","LabelList","VerticalRect","_ref3","alpha","startY","endY","isWellBehavedNumber","height","maxX","isNumber","HorizontalRect","_ref4","startX","endX","width","maxY","ClipRect","_ref5","AreaWithAnimation","_ref6","previousPointsRef","previousBaselineRef","isAnimationActive","animationBegin","animationDuration","animationEasing","onAnimationStart","onAnimationEnd","animationId","useAnimationId","isAnimating","setIsAnimating","useState","handleAnimationEnd","useCallback","handleAnimationStart","prevPoints","prevBaseLine","JavascriptAnimate","prevPointsDiffFactor","stepPoints","index","prevPointIndex","prev","interpolate","stepBaseLine","isNullish","isNan","RenderArea","_ref7","useRef","AreaWithState","PureComponent","_filterProps","top","left","layerClass","dotSize","GraphicalItemClipPath","ActivePoints","defaultAreaProps","Global","AreaImpl","_useAppSelector","_resolveDefaultProps","resolveDefaultProps","activeDot","fillOpacity","everythingElse","useChartLayout","chartName","useChartName","useNeedsClip","useIsPanorama","useAppSelector","plotArea","usePlotArea","getBaseValue","itemBaseValue","baseValue","numericAxis","domain","domainMax","domainMin","_ref8","hasStack","isHorizontalLayout","value","getValueByDataKey","isBreakPoint","getCateCoordinateOfLine","Area","outsideProps","RegisterGraphicalItemId","SetLegendPayload","SetTooltipEntrySettings","SetCartesianGraphicalItem","getNormalizedStackId","allowedTooltipTypes","ComposedChart","forwardRef","ref","CartesianChart","arrayTooltipSearcher","DataPersistenceService","__publicField","error","resolve","reject","request","event","db","draftStore","analyticsStore","oracleStore","syncStore","storeName","operation","indexName","transaction","store","draftSession","userId","analytics","result","preferences","prediction","week","season","p","table","syncItem","sessionToken","authService","a","b","itemsToSync","baseUrl","__vite_import_meta_env__","response","key","ttl","cacheItem","allCache","now","draftSessions","oraclePredictions","pendingChanges","queuedItems","conflicts","oneMonthAgo","cutoffDate","allAnalytics","createDataPersistenceService","service","dataPersistenceService","EnhancedAnalyticsService","timeRangeDays","cacheKey","cached","currentUser","endDate","startDate","oracleAnalytics","performanceMetrics","historicalData","oracleAnalyticsService","enhancedMetrics","insights","charts","summary","report","accuracyTrend","weeklyConsistency","improvementRate","streakData","mostActiveCategory","comparative","metrics","bestCategory","trend","weeklyData","accuracy","keyFindings","recommendedActions","insight","nextReviewDate","dataDate","values","recent","sum","val","earlier","mean","variance","standardDeviation","sortedData","recentAvg","earlierAvg","accuracyTrends","currentStreak","bestStreak","tempStreak","threshold","predictionTypes","current","confidenceByType","userValue","average","topPercentile","normalizedValue","timeframe","baseOracleAnalytics","realTimeMetrics","change","hours","_","format","csvLines","enhancedAnalyticsService","useWebSocket","url","options","isConnected","setIsConnected","React","lastMessage","setLastMessage","interval","message","COLORS","RealTimeAnalyticsDashboard","getAccuracyColor","getInsightBorderColor","getImpactColor","impact","setMetrics","predictiveInsights","setPredictiveInsights","loading","setLoading","setError","setState","useEffect","loadAnalyticsData","updateMetrics","addNewInsight","realTimeData","err","generateMockRealTimeMetrics","generateMockPredictiveInsights","update","handleStateChange","updates","generateReport","blob","useMemo","pred","performanceIndicators","jsxDEV","RefreshCw","this","Play","Pause","Download","AlertTriangle","indicator","motion","Card","CardContent","TrendingUp","TrendingDown","Activity","CardHeader","CardTitle","ResponsiveContainer","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Line","AnimatePresence","Eye","RealTimeAnalyticsView"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}