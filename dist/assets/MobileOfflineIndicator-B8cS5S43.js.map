{"version":3,"file":"MobileOfflineIndicator-B8cS5S43.js","sources":["../../node_modules/lucide-react/dist/esm/icons/wifi-off.js","../../node_modules/lucide-react/dist/esm/icons/wifi.js","../../services/cacheService.ts","../../services/mobileOfflineService.ts","../../components/mobile/MobileOfflineIndicator.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.535.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 20h.01\", key: \"zekei9\" }],\n  [\"path\", { d: \"M8.5 16.429a5 5 0 0 1 7 0\", key: \"1bycff\" }],\n  [\"path\", { d: \"M5 12.859a10 10 0 0 1 5.17-2.69\", key: \"1dl1wf\" }],\n  [\"path\", { d: \"M19 12.859a10 10 0 0 0-2.007-1.523\", key: \"4k23kn\" }],\n  [\"path\", { d: \"M2 8.82a15 15 0 0 1 4.177-2.643\", key: \"1grhjp\" }],\n  [\"path\", { d: \"M22 8.82a15 15 0 0 0-11.288-3.764\", key: \"z3jwby\" }],\n  [\"path\", { d: \"m2 2 20 20\", key: \"1ooewy\" }]\n];\nconst WifiOff = createLucideIcon(\"wifi-off\", __iconNode);\n\nexport { __iconNode, WifiOff as default };\n//# sourceMappingURL=wifi-off.js.map\n","/**\n * @license lucide-react v0.535.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 20h.01\", key: \"zekei9\" }],\n  [\"path\", { d: \"M2 8.82a15 15 0 0 1 20 0\", key: \"dnpr2z\" }],\n  [\"path\", { d: \"M5 12.859a10 10 0 0 1 14 0\", key: \"1x1e6c\" }],\n  [\"path\", { d: \"M8.5 16.429a5 5 0 0 1 7 0\", key: \"1bycff\" }]\n];\nconst Wifi = createLucideIcon(\"wifi\", __iconNode);\n\nexport { __iconNode, Wifi as default };\n//# sourceMappingURL=wifi.js.map\n","/**\n * Advanced Caching Service for Astral Draft\n * Provides intelligent caching with TTL, LRU eviction, and persistence\n */\n\ninterface CacheItem<T> {\n  data: T;\n  timestamp: number;\n  ttl: number;\n  accessCount: number;\n  lastAccess: number;\n}\n\ninterface CacheConfig {\n  maxSize: number;\n  defaultTTL: number;\n  enablePersistence: boolean;\n  storagePrefix: string;\n}\n\nclass CacheService {\n  private readonly cache: Map<string, CacheItem<any>> = new Map();\n  private readonly config: CacheConfig;\n  private cleanupInterval: NodeJS.Timeout | null = null;\n  private hitCount: number = 0;\n  private missCount: number = 0;\n\n  constructor(config: Partial<CacheConfig> = {}) {\n    this.config = {\n      maxSize: 100,\n      defaultTTL: 5 * 60 * 1000, // 5 minutes\n      enablePersistence: true,\n      storagePrefix: 'astral_cache_',\n      ...config\n    };\n\n    this.startCleanup();\n    this.loadFromStorage();\n  }\n\n  /**\n   * Store data in cache\n   */\n  set<T>(key: string, data: T, ttl?: number): void {\n    const now = Date.now();\n    const itemTTL = ttl || this.config.defaultTTL;\n\n    // Remove oldest item if cache is full\n    if (this.cache.size >= this.config.maxSize) {\n      this.evictLRU();\n    }\n\n    const item: CacheItem<T> = {\n      data,\n      timestamp: now,\n      ttl: itemTTL,\n      accessCount: 0,\n      lastAccess: now\n    };\n\n    this.cache.set(key, item);\n    this.persistItem(key, item);\n  }\n\n  /**\n   * Retrieve data from cache\n   */\n  get<T>(key: string): T | null {\n    const item = this.cache.get(key);\n    \n    if (!item) {\n      this.missCount++;\n      return null;\n    }\n\n    const now = Date.now();\n    \n    // Check if item has expired\n    if (now - item.timestamp > item.ttl) {\n      this.delete(key);\n      this.missCount++;\n      return null;\n    }\n\n    // Update access statistics\n    item.accessCount++;\n    item.lastAccess = now;\n    this.hitCount++;\n    \n    return item.data as T;\n  }\n\n  /**\n   * Delete item from cache\n   */\n  delete(key: string): boolean {\n    const deleted = this.cache.delete(key);\n    if (deleted && this.config.enablePersistence) {\n      localStorage.removeItem(this.config.storagePrefix + key);\n    }\n    return deleted;\n  }\n\n  /**\n   * Check if key exists and is not expired\n   */\n  has(key: string): boolean {\n    const item = this.cache.get(key);\n    if (!item) return false;\n    \n    const now = Date.now();\n    if (now - item.timestamp > item.ttl) {\n      this.delete(key);\n      return false;\n    }\n    \n    return true;\n  }\n\n  /**\n   * Clear all cache\n   */\n  clear(): void {\n    this.cache.clear();\n    if (this.config.enablePersistence) {\n      const keys = Object.keys(localStorage).filter(key => \n        key.startsWith(this.config.storagePrefix)\n      );\n      keys.forEach(key => localStorage.removeItem(key));\n    }\n  }\n\n  /**\n   * Get cache statistics\n   */\n  stats() {\n    const now = Date.now();\n    let expired = 0;\n    let total = 0;\n    let totalSize = 0;\n\n    for (const [, item] of this.cache.entries()) {\n      total++;\n      totalSize += JSON.stringify(item.data).length;\n      \n      if (now - item.timestamp > item.ttl) {\n        expired++;\n      }\n    }\n\n    return {\n      total,\n      expired,\n      size: totalSize,\n      maxSize: this.config.maxSize,\n      hitRatio: this.calculateHitRatio()\n    };\n  }\n\n  /**\n   * LRU eviction strategy\n   */\n  private evictLRU(): void {\n    let oldestKey = '';\n    let oldestAccess = Date.now();\n\n    for (const [key, item] of this.cache.entries()) {\n      if (item.lastAccess < oldestAccess) {\n        oldestAccess = item.lastAccess;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey) {\n      this.delete(oldestKey);\n    }\n  }\n\n  /**\n   * Cleanup expired items\n   */\n  private cleanup(): void {\n    const now = Date.now();\n    const keysToDelete: string[] = [];\n\n    for (const [key, item] of this.cache.entries()) {\n      if (now - item.timestamp > item.ttl) {\n        keysToDelete.push(key);\n      }\n    }\n\n    keysToDelete.forEach(key => this.delete(key));\n  }\n\n  /**\n   * Start periodic cleanup\n   */\n  private startCleanup(): void {\n    this.cleanupInterval = setInterval(() => {\n      this.cleanup();\n    }, 60000); // Clean up every minute\n  }\n\n  /**\n   * Stop cleanup interval\n   */\n  destroy(): void {\n    if (this.cleanupInterval) {\n      clearInterval(this.cleanupInterval);\n    }\n  }\n\n  /**\n   * Persist item to localStorage\n   */\n  private persistItem<T>(key: string, item: CacheItem<T>): void {\n    if (!this.config.enablePersistence) return;\n\n    try {\n      const serialized = JSON.stringify({\n        data: item.data,\n        timestamp: item.timestamp,\n        ttl: item.ttl\n      });\n      localStorage.setItem(this.config.storagePrefix + key, serialized);\n    } catch (error) {\n      console.warn('Failed to persist cache item:', error);\n    }\n  }\n\n  /**\n   * Load cache from localStorage\n   */\n  private loadFromStorage(): void {\n    if (!this.config.enablePersistence) return;\n\n    try {\n      const now = Date.now();\n      const keys = Object.keys(localStorage).filter(key => \n        key.startsWith(this.config.storagePrefix)\n      );\n\n      for (const storageKey of keys) {\n        const cacheKey = storageKey.replace(this.config.storagePrefix, '');\n        const itemData = localStorage.getItem(storageKey);\n        \n        if (itemData) {\n          const parsed = JSON.parse(itemData);\n          \n          // Check if item is still valid\n          if (now - parsed.timestamp < parsed.ttl) {\n            const item: CacheItem<any> = {\n              data: parsed.data,\n              timestamp: parsed.timestamp,\n              ttl: parsed.ttl,\n              accessCount: 0,\n              lastAccess: now\n            };\n            this.cache.set(cacheKey, item);\n          } else {\n            // Remove expired item from storage\n            localStorage.removeItem(storageKey);\n          }\n        }\n      }\n    } catch (error) {\n      console.warn('Failed to load cache from storage:', error);\n    }\n  }\n\n  /**\n   * Calculate cache hit ratio\n   */\n  private calculateHitRatio(): number {\n    const totalRequests = this.hitCount + this.missCount;\n    if (totalRequests === 0) return 0;\n    \n    return this.hitCount / totalRequests;\n  }\n\n  /**\n   * Memoization helper for functions\n   */\n  memoize<T extends (...args: any[]) => any>(\n    fn: T,\n    keyGenerator?: (...args: Parameters<T>) => string,\n    ttl?: number\n  ): T {\n    return ((...args: Parameters<T>) => {\n      const key = keyGenerator ? keyGenerator(...args) : JSON.stringify(args);\n      const cacheKey = `memoized_${fn.name}_${key}`;\n      \n      const cached = this.get(cacheKey);\n      if (cached !== null) {\n        return cached;\n      }\n      \n      const result = fn(...args);\n      this.set(cacheKey, result, ttl);\n      return result;\n    }) as T;\n  }\n}\n\n// Create singleton instances for different cache types\nexport const apiCache = new CacheService({\n  maxSize: 200,\n  defaultTTL: 5 * 60 * 1000, // 5 minutes\n  storagePrefix: 'astral_api_'\n});\n\nexport const playerCache = new CacheService({\n  maxSize: 1000,\n  defaultTTL: 10 * 60 * 1000, // 10 minutes\n  storagePrefix: 'astral_player_'\n});\n\nexport const gameCache = new CacheService({\n  maxSize: 500,\n  defaultTTL: 30 * 1000, // 30 seconds for live data\n  storagePrefix: 'astral_game_'\n});\n\nexport default CacheService;\n","/**\n * Mobile Offline Service\n * Enhanced offline functionality specifically for mobile draft management\n */\n\nimport { Player, Team, League } from '../types';\nimport CacheService from './cacheService';\n\ninterface DraftPick {\n    playerId: number;\n    teamId: number;\n    pick: number;\n    timestamp: number;\n    round: number;\n    pickInRound: number;\n}\n\ninterface OfflineAction {\n    id: string;\n    type: 'DRAFT_PLAYER' | 'UPDATE_ROSTER' | 'TRADE_PROPOSAL' | 'WAIVER_CLAIM' | 'SETTINGS_UPDATE';\n    payload: any;\n    timestamp: number;\n    retryCount: number;\n    maxRetries: number;\n}\n\ninterface OfflineData {\n    players: Player[];\n    teams: Team[];\n    leagues: League[];\n    userDrafts: DraftPick[];\n    lastSync: number;\n    version: string;\n}\n\ninterface OfflineState {\n    isOffline: boolean;\n    hasOfflineData: boolean;\n    pendingActions: OfflineAction[];\n    lastSync: Date | null;\n    syncInProgress: boolean;\n}\n\nclass MobileOfflineService {\n    private readonly STORAGE_KEYS = {\n        OFFLINE_DATA: 'astral_offline_data',\n        PENDING_ACTIONS: 'astral_pending_actions',\n        OFFLINE_STATE: 'astral_offline_state',\n        PLAYER_CACHE: 'astral_players_cache',\n        DRAFT_CACHE: 'astral_draft_cache'\n    };\n\n    private readonly CACHE_DURATION = {\n        PLAYERS: 24 * 60 * 60 * 1000, // 24 hours\n        LEAGUES: 60 * 60 * 1000,     // 1 hour\n        DRAFTS: 10 * 60 * 1000,      // 10 minutes\n        USER_DATA: 30 * 60 * 1000    // 30 minutes\n    };\n\n    private readonly cacheService: CacheService;\n    private offlineState: OfflineState;\n    private subscribers: Array<(state: OfflineState) => void> = [];\n    private networkStatusListener: (() => void) | null = null;\n\n    constructor() {\n        this.cacheService = new CacheService({\n            maxSize: 500,\n            defaultTTL: this.CACHE_DURATION.LEAGUES,\n            enablePersistence: true,\n            storagePrefix: 'mobile_offline_'\n        });\n\n        this.offlineState = this.loadOfflineState();\n        this.initializeNetworkMonitoring();\n        this.initializePeriodicSync();\n    }\n\n    /**\n     * Initialize network status monitoring\n     */\n    private initializeNetworkMonitoring(): void {\n        const updateOnlineStatus = () => {\n            const wasOffline = this.offlineState.isOffline;\n            this.offlineState.isOffline = !navigator.onLine;\n            \n            if (wasOffline && navigator.onLine) {\n                // Just came back online - trigger sync\n                this.syncPendingActions();\n            }\n            \n            this.notifySubscribers();\n        };\n\n        this.networkStatusListener = updateOnlineStatus;\n        window.addEventListener('online', updateOnlineStatus);\n        window.addEventListener('offline', updateOnlineStatus);\n        \n        // Initial status check\n        updateOnlineStatus();\n    }\n\n    /**\n     * Cache critical draft data for offline use\n     */\n    async cacheDraftData(players: Player[], leagues: League[], teams: Team[]): Promise<void> {\n        try {\n            const offlineData: OfflineData = {\n                players,\n                teams,\n                leagues,\n                userDrafts: [],\n                lastSync: Date.now(),\n                version: '1.0.0'\n            };\n\n            // Store in multiple locations for redundancy\n            localStorage.setItem(this.STORAGE_KEYS.OFFLINE_DATA, JSON.stringify(offlineData));\n            \n            // Cache individual collections for better performance\n            this.cacheService.set(this.STORAGE_KEYS.PLAYER_CACHE, players, this.CACHE_DURATION.PLAYERS);\n            this.cacheService.set('leagues_cache', leagues, this.CACHE_DURATION.LEAGUES);\n            this.cacheService.set('teams_cache', teams, this.CACHE_DURATION.USER_DATA);\n\n            this.offlineState.hasOfflineData = true;\n            this.offlineState.lastSync = new Date();\n            this.saveOfflineState();\n            \n            console.log('✅ Draft data cached for offline use', {\n                players: players.length,\n                leagues: leagues.length,\n                teams: teams.length\n            });\n        } catch (error) {\n            console.error('❌ Failed to cache draft data:', error);\n        }\n    }\n\n    /**\n     * Get cached players with offline fallback\n     */\n    getCachedPlayers(): Player[] {\n        try {\n            // Try cache first\n            let players = this.cacheService.get<Player[]>(this.STORAGE_KEYS.PLAYER_CACHE);\n            \n            if (!players) {\n                // Fallback to offline data\n                const offlineData = this.getOfflineData();\n                players = offlineData?.players || [];\n            }\n            \n            return players;\n        } catch (error) {\n            console.error('❌ Failed to get cached players:', error);\n            return [];\n        }\n    }\n\n    /**\n     * Get cached leagues with offline fallback\n     */\n    getCachedLeagues(): League[] {\n        try {\n            let leagues = this.cacheService.get<League[]>('leagues_cache');\n            \n            if (!leagues) {\n                const offlineData = this.getOfflineData();\n                leagues = offlineData?.leagues || [];\n            }\n            \n            return leagues;\n        } catch (error) {\n            console.error('❌ Failed to get cached leagues:', error);\n            return [];\n        }\n    }\n\n    /**\n     * Queue action for when back online\n     */\n    queueOfflineAction(type: OfflineAction['type'], payload: any): string {\n        const action: OfflineAction = {\n            id: `${type}_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n            type,\n            payload,\n            timestamp: Date.now(),\n            retryCount: 0,\n            maxRetries: 3\n        };\n\n        this.offlineState.pendingActions.push(action);\n        this.savePendingActions();\n        \n        console.log('📋 Queued offline action:', action.type, action.id);\n        return action.id;\n    }\n\n    /**\n     * Execute a draft pick offline\n     */\n    async draftPlayerOffline(playerId: number, teamId: number, pick: number): Promise<boolean> {\n        try {\n            // Cache the pick locally\n            const draftPick: DraftPick = {\n                playerId,\n                teamId,\n                pick,\n                timestamp: Date.now(),\n                round: Math.ceil(pick / 12), // Assuming 12 teams\n                pickInRound: ((pick - 1) % 12) + 1\n            };\n\n            // Store pick in cache\n            const existingPicks = this.cacheService.get<DraftPick[]>(this.STORAGE_KEYS.DRAFT_CACHE) || [];\n            existingPicks.push(draftPick);\n            this.cacheService.set(this.STORAGE_KEYS.DRAFT_CACHE, existingPicks, this.CACHE_DURATION.DRAFTS);\n\n            // Queue for sync when online\n            this.queueOfflineAction('DRAFT_PLAYER', {\n                playerId,\n                teamId,\n                pick,\n                timestamp: draftPick.timestamp\n            });\n\n            console.log('✅ Player drafted offline:', { playerId, teamId, pick });\n            return true;\n        } catch (error) {\n            console.error('❌ Failed to draft player offline:', error);\n            return false;\n        }\n    }\n\n    /**\n     * Sync pending actions when back online\n     */\n    async syncPendingActions(): Promise<void> {\n        if (this.offlineState.isOffline || this.offlineState.syncInProgress) {\n            return;\n        }\n\n        this.offlineState.syncInProgress = true;\n        this.notifySubscribers();\n\n        try {\n            const actionsToSync = [...this.offlineState.pendingActions];\n            const successfulActions: string[] = [];\n\n            for (const action of actionsToSync) {\n                try {\n                    const success = await this.executeAction(action);\n                    if (success) {\n                        successfulActions.push(action.id);\n                    } else {\n                        action.retryCount++;\n                        if (action.retryCount >= action.maxRetries) {\n                            console.warn('⚠️ Action failed after max retries:', action.id);\n                            successfulActions.push(action.id); // Remove failed actions\n                        }\n                    }\n                } catch (error) {\n                    console.error('❌ Failed to sync action:', action.id, error);\n                    action.retryCount++;\n                }\n            }\n\n            // Remove successful actions\n            this.offlineState.pendingActions = this.offlineState.pendingActions.filter(\n                action => !successfulActions.includes(action.id)\n            );\n\n            this.savePendingActions();\n            this.offlineState.lastSync = new Date();\n            \n            console.log('✅ Sync completed:', {\n                synced: successfulActions.length,\n                remaining: this.offlineState.pendingActions.length\n            });\n        } catch (error) {\n            console.error('❌ Sync failed:', error);\n        } finally {\n            this.offlineState.syncInProgress = false;\n            this.saveOfflineState();\n            this.notifySubscribers();\n        }\n    }\n\n    /**\n     * Execute a pending action\n     */\n    private async executeAction(action: OfflineAction): Promise<boolean> {\n        // This would integrate with your existing API services\n        switch (action.type) {\n            case 'DRAFT_PLAYER':\n                // Call your draft API\n                return await this.syncDraftPlayer(action.payload);\n            case 'UPDATE_ROSTER':\n                // Call roster update API\n                return await this.syncRosterUpdate(action.payload);\n            case 'TRADE_PROPOSAL':\n                // Call trade proposal API\n                return await this.syncTradeProposal(action.payload);\n            default:\n                console.warn('Unknown action type:', action.type);\n                return false;\n        }\n    }\n\n    /**\n     * Sync draft player action\n     */\n    private async syncDraftPlayer(payload: any): Promise<boolean> {\n        try {\n            // Replace with actual API call\n            console.log('🔄 Syncing draft player:', payload);\n            \n            // Simulate API call delay\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            // For now, return true to simulate success\n            return true;\n        } catch (error) {\n            console.error('❌ Failed to sync draft player:', error);\n            return false;\n        }\n    }\n\n    /**\n     * Sync roster update action\n     */\n    private async syncRosterUpdate(payload: any): Promise<boolean> {\n        try {\n            console.log('🔄 Syncing roster update:', payload);\n            await new Promise(resolve => setTimeout(resolve, 500));\n            return true;\n        } catch (error) {\n            console.error('❌ Failed to sync roster update:', error);\n            return false;\n        }\n    }\n\n    /**\n     * Sync trade proposal action\n     */\n    private async syncTradeProposal(payload: any): Promise<boolean> {\n        try {\n            console.log('🔄 Syncing trade proposal:', payload);\n            await new Promise(resolve => setTimeout(resolve, 800));\n            return true;\n        } catch (error) {\n            console.error('❌ Failed to sync trade proposal:', error);\n            return false;\n        }\n    }\n\n    /**\n     * Get offline data from storage\n     */\n    private getOfflineData(): OfflineData | null {\n        try {\n            const data = localStorage.getItem(this.STORAGE_KEYS.OFFLINE_DATA);\n            return data ? JSON.parse(data) : null;\n        } catch (error) {\n            console.error('❌ Failed to get offline data:', error);\n            return null;\n        }\n    }\n\n    /**\n     * Load offline state from storage\n     */\n    private loadOfflineState(): OfflineState {\n        try {\n            const stored = localStorage.getItem(this.STORAGE_KEYS.OFFLINE_STATE);\n            if (stored) {\n                const state = JSON.parse(stored);\n                return {\n                    ...state,\n                    lastSync: state.lastSync ? new Date(state.lastSync) : null,\n                    syncInProgress: false // Always reset sync status on load\n                };\n            }\n        } catch (error) {\n            console.error('❌ Failed to load offline state:', error);\n        }\n\n        return {\n            isOffline: !navigator.onLine,\n            hasOfflineData: false,\n            pendingActions: [],\n            lastSync: null,\n            syncInProgress: false\n        };\n    }\n\n    /**\n     * Save offline state to storage\n     */\n    private saveOfflineState(): void {\n        try {\n            localStorage.setItem(this.STORAGE_KEYS.OFFLINE_STATE, JSON.stringify(this.offlineState));\n        } catch (error) {\n            console.error('❌ Failed to save offline state:', error);\n        }\n    }\n\n    /**\n     * Save pending actions to storage\n     */\n    private savePendingActions(): void {\n        try {\n            localStorage.setItem(this.STORAGE_KEYS.PENDING_ACTIONS, JSON.stringify(this.offlineState.pendingActions));\n        } catch (error) {\n            console.error('❌ Failed to save pending actions:', error);\n        }\n    }\n\n    /**\n     * Initialize periodic sync attempts\n     */\n    private initializePeriodicSync(): void {\n        setInterval(() => {\n            if (!this.offlineState.isOffline && this.offlineState.pendingActions.length > 0) {\n                this.syncPendingActions();\n            }\n        }, 30000); // Try sync every 30 seconds when online\n    }\n\n    /**\n     * Subscribe to offline state changes\n     */\n    subscribe(callback: (state: OfflineState) => void): () => void {\n        this.subscribers.push(callback);\n        \n        // Return unsubscribe function\n        return () => {\n            const index = this.subscribers.indexOf(callback);\n            if (index > -1) {\n                this.subscribers.splice(index, 1);\n            }\n        };\n    }\n\n    /**\n     * Notify all subscribers of state changes\n     */\n    private notifySubscribers(): void {\n        this.subscribers.forEach(callback => {\n            try {\n                callback(this.offlineState);\n            } catch (error) {\n                console.error('❌ Subscriber callback failed:', error);\n            }\n        });\n    }\n\n    /**\n     * Get current offline state\n     */\n    getState(): OfflineState {\n        return { ...this.offlineState };\n    }\n\n    /**\n     * Clear all offline data and cache\n     */\n    clearOfflineData(): void {\n        try {\n            Object.values(this.STORAGE_KEYS).forEach(key => {\n                localStorage.removeItem(key);\n            });\n            \n            this.offlineState = {\n                isOffline: !navigator.onLine,\n                hasOfflineData: false,\n                pendingActions: [],\n                lastSync: null,\n                syncInProgress: false\n            };\n            \n            console.log('✅ Offline data cleared');\n        } catch (error) {\n            console.error('❌ Failed to clear offline data:', error);\n        }\n    }\n\n    /**\n     * Cleanup resources\n     */\n    destroy(): void {\n        if (this.networkStatusListener) {\n            window.removeEventListener('online', this.networkStatusListener);\n            window.removeEventListener('offline', this.networkStatusListener);\n        }\n        this.subscribers = [];\n    }\n}\n\n// Export singleton instance\nexport const mobileOfflineService = new MobileOfflineService();\nexport default MobileOfflineService;\n","/**\n * Mobile Offline Indicator\n * Shows offline status and sync progress for mobile users\n */\n\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { mobileOfflineService } from '../../services/mobileOfflineService';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport {\n    announceToScreenReader,\n    useReducedMotion,\n} from '../../utils/mobileAccessibilityUtils';\n\nimport {\n    VisuallyHidden\n} from '../../utils/mobileAccessibilityComponents';\nimport {\n    WifiOffIcon,\n    WifiIcon,\n    RefreshCwIcon,\n    CheckCircleIcon,\n    ClockIcon\n} from 'lucide-react';\n\ninterface OfflineIndicatorProps {\n    className?: string;\n    position?: 'top' | 'bottom';\n    showDetails?: boolean;\n}\n\nconst MobileOfflineIndicator: React.FC<OfflineIndicatorProps> = ({\n    className = '',\n    position = 'top',\n    showDetails = false\n}) => {\n    const isMobile = useMediaQuery('(max-width: 768px)');\n    const [offlineState, setOfflineState] = React.useState(mobileOfflineService.getState());\n    const [showBanner, setShowBanner] = React.useState(false);\n    const [lastOnlineTime, setLastOnlineTime] = React.useState<Date | null>(null);\n    const prefersReducedMotion = useReducedMotion();\n\n    // Announce status changes to screen readers\n    React.useEffect(() => {\n        const unsubscribe = mobileOfflineService.subscribe((state) => {\n            const previousOfflineStatus = offlineState.isOffline;\n            setOfflineState(state);\n            \n            // Announce status changes\n            if (state.isOffline !== previousOfflineStatus) {\n                const message = state.isOffline \n                    ? 'Connection lost. You are now offline. Draft data will be saved locally and synced when reconnected.'\n                    : 'Connection restored. You are now online. Syncing pending changes.';\n                announceToScreenReader(message, 'assertive');\n            }\n            \n            // Show banner when going offline or coming back online\n            if (state.isOffline !== previousOfflineStatus) {\n                setShowBanner(true);\n                \n                if (!state.isOffline) {\n                    setLastOnlineTime(new Date());\n                    // Hide banner after successful reconnection\n                    setTimeout(() => setShowBanner(false), 3000);\n                } else {\n                    // Keep banner visible while offline\n                    setShowBanner(true);\n                }\n            }\n        });\n\n        return unsubscribe;\n    }, [offlineState.isOffline]);\n\n    React.useEffect(() => {\n        // Auto-hide banner after 5 seconds when going offline\n        if (offlineState.isOffline && showBanner) {\n            const timer = setTimeout(() => setShowBanner(false), 5000);\n            return () => clearTimeout(timer);\n        }\n    }, [offlineState.isOffline, showBanner]);\n\n    const getStatusIcon = () => {\n        if (offlineState.syncInProgress) {\n            return <RefreshCwIcon className={`w-4 h-4 ${!prefersReducedMotion ? 'animate-spin' : ''}`} />;\n        }\n        if (offlineState.isOffline) {\n            return <WifiOffIcon className=\"w-4 h-4\" />;\n        }\n        if (offlineState.pendingActions.length > 0) {\n            return <ClockIcon className=\"w-4 h-4\" />;\n        }\n        return <WifiIcon className=\"w-4 h-4\" />;\n    };\n\n    const getStatusText = () => {\n        if (offlineState.syncInProgress) {\n            return 'Syncing...';\n        }\n        if (offlineState.isOffline) {\n            return 'Offline Mode';\n        }\n        if (offlineState.pendingActions.length > 0) {\n            return `${offlineState.pendingActions.length} pending`;\n        }\n        return 'Online';\n    };\n\n    const getStatusColor = () => {\n        if (offlineState.syncInProgress) {\n            return 'text-blue-400 bg-blue-500/20';\n        }\n        if (offlineState.isOffline) {\n            return 'text-red-400 bg-red-500/20';\n        }\n        if (offlineState.pendingActions.length > 0) {\n            return 'text-yellow-400 bg-yellow-500/20';\n        }\n        return 'text-green-400 bg-green-500/20';\n    };\n\n    const getStatusDescription = () => {\n        if (offlineState.isOffline) {\n            return offlineState.hasOfflineData \n                ? 'You can continue drafting. Changes will sync when reconnected.'\n                : 'Limited functionality available. Try to reconnect.';\n        }\n        \n        if (offlineState.pendingActions.length > 0) {\n            return `Syncing ${offlineState.pendingActions.length} pending changes...`;\n        }\n        \n        return 'All changes have been synced successfully.';\n    };\n\n    const getBannerTitle = () => {\n        return offlineState.isOffline ? 'You\\'re offline' : 'Back online!';\n    };\n\n    const formatLastSync = () => {\n        if (!offlineState.lastSync) return 'Never';\n        \n        const now = new Date();\n        const diff = now.getTime() - offlineState.lastSync.getTime();\n        const minutes = Math.floor(diff / 60000);\n        \n        if (minutes < 1) return 'Just now';\n        if (minutes < 60) return `${minutes}m ago`;\n        \n        const hours = Math.floor(minutes / 60);\n        if (hours < 24) return `${hours}h ago`;\n        \n        const days = Math.floor(hours / 24);\n        return `${days}d ago`;\n    };\n\n    const handleBannerClick = () => {\n        if (!offlineState.isOffline && offlineState.pendingActions.length > 0) {\n            mobileOfflineService.syncPendingActions();\n            announceToScreenReader('Manually syncing pending changes', 'polite');\n        }\n    };\n\n    const handleSyncNow = (e: React.MouseEvent) => {\n        e.stopPropagation();\n        mobileOfflineService.syncPendingActions();\n        announceToScreenReader('Manual sync initiated', 'polite');\n    };\n\n    // Don't show on desktop unless specifically requested\n    if (!isMobile && !showDetails) {\n        return null;\n    }\n\n    const animationProps = prefersReducedMotion \n        ? { initial: { opacity: 0 }, animate: { opacity: 1 } }\n        : { initial: { opacity: 0, scale: 0.8 }, animate: { opacity: 1, scale: 1 } };\n\n    const bannerAnimationProps = prefersReducedMotion\n        ? { initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 } }\n        : { \n            initial: { y: position === 'top' ? -100 : 100, opacity: 0 },\n            animate: { y: 0, opacity: 1 },\n            exit: { y: position === 'top' ? -100 : 100, opacity: 0 }\n        };\n\n    return (\n        <>\n            {/* Persistent Status Indicator */}\n            <output\n                className={`fixed ${position === 'top' ? 'top-4' : 'bottom-4'} right-4 z-50 ${className}`}\n                aria-label={`Connection status: ${getStatusText()}`}\n            >\n                <motion.div\n                    {...animationProps}\n                    className={`flex items-center gap-2 px-3 py-2 rounded-full border border-[var(--panel-border)] ${getStatusColor()}`}\n                >\n                    {getStatusIcon()}\n                    <VisuallyHidden>\n                        Connection status: {getStatusText()}\n                        {offlineState.pendingActions.length > 0 && \n                            `, ${offlineState.pendingActions.length} actions pending sync`\n                        }\n                    </VisuallyHidden>\n                    {showDetails && (\n                        <span className=\"text-xs font-medium\">\n                            {getStatusText()}\n                        </span>\n                    )}\n                </motion.div>\n            </output>\n\n            {/* Status Change Banner */}\n            <AnimatePresence>\n                {showBanner && (\n                    <motion.div\n                        {...bannerAnimationProps}\n                        className={`fixed ${position === 'top' ? 'top-0' : 'bottom-0'} left-0 right-0 z-40`}\n                    >\n                        <button\n                            onClick={handleBannerClick}\n                            onKeyDown={(e: any) => {\n                                if (e.key === 'Enter' || e.key === ' ') {\n                                    e.preventDefault();\n                                    handleBannerClick();\n                                }\n                            }}\n                            disabled={!(!offlineState.isOffline && offlineState.pendingActions.length > 0)}\n                            className={`mx-4 my-2 p-4 rounded-lg border border-[var(--panel-border)] bg-[var(--panel-bg)] w-full text-left mobile-focus-ring ${\n                                (!offlineState.isOffline && offlineState.pendingActions.length > 0) \n                                    ? 'cursor-pointer hover:bg-[var(--panel-bg-hover)] transition-colors' \n                                    : 'cursor-default'\n                            }`}\n                            aria-label={`Connection status: ${getBannerTitle()}. ${getStatusDescription()}. ${\n                                (!offlineState.isOffline && offlineState.pendingActions.length > 0) \n                                    ? 'Press to sync pending changes.' \n                                    : ''\n                            }`}\n                        >\n                            <div className=\"flex items-center gap-3\">\n                                <div className={`p-2 rounded-full ${getStatusColor()}`}>\n                                    {getStatusIcon()}\n                                </div>\n                                \n                                <div className=\"flex-1\">\n                                    <div className=\"flex items-center justify-between\">\n                                        <h3 className=\"font-medium text-[var(--text-primary)]\">\n                                            {getBannerTitle()}\n                                        </h3>\n                                        \n                                        {!offlineState.isOffline && lastOnlineTime && (\n                                            <CheckCircleIcon className=\"w-5 h-5 text-green-400\" aria-hidden=\"true\" />\n                                        )}\n                                    </div>\n                                    \n                                    <p className=\"text-sm text-[var(--text-secondary)] mt-1\">\n                                        {getStatusDescription()}\n                                    </p>\n                                    \n                                    {showDetails && (\n                                        <div className=\"grid grid-cols-2 gap-4 mt-3 text-xs text-[var(--text-secondary)]\">\n                                            <div>\n                                                <span className=\"block font-medium\">Last Sync</span>\n                                                <span>{formatLastSync()}</span>\n                                            </div>\n                                            \n                                            <div>\n                                                <span className=\"block font-medium\">Pending Actions</span>\n                                                <span>{offlineState.pendingActions.length}</span>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                                \n                                {(offlineState.pendingActions.length > 0 && !offlineState.isOffline) && (\n                                    <button\n                                        onClick={handleSyncNow}\n                                        onKeyDown={(e: any) => {\n                                            if (e.key === 'Enter' || e.key === ' ') {\n                                                e.preventDefault();\n                                                handleSyncNow(e as any);\n                                            }\n                                        }}\n                                        className=\"px-3 py-1 bg-blue-500 text-white rounded text-sm font-medium hover:bg-blue-600 transition-colors mobile-focus-ring\"\n                                        aria-label=\"Manually sync pending changes now\"\n                                    >\n                                        Sync Now\n                                    </button>\n                                )}\n                            </div>\n                        </button>\n                    </motion.div>\n                )}\n            </AnimatePresence>\n\n            {/* Detailed Status Panel for Settings/Debug */}\n            {showDetails && (\n                <div className=\"bg-[var(--panel-bg)] border border-[var(--panel-border)] rounded-lg p-4 mt-4\">\n                    <h4 className=\"font-medium text-[var(--text-primary)] mb-3\">Offline Status Details</h4>\n                    \n                    <div className=\"space-y-3 text-sm\">\n                        <div className=\"flex justify-between\">\n                            <span className=\"text-[var(--text-secondary)]\">Connection Status:</span>\n                            <span className={offlineState.isOffline ? 'text-red-400' : 'text-green-400'}>\n                                {offlineState.isOffline ? 'Offline' : 'Online'}\n                            </span>\n                        </div>\n                        \n                        <div className=\"flex justify-between\">\n                            <span className=\"text-[var(--text-secondary)]\">Offline Data Available:</span>\n                            <span className={offlineState.hasOfflineData ? 'text-green-400' : 'text-red-400'}>\n                                {offlineState.hasOfflineData ? 'Yes' : 'No'}\n                            </span>\n                        </div>\n                        \n                        <div className=\"flex justify-between\">\n                            <span className=\"text-[var(--text-secondary)]\">Pending Actions:</span>\n                            <span className={offlineState.pendingActions.length > 0 ? 'text-yellow-400' : 'text-green-400'}>\n                                {offlineState.pendingActions.length}\n                            </span>\n                        </div>\n                        \n                        <div className=\"flex justify-between\">\n                            <span className=\"text-[var(--text-secondary)]\">Last Sync:</span>\n                            <span className=\"text-[var(--text-primary)]\">\n                                {formatLastSync()}\n                            </span>\n                        </div>\n                        \n                        <div className=\"flex justify-between\">\n                            <span className=\"text-[var(--text-secondary)]\">Sync in Progress:</span>\n                            <span className={offlineState.syncInProgress ? 'text-blue-400' : 'text-green-400'}>\n                                {offlineState.syncInProgress ? 'Yes' : 'No'}\n                            </span>\n                        </div>\n                    </div>\n                    \n                    {offlineState.pendingActions.length > 0 && (\n                        <div className=\"mt-4 pt-3 border-t border-[var(--panel-border)]\">\n                            <h5 className=\"font-medium text-[var(--text-primary)] mb-2\">Pending Actions:</h5>\n                            <div className=\"space-y-1 text-xs\">\n                                {offlineState.pendingActions.map((action, index) => (\n                                    <div key={action.id} className=\"flex justify-between text-[var(--text-secondary)]\">\n                                        <span>{action.type}</span>\n                                        <span>Retry {action.retryCount}/{action.maxRetries}</span>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default MobileOfflineIndicator;\n"],"names":["__iconNode","WifiOff","createLucideIcon","Wifi","CacheService","config","__publicField","key","data","ttl","now","itemTTL","item","deleted","expired","total","totalSize","oldestKey","oldestAccess","keysToDelete","serialized","error","keys","storageKey","cacheKey","itemData","parsed","totalRequests","fn","keyGenerator","args","cached","result","MobileOfflineService","updateOnlineStatus","wasOffline","players","leagues","teams","offlineData","type","payload","action","playerId","teamId","pick","draftPick","existingPicks","actionsToSync","successfulActions","resolve","stored","state","callback","index","mobileOfflineService","MobileOfflineIndicator","className","position","showDetails","isMobile","useMediaQuery","offlineState","setOfflineState","React","showBanner","setShowBanner","lastOnlineTime","setLastOnlineTime","prefersReducedMotion","useReducedMotion","previousOfflineStatus","message","announceToScreenReader","timer","getStatusIcon","jsxDEV","RefreshCwIcon","this","WifiOffIcon","ClockIcon","WifiIcon","getStatusText","getStatusColor","getStatusDescription","getBannerTitle","formatLastSync","diff","minutes","hours","handleBannerClick","handleSyncNow","e","animationProps","bannerAnimationProps","Fragment","motion","VisuallyHidden","AnimatePresence","CheckCircleIcon"],"mappings":"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","x_google_ignoreList":[0,1]}