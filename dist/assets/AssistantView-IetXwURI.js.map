{"version":3,"file":"AssistantView-IetXwURI.js","sources":["../../views/AssistantView.tsx"],"sourcesContent":["\n\n\nimport React from 'react';\nimport { useAppState } from '../contexts/AppContext';\nimport { streamAssistantResponse } from '../services/geminiService';\nimport ReactMarkdown from 'react-markdown';\nimport { SparklesIcon } from '../components/icons/SparklesIcon';\nimport type { GroundingChunk } from '../types';\nimport GroundingCitations from '../components/ui/GroundingCitations';\n\ninterface Message {\n    id: number;\n    sender: 'user' | 'ai';\n    text: string;\n    isLoading?: boolean;\n    groundingChunks?: GroundingChunk[];\n}\n\nconst AssistantView: React.FC = () => {\n    const { state, dispatch } = useAppState();\n    const [messages, setMessages] = React.useState<Message[]>([\n        { id: 1, sender: 'ai', text: \"Hello! I'm Astral, your personal fantasy football assistant. How can I help you win today?\" }\n    ]);\n    const [input, setInput] = React.useState('');\n    const [isSending, setIsSending] = React.useState(false);\n    const messagesEndRef = React.useRef<HTMLDivElement>(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    React.useEffect(() => {\n        setTimeout(scrollToBottom, 100);\n    }, [messages]);\n\n    const handleSend = async (prompt?: string) => {\n        const currentInput = prompt || input;\n        if (currentInput.trim() === '' || isSending) return;\n        \n        const userMessage: Message = { id: Date.now(), sender: 'user', text: currentInput };\n        const aiMessagePlaceholder: Message = { id: Date.now() + 1, sender: 'ai', text: '', isLoading: true, groundingChunks: [] };\n\n        setMessages(prev => [...prev, userMessage, aiMessagePlaceholder]);\n        setInput('');\n        setIsSending(true);\n\n        try {\n            const stream = await streamAssistantResponse(currentInput, state.leagues.filter(l => !l.isMock), state.user);\n            let fullText = \"\";\n            let collectedChunks: GroundingChunk[] = [];\n            for await (const chunk of stream) {\n                fullText += chunk.text;\n                const newChunks = chunk.candidates?.[0]?.groundingMetadata?.groundingChunks;\n                if (newChunks) {\n                    collectedChunks.push(...newChunks);\n                }\n                setMessages(prev => prev.map(msg => \n                    msg.id === aiMessagePlaceholder.id ? { ...msg, text: fullText } : msg\n                ));\n            }\n\n            const uniqueChunks = Array.from(new Map(collectedChunks.filter(c => c.web && c.web.uri).map(item => [item.web!.uri!, item])).values());\n\n            setMessages(prev => prev.map(msg => \n                msg.id === aiMessagePlaceholder.id ? { ...msg, isLoading: false, groundingChunks: uniqueChunks } : msg\n            ));\n\n        } catch (error) {\n            console.error(\"Error calling Gemini API:\", error);\n            setMessages(prev => prev.map(msg => \n                msg.id === aiMessagePlaceholder.id \n                ? { ...msg, text: \"My apologies, I'm having trouble connecting to the cosmos. Please try again shortly.\", isLoading: false }\n                : msg\n            ));\n        } finally {\n            setIsSending(false);\n        }\n    };\n    \n    const promptSuggestions = [\n        \"Analyze my team in 'My Awesome League'.\",\n        \"Who are some good waiver wire targets this week?\",\n        \"Help me with a trade idea.\",\n        \"What's the latest news on Christian McCaffrey?\",\n    ];\n\n    return (\n        <div className=\"w-full h-full flex flex-col p-4 sm:p-6 lg:p-8 overflow-hidden\">\n            <header className=\"flex-shrink-0 flex justify-between items-center mb-6\">\n                <div>\n                    <h1 className=\"font-display text-3xl sm:text-4xl font-extrabold tracking-wider uppercase flex items-center gap-3\">\n                        <SparklesIcon />\n                        <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-blue-400 via-purple-400 to-pink-500\">\n                           ASTRAL ASSISTANT\n                        </span>\n                    </h1>\n                </div>\n                <button onClick={() => dispatch({ type: 'SET_VIEW', payload: 'DASHBOARD' })} className=\"px-4 py-2 bg-white/10 rounded-lg text-sm hover:bg-white/20\">\n                    Back to Dashboard\n                </button>\n            </header>\n            <main className=\"flex-grow flex flex-col items-center glass-pane rounded-2xl overflow-hidden\">\n                <div className=\"flex-grow w-full max-w-4xl p-4 space-y-4 overflow-y-auto\">\n                    {messages.map((msg) => (\n                        <div key={msg.id} className={`flex gap-3 sm:gap-4 ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\n                            {msg.sender === 'ai' && <span className=\"text-xl sm:text-2xl mt-1 self-start flex-shrink-0\">âœ¨</span>}\n                            <div className={`max-w-[85%] p-3 rounded-lg text-sm sm:text-base leading-relaxed ${msg.sender === 'user' ? 'bg-cyan-600' : 'bg-black/20'}`}>\n                                {msg.isLoading ? (\n                                    <div className=\"flex items-center gap-1.5 p-1\">\n                                        <span style={{ animationDelay: '0ms' }} className=\"animate-pulse bg-white/50 rounded-full h-1.5 w-1.5\"></span>\n                                        <span style={{ animationDelay: '150ms' }} className=\"animate-pulse bg-white/50 rounded-full h-1.5 w-1.5\"></span>\n                                        <span style={{ animationDelay: '300ms' }} className=\"animate-pulse bg-white/50 rounded-full h-1.5 w-1.5\"></span>\n                                    </div>\n                                ) : (\n                                    <>\n                                        <div className=\"prose prose-sm prose-invert prose-p:my-0 prose-headings:my-2\">\n                                            <ReactMarkdown>{msg.text}</ReactMarkdown>\n                                        </div>\n                                        {msg.groundingChunks && msg.groundingChunks.length > 0 && (\n                                            <GroundingCitations chunks={msg.groundingChunks} />\n                                        )}\n                                    </>\n                                )}\n                            </div>\n                        </div>\n                    ))}\n                    <div ref={messagesEndRef} />\n                </div>\n                <div className=\"w-full max-w-4xl p-4 flex-shrink-0\">\n                    <div className=\"flex flex-wrap gap-2 mb-2 justify-center\">\n                        {messages.length <= 1 && promptSuggestions.map(prompt => (\n                            <button \n                                key={prompt}\n                                onClick={() => handleSend(prompt)}\n                                className=\"px-3 py-1 bg-white/10 text-xs rounded-full hover:bg-white/20\"\n                            >\n                                {prompt}\n                            </button>\n                        ))}\n                    </div>\n                    <div className=\"flex gap-2\">\n                        <input\n                            type=\"text\"\n                            placeholder={isSending ? \"Astral is thinking...\" : \"Ask anything...\"}\n                            value={input}\n                            onChange={e => setInput(e.target.value)}\n                            onKeyDown={e => e.key === 'Enter' && handleSend()}\n                            disabled={isSending}\n                            className=\"flex-grow bg-black/10 dark:bg-gray-900/50 border border-[var(--panel-border)] rounded-lg px-4 py-3 text-sm placeholder:text-[var(--text-secondary)] focus:outline-none focus:ring-1 focus:ring-cyan-400 disabled:opacity-50\"\n                        />\n                        <button onClick={() => handleSend()} disabled={isSending || !input} className=\"px-6 py-3 bg-cyan-500 text-black font-bold text-sm rounded-lg hover:bg-cyan-400 disabled:opacity-50 disabled:cursor-not-allowed\">Send</button>\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n};\n\nexport default AssistantView;"],"names":["AssistantView","state","dispatch","useAppState","messages","setMessages","React","input","setInput","isSending","setIsSending","messagesEndRef","scrollToBottom","handleSend","prompt","currentInput","userMessage","aiMessagePlaceholder","prev","stream","streamAssistantResponse","l","fullText","collectedChunks","chunk","newChunks","msg","uniqueChunks","c","item","error","promptSuggestions","jsxDEV","SparklesIcon","this","Fragment","ReactMarkdown","GroundingCitations","e"],"mappings":"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"}